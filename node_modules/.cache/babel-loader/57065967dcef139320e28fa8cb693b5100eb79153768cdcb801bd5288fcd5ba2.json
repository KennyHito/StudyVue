{"ast":null,"code":"\"use strict\";\n\nexport default {\n  // thanks to https://github.com/marcj/css-element-queries\n  props: {\n    initial: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      size: {\n        width: -1,\n        height: -1\n      }\n    };\n  },\n  methods: {\n    reset: function reset() {\n      var expand = this.$el.firstChild;\n      var shrink = this.$el.lastChild;\n      expand.scrollLeft = 100000;\n      expand.scrollTop = 100000;\n      shrink.scrollLeft = 100000;\n      shrink.scrollTop = 100000;\n    },\n    update: function update() {\n      this.size.width = this.$el.offsetWidth;\n      this.size.height = this.$el.offsetHeight;\n    }\n  },\n  watch: {\n    size: {\n      deep: true,\n      handler: function handler(size) {\n        this.reset();\n        this.$emit('resize', {\n          width: this.size.width,\n          height: this.size.height\n        });\n      }\n    }\n  },\n  render: function render(create) {\n    var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n    var styleChild = 'position: absolute; left: 0; top: 0;';\n    return create('div', {\n      style: style + 'animation-name: resizeSensorVisibility;',\n      on: {\n        '~animationstart': this.update\n      }\n    }, [create('div', {\n      style: style,\n      on: {\n        scroll: this.update\n      }\n    }, [create('div', {\n      style: styleChild + 'width: 100000px; height: 100000px;'\n    })]), create('div', {\n      style: style,\n      on: {\n        scroll: this.update\n      }\n    }, [create('div', {\n      style: styleChild + 'width: 200%; height: 200%;'\n    })])]);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$emit('resize', {\n      width: 0,\n      height: 0\n    });\n    this.$emit('resizeSensorBeforeDestroy');\n  },\n  mounted: function mounted() {\n    if (this.initial === true) this.$nextTick(this.update);\n    if (this.$el.offsetParent !== this.$el.parentNode) this.$el.parentNode.style.position = 'relative';\n    if ('attachEvent' in this.$el && !('AnimationEvent' in window)) {\n      var onresizeHandler = function () {\n        this.update();\n        removeOnresizeEvent();\n      }.bind(this);\n      var removeOnresizeEvent = function () {\n        this.$el.detachEvent('onresize', onresizeHandler);\n        this.$off('resizeSensorBeforeDestroy', removeOnresizeEvent);\n      }.bind(this);\n      this.$el.attachEvent('onresize', onresizeHandler);\n      this.$on('resizeSensorBeforeDestroy', removeOnresizeEvent);\n      this.reset();\n    }\n  }\n};","map":{"version":3,"names":["props","initial","type","Boolean","default","data","size","width","height","methods","reset","expand","$el","firstChild","shrink","lastChild","scrollLeft","scrollTop","update","offsetWidth","offsetHeight","watch","deep","handler","$emit","render","create","style","styleChild","on","scroll","beforeDestroy","mounted","$nextTick","offsetParent","parentNode","position","window","onresizeHandler","removeOnresizeEvent","bind","detachEvent","$off","attachEvent","$on"],"sources":["node_modules/vue-resize-sensor/src/resize-sensor.vue"],"sourcesContent":["<style>\r\n@keyframes resizeSensorVisibility {\r\n\tfrom { top: 0; }\r\n}\r\n</style>\r\n\r\n<script>\r\n\"use strict\";\r\n\r\nexport default {\r\n\r\n\t// thanks to https://github.com/marcj/css-element-queries\r\n\tprops: {\r\n\t\tinitial: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t}\r\n\t},\r\n\tdata: function() {\r\n\t\treturn {\r\n\t\t\tsize: {\r\n\t\t\t\twidth: -1,\r\n\t\t\t\theight: -1\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\treset: function() {\r\n\r\n\t\t\tvar expand = this.$el.firstChild;\r\n\t\t\tvar shrink = this.$el.lastChild;\r\n\t\t\texpand.scrollLeft = 100000;\r\n\t\t\texpand.scrollTop = 100000;\r\n\t\t\tshrink.scrollLeft = 100000;\r\n\t\t\tshrink.scrollTop = 100000;\r\n\t\t},\r\n\t\tupdate: function() {\r\n\t\t\t\r\n\t\t\tthis.size.width = this.$el.offsetWidth;\r\n\t\t\tthis.size.height = this.$el.offsetHeight;\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tsize: {\r\n\t\t\tdeep: true,\r\n\t\t\thandler: function(size) {\r\n\t\t\t\t\r\n\t\t\t\tthis.reset();\r\n\t\t\t\tthis.$emit('resize', { width: this.size.width, height: this.size.height });\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\trender: function(create) {\r\n\t\t\r\n\t\tvar style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\r\n\t\tvar styleChild = 'position: absolute; left: 0; top: 0;';\r\n\r\n\t\treturn create('div', {\r\n\t\t\tstyle: style + 'animation-name: resizeSensorVisibility;',\r\n\t\t\ton: {\r\n\t\t\t\t'~animationstart': this.update\r\n\t\t\t}\r\n\t\t},[\r\n\t\t\tcreate('div', {\r\n\t\t\t\tstyle: style,\r\n\t\t\t\ton: {\r\n\t\t\t\t\tscroll: this.update\r\n\t\t\t\t}\r\n\t\t\t}, [\r\n\t\t\t\tcreate('div', {\r\n\t\t\t\t\tstyle: styleChild + 'width: 100000px; height: 100000px;'\r\n\t\t\t\t})\r\n\t\t\t]),\r\n\t\t\tcreate('div', {\r\n\t\t\t\tstyle: style,\r\n\t\t\t\ton: {\r\n\t\t\t\t\tscroll: this.update\r\n\t\t\t\t}\r\n\t\t\t}, [\r\n\t\t\t\tcreate('div', {\r\n\t\t\t\t\tstyle: styleChild + 'width: 200%; height: 200%;'\r\n\t\t\t\t})\r\n\t\t\t]),\r\n\t\t]);\r\n\t},\r\n\tbeforeDestroy: function() {\r\n\t\t\r\n\t\tthis.$emit('resize', { width: 0, height: 0 });\r\n\t\tthis.$emit('resizeSensorBeforeDestroy');\r\n\t},\r\n\tmounted: function() {\r\n\r\n\t\tif ( this.initial === true )\r\n\t\t\tthis.$nextTick(this.update);\r\n\t\t\r\n\t\tif ( this.$el.offsetParent !== this.$el.parentNode )\r\n\t\t\tthis.$el.parentNode.style.position = 'relative';\r\n\r\n\t\tif ( 'attachEvent' in this.$el && !('AnimationEvent' in window) ) {\r\n\r\n\t\t\tvar onresizeHandler = function() {\r\n\r\n\t\t\t\tthis.update();\r\n\t\t\t\tremoveOnresizeEvent();\r\n\t\t\t}.bind(this);\r\n\t\t\r\n\t\t\tvar removeOnresizeEvent = function() {\r\n\t\t\t\t\r\n\t\t\t\tthis.$el.detachEvent('onresize', onresizeHandler);\r\n\t\t\t\tthis.$off('resizeSensorBeforeDestroy', removeOnresizeEvent);\r\n\t\t\t}.bind(this);\r\n\t\t\t\r\n\t\t\tthis.$el.attachEvent('onresize', onresizeHandler);\r\n\t\t\tthis.$on('resizeSensorBeforeDestroy', removeOnresizeEvent);\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n</script>\r\n"],"mappings":"AAOA;;AAEA;EAEA;EACAA,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAEA,IAAAC,MAAA,QAAAC,GAAA,CAAAC,UAAA;MACA,IAAAC,MAAA,QAAAF,GAAA,CAAAG,SAAA;MACAJ,MAAA,CAAAK,UAAA;MACAL,MAAA,CAAAM,SAAA;MACAH,MAAA,CAAAE,UAAA;MACAF,MAAA,CAAAG,SAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MAEA,KAAAZ,IAAA,CAAAC,KAAA,QAAAK,GAAA,CAAAO,WAAA;MACA,KAAAb,IAAA,CAAAE,MAAA,QAAAI,GAAA,CAAAQ,YAAA;IACA;EACA;EACAC,KAAA;IACAf,IAAA;MACAgB,IAAA;MACAC,OAAA,WAAAA,QAAAjB,IAAA;QAEA,KAAAI,KAAA;QACA,KAAAc,KAAA;UAAAjB,KAAA,OAAAD,IAAA,CAAAC,KAAA;UAAAC,MAAA,OAAAF,IAAA,CAAAE;QAAA;MACA;IACA;EACA;EACAiB,MAAA,WAAAA,OAAAC,MAAA;IAEA,IAAAC,KAAA;IACA,IAAAC,UAAA;IAEA,OAAAF,MAAA;MACAC,KAAA,EAAAA,KAAA;MACAE,EAAA;QACA,wBAAAX;MACA;IACA,IACAQ,MAAA;MACAC,KAAA,EAAAA,KAAA;MACAE,EAAA;QACAC,MAAA,OAAAZ;MACA;IACA,IACAQ,MAAA;MACAC,KAAA,EAAAC,UAAA;IACA,GACA,GACAF,MAAA;MACAC,KAAA,EAAAA,KAAA;MACAE,EAAA;QACAC,MAAA,OAAAZ;MACA;IACA,IACAQ,MAAA;MACAC,KAAA,EAAAC,UAAA;IACA,GACA,EACA;EACA;EACAG,aAAA,WAAAA,cAAA;IAEA,KAAAP,KAAA;MAAAjB,KAAA;MAAAC,MAAA;IAAA;IACA,KAAAgB,KAAA;EACA;EACAQ,OAAA,WAAAA,QAAA;IAEA,SAAA/B,OAAA,WACA,KAAAgC,SAAA,MAAAf,MAAA;IAEA,SAAAN,GAAA,CAAAsB,YAAA,UAAAtB,GAAA,CAAAuB,UAAA,EACA,KAAAvB,GAAA,CAAAuB,UAAA,CAAAR,KAAA,CAAAS,QAAA;IAEA,0BAAAxB,GAAA,0BAAAyB,MAAA;MAEA,IAAAC,eAAA;QAEA,KAAApB,MAAA;QACAqB,mBAAA;MACA,EAAAC,IAAA;MAEA,IAAAD,mBAAA;QAEA,KAAA3B,GAAA,CAAA6B,WAAA,aAAAH,eAAA;QACA,KAAAI,IAAA,8BAAAH,mBAAA;MACA,EAAAC,IAAA;MAEA,KAAA5B,GAAA,CAAA+B,WAAA,aAAAL,eAAA;MACA,KAAAM,GAAA,8BAAAL,mBAAA;MACA,KAAA7B,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}