{"ast":null,"code":"var _superPropGet = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/superPropGet.js\").default;\nvar _toConsumableArray = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _callSuper = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/callSuper.js\").default;\nvar _inherits = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _regeneratorRuntime = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _typeof = require(\"/Users/apple/Study/Vue/VueProject/node_modules/@babel/runtime/helpers/typeof.js\").default;\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.symbol.to-string-tag.js\");\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.fill.js\");\nrequire(\"core-js/modules/es.array.from.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.join.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.array.sort.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nrequire(\"core-js/modules/es.array-buffer.constructor.js\");\nrequire(\"core-js/modules/es.array-buffer.slice.js\");\nrequire(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.global-this.js\");\nrequire(\"core-js/modules/es.json.stringify.js\");\nrequire(\"core-js/modules/es.json.to-string-tag.js\");\nrequire(\"core-js/modules/es.map.js\");\nrequire(\"core-js/modules/es.math.to-string-tag.js\");\nrequire(\"core-js/modules/es.number.is-integer.js\");\nrequire(\"core-js/modules/es.number.to-fixed.js\");\nrequire(\"core-js/modules/es.object.freeze.js\");\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\nrequire(\"core-js/modules/es.object.get-prototype-of.js\");\nrequire(\"core-js/modules/es.object.keys.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.promise.all-settled.js\");\nrequire(\"core-js/modules/es.regexp.constructor.js\");\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.sticky.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/es.string.pad-end.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/es.string.split.js\");\nrequire(\"core-js/modules/es.string.starts-with.js\");\nrequire(\"core-js/modules/es.string.trim.js\");\nrequire(\"core-js/modules/es.string.bold.js\");\nrequire(\"core-js/modules/es.string.italics.js\");\nrequire(\"core-js/modules/es.typed-array.float32-array.js\");\nrequire(\"core-js/modules/es.typed-array.float64-array.js\");\nrequire(\"core-js/modules/es.typed-array.int32-array.js\");\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\nrequire(\"core-js/modules/es.typed-array.uint32-array.js\");\nrequire(\"core-js/modules/es.typed-array.at.js\");\nrequire(\"core-js/modules/es.typed-array.copy-within.js\");\nrequire(\"core-js/modules/es.typed-array.every.js\");\nrequire(\"core-js/modules/es.typed-array.fill.js\");\nrequire(\"core-js/modules/es.typed-array.filter.js\");\nrequire(\"core-js/modules/es.typed-array.find.js\");\nrequire(\"core-js/modules/es.typed-array.find-index.js\");\nrequire(\"core-js/modules/es.typed-array.find-last.js\");\nrequire(\"core-js/modules/es.typed-array.find-last-index.js\");\nrequire(\"core-js/modules/es.typed-array.for-each.js\");\nrequire(\"core-js/modules/es.typed-array.includes.js\");\nrequire(\"core-js/modules/es.typed-array.index-of.js\");\nrequire(\"core-js/modules/es.typed-array.iterator.js\");\nrequire(\"core-js/modules/es.typed-array.join.js\");\nrequire(\"core-js/modules/es.typed-array.last-index-of.js\");\nrequire(\"core-js/modules/es.typed-array.map.js\");\nrequire(\"core-js/modules/es.typed-array.reduce.js\");\nrequire(\"core-js/modules/es.typed-array.reduce-right.js\");\nrequire(\"core-js/modules/es.typed-array.reverse.js\");\nrequire(\"core-js/modules/es.typed-array.set.js\");\nrequire(\"core-js/modules/es.typed-array.slice.js\");\nrequire(\"core-js/modules/es.typed-array.some.js\");\nrequire(\"core-js/modules/es.typed-array.sort.js\");\nrequire(\"core-js/modules/es.typed-array.subarray.js\");\nrequire(\"core-js/modules/es.typed-array.to-locale-string.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.to-string.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.weak-map.js\");\nrequire(\"core-js/modules/es.weak-set.js\");\nrequire(\"core-js/modules/esnext.iterator.constructor.js\");\nrequire(\"core-js/modules/esnext.iterator.every.js\");\nrequire(\"core-js/modules/esnext.iterator.for-each.js\");\nrequire(\"core-js/modules/esnext.iterator.map.js\");\nrequire(\"core-js/modules/esnext.iterator.some.js\");\nrequire(\"core-js/modules/web.atob.js\");\nrequire(\"core-js/modules/web.btoa.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nrequire(\"core-js/modules/web.dom-exception.constructor.js\");\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\nrequire(\"core-js/modules/web.dom-exception.to-string-tag.js\");\nrequire(\"core-js/modules/web.url.js\");\nrequire(\"core-js/modules/web.url.to-json.js\");\nrequire(\"core-js/modules/web.url-search-params.js\");\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __w_pdfjs_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __w_pdfjs_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __w_pdfjs_require__.c = installedModules;\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __w_pdfjs_require__.d = function (exports, name, getter) {\n      /******/if (!__w_pdfjs_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          enumerable: true,\n          get: getter\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // define __esModule on exports\n    /******/\n    __w_pdfjs_require__.r = function (exports) {\n      /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n    /******/ // create a fake namespace object\n    /******/ // mode & 1: value is a module id, require it\n    /******/ // mode & 2: merge all properties of value into the ns\n    /******/ // mode & 4: return value when already ns object\n    /******/ // mode & 8|1: behave like require\n    /******/\n    __w_pdfjs_require__.t = function (value, mode) {\n      /******/if (mode & 1) value = __w_pdfjs_require__(value);\n      /******/\n      if (mode & 8) return value;\n      /******/\n      if (mode & 4 && _typeof(value) === 'object' && value && value.__esModule) return value;\n      /******/\n      var ns = Object.create(null);\n      /******/\n      __w_pdfjs_require__.r(ns);\n      /******/\n      Object.defineProperty(ns, 'default', {\n        enumerable: true,\n        value: value\n      });\n      /******/\n      if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n        return value[key];\n      }.bind(null, key));\n      /******/\n      return ns;\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __w_pdfjs_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __w_pdfjs_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __w_pdfjs_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __w_pdfjs_require__.p = \"\";\n    /******/\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n    /******/\n  }\n  /************************************************************************/\n  /******/([(/* 0 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    Object.defineProperty(exports, \"addLinkAttributes\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.addLinkAttributes;\n      }\n    });\n    Object.defineProperty(exports, \"getFilenameFromUrl\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.getFilenameFromUrl;\n      }\n    });\n    Object.defineProperty(exports, \"LinkTarget\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.LinkTarget;\n      }\n    });\n    Object.defineProperty(exports, \"loadScript\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.loadScript;\n      }\n    });\n    Object.defineProperty(exports, \"PDFDateString\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.PDFDateString;\n      }\n    });\n    Object.defineProperty(exports, \"RenderingCancelledException\", {\n      enumerable: true,\n      get: function get() {\n        return _display_utils.RenderingCancelledException;\n      }\n    });\n    Object.defineProperty(exports, \"build\", {\n      enumerable: true,\n      get: function get() {\n        return _api.build;\n      }\n    });\n    Object.defineProperty(exports, \"getDocument\", {\n      enumerable: true,\n      get: function get() {\n        return _api.getDocument;\n      }\n    });\n    Object.defineProperty(exports, \"LoopbackPort\", {\n      enumerable: true,\n      get: function get() {\n        return _api.LoopbackPort;\n      }\n    });\n    Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n      enumerable: true,\n      get: function get() {\n        return _api.PDFDataRangeTransport;\n      }\n    });\n    Object.defineProperty(exports, \"PDFWorker\", {\n      enumerable: true,\n      get: function get() {\n        return _api.PDFWorker;\n      }\n    });\n    Object.defineProperty(exports, \"version\", {\n      enumerable: true,\n      get: function get() {\n        return _api.version;\n      }\n    });\n    Object.defineProperty(exports, \"CMapCompressionType\", {\n      enumerable: true,\n      get: function get() {\n        return _util.CMapCompressionType;\n      }\n    });\n    Object.defineProperty(exports, \"createObjectURL\", {\n      enumerable: true,\n      get: function get() {\n        return _util.createObjectURL;\n      }\n    });\n    Object.defineProperty(exports, \"createPromiseCapability\", {\n      enumerable: true,\n      get: function get() {\n        return _util.createPromiseCapability;\n      }\n    });\n    Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n      enumerable: true,\n      get: function get() {\n        return _util.createValidAbsoluteUrl;\n      }\n    });\n    Object.defineProperty(exports, \"InvalidPDFException\", {\n      enumerable: true,\n      get: function get() {\n        return _util.InvalidPDFException;\n      }\n    });\n    Object.defineProperty(exports, \"MissingPDFException\", {\n      enumerable: true,\n      get: function get() {\n        return _util.MissingPDFException;\n      }\n    });\n    Object.defineProperty(exports, \"OPS\", {\n      enumerable: true,\n      get: function get() {\n        return _util.OPS;\n      }\n    });\n    Object.defineProperty(exports, \"PasswordResponses\", {\n      enumerable: true,\n      get: function get() {\n        return _util.PasswordResponses;\n      }\n    });\n    Object.defineProperty(exports, \"PermissionFlag\", {\n      enumerable: true,\n      get: function get() {\n        return _util.PermissionFlag;\n      }\n    });\n    Object.defineProperty(exports, \"removeNullCharacters\", {\n      enumerable: true,\n      get: function get() {\n        return _util.removeNullCharacters;\n      }\n    });\n    Object.defineProperty(exports, \"shadow\", {\n      enumerable: true,\n      get: function get() {\n        return _util.shadow;\n      }\n    });\n    Object.defineProperty(exports, \"UnexpectedResponseException\", {\n      enumerable: true,\n      get: function get() {\n        return _util.UnexpectedResponseException;\n      }\n    });\n    Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n      enumerable: true,\n      get: function get() {\n        return _util.UNSUPPORTED_FEATURES;\n      }\n    });\n    Object.defineProperty(exports, \"Util\", {\n      enumerable: true,\n      get: function get() {\n        return _util.Util;\n      }\n    });\n    Object.defineProperty(exports, \"VerbosityLevel\", {\n      enumerable: true,\n      get: function get() {\n        return _util.VerbosityLevel;\n      }\n    });\n    Object.defineProperty(exports, \"AnnotationLayer\", {\n      enumerable: true,\n      get: function get() {\n        return _annotation_layer.AnnotationLayer;\n      }\n    });\n    Object.defineProperty(exports, \"apiCompatibilityParams\", {\n      enumerable: true,\n      get: function get() {\n        return _api_compatibility.apiCompatibilityParams;\n      }\n    });\n    Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n      enumerable: true,\n      get: function get() {\n        return _worker_options.GlobalWorkerOptions;\n      }\n    });\n    Object.defineProperty(exports, \"renderTextLayer\", {\n      enumerable: true,\n      get: function get() {\n        return _text_layer.renderTextLayer;\n      }\n    });\n    Object.defineProperty(exports, \"SVGGraphics\", {\n      enumerable: true,\n      get: function get() {\n        return _svg.SVGGraphics;\n      }\n    });\n    var _display_utils = __w_pdfjs_require__(1);\n    var _api = __w_pdfjs_require__(5);\n    var _util = __w_pdfjs_require__(2);\n    var _annotation_layer = __w_pdfjs_require__(16);\n    var _api_compatibility = __w_pdfjs_require__(7);\n    var _worker_options = __w_pdfjs_require__(10);\n    var _text_layer = __w_pdfjs_require__(17);\n    var _svg = __w_pdfjs_require__(18);\n    var pdfjsVersion = '2.5.207';\n    var pdfjsBuild = '0974d605';\n    {\n      var _w_pdfjs_require__ = __w_pdfjs_require__(4),\n        isNodeJS = _w_pdfjs_require__.isNodeJS;\n      if (isNodeJS) {\n        var PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n        (0, _api.setPDFNetworkStreamFactory)(function (params) {\n          return new PDFNodeStream(params);\n        });\n      } else {\n        var PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n        var PDFFetchStream;\n        if ((0, _display_utils.isFetchSupported)()) {\n          PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n        }\n        (0, _api.setPDFNetworkStreamFactory)(function (params) {\n          if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n            return new PDFFetchStream(params);\n          }\n          return new PDFNetworkStream(params);\n        });\n      }\n    }\n\n    /***/\n  }), (/* 1 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.addLinkAttributes = addLinkAttributes;\n    exports.getFilenameFromUrl = getFilenameFromUrl;\n    exports.isFetchSupported = isFetchSupported;\n    exports.isValidFetchUrl = isValidFetchUrl;\n    exports.loadScript = loadScript;\n    exports.deprecated = deprecated;\n    exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n    exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n    var SVG_NS = \"http://www.w3.org/2000/svg\";\n    var DOMCanvasFactory = /*#__PURE__*/function () {\n      function DOMCanvasFactory() {\n        _classCallCheck(this, DOMCanvasFactory);\n      }\n      return _createClass(DOMCanvasFactory, [{\n        key: \"create\",\n        value: function create(width, height) {\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n          var canvas = document.createElement(\"canvas\");\n          var context = canvas.getContext(\"2d\");\n          canvas.width = width;\n          canvas.height = height;\n          return {\n            canvas: canvas,\n            context: context\n          };\n        }\n      }, {\n        key: \"reset\",\n        value: function reset(canvasAndContext, width, height) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n          canvasAndContext.canvas.width = width;\n          canvasAndContext.canvas.height = height;\n        }\n      }, {\n        key: \"destroy\",\n        value: function destroy(canvasAndContext) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n          canvasAndContext.canvas.width = 0;\n          canvasAndContext.canvas.height = 0;\n          canvasAndContext.canvas = null;\n          canvasAndContext.context = null;\n        }\n      }]);\n    }();\n    exports.DOMCanvasFactory = DOMCanvasFactory;\n    var DOMCMapReaderFactory = /*#__PURE__*/function () {\n      function DOMCMapReaderFactory(_ref) {\n        var _ref$baseUrl = _ref.baseUrl,\n          baseUrl = _ref$baseUrl === void 0 ? null : _ref$baseUrl,\n          _ref$isCompressed = _ref.isCompressed,\n          isCompressed = _ref$isCompressed === void 0 ? false : _ref$isCompressed;\n        _classCallCheck(this, DOMCMapReaderFactory);\n        this.baseUrl = baseUrl;\n        this.isCompressed = isCompressed;\n      }\n      return _createClass(DOMCMapReaderFactory, [{\n        key: \"fetch\",\n        value: function (_fetch) {\n          function fetch(_x) {\n            return _fetch.apply(this, arguments);\n          }\n          fetch.toString = function () {\n            return _fetch.toString();\n          };\n          return fetch;\n        }(/*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n            var _this = this;\n            var name, url, compressionType;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  name = _ref2.name;\n                  if (this.baseUrl) {\n                    _context2.next = 3;\n                    break;\n                  }\n                  throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n                case 3:\n                  if (name) {\n                    _context2.next = 5;\n                    break;\n                  }\n                  throw new Error(\"CMap name must be specified.\");\n                case 5:\n                  url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                  compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                  if (!(isFetchSupported() && isValidFetchUrl(url, document.baseURI))) {\n                    _context2.next = 9;\n                    break;\n                  }\n                  return _context2.abrupt(\"return\", fetch(url).then(/*#__PURE__*/function () {\n                    var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n                      var cMapData;\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) switch (_context.prev = _context.next) {\n                          case 0:\n                            if (response.ok) {\n                              _context.next = 2;\n                              break;\n                            }\n                            throw new Error(response.statusText);\n                          case 2:\n                            if (!_this.isCompressed) {\n                              _context.next = 10;\n                              break;\n                            }\n                            _context.t0 = Uint8Array;\n                            _context.next = 6;\n                            return response.arrayBuffer();\n                          case 6:\n                            _context.t1 = _context.sent;\n                            cMapData = new _context.t0(_context.t1);\n                            _context.next = 15;\n                            break;\n                          case 10:\n                            _context.t2 = (0, _util.stringToBytes);\n                            _context.next = 13;\n                            return response.text();\n                          case 13:\n                            _context.t3 = _context.sent;\n                            cMapData = (0, _context.t2)(_context.t3);\n                          case 15:\n                            return _context.abrupt(\"return\", {\n                              cMapData: cMapData,\n                              compressionType: compressionType\n                            });\n                          case 16:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }, _callee);\n                    }));\n                    return function (_x3) {\n                      return _ref4.apply(this, arguments);\n                    };\n                  }()).catch(function (reason) {\n                    throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                  }));\n                case 9:\n                  return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                    var request = new XMLHttpRequest();\n                    request.open(\"GET\", url, true);\n                    if (_this.isCompressed) {\n                      request.responseType = \"arraybuffer\";\n                    }\n                    request.onreadystatechange = function () {\n                      if (request.readyState !== XMLHttpRequest.DONE) {\n                        return;\n                      }\n                      if (request.status === 200 || request.status === 0) {\n                        var cMapData;\n                        if (_this.isCompressed && request.response) {\n                          cMapData = new Uint8Array(request.response);\n                        } else if (!_this.isCompressed && request.responseText) {\n                          cMapData = (0, _util.stringToBytes)(request.responseText);\n                        }\n                        if (cMapData) {\n                          resolve({\n                            cMapData: cMapData,\n                            compressionType: compressionType\n                          });\n                          return;\n                        }\n                      }\n                      reject(new Error(request.statusText));\n                    };\n                    request.send(null);\n                  }).catch(function (reason) {\n                    throw new Error(\"Unable to load \".concat(_this.isCompressed ? \"binary \" : \"\") + \"CMap at: \".concat(url));\n                  }));\n                case 10:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2, this);\n          }));\n          return function (_x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }())\n      }]);\n    }();\n    exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n    var DOMSVGFactory = /*#__PURE__*/function () {\n      function DOMSVGFactory() {\n        _classCallCheck(this, DOMSVGFactory);\n      }\n      return _createClass(DOMSVGFactory, [{\n        key: \"create\",\n        value: function create(width, height) {\n          (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n          var svg = document.createElementNS(SVG_NS, \"svg:svg\");\n          svg.setAttribute(\"version\", \"1.1\");\n          svg.setAttribute(\"width\", width + \"px\");\n          svg.setAttribute(\"height\", height + \"px\");\n          svg.setAttribute(\"preserveAspectRatio\", \"none\");\n          svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n          return svg;\n        }\n      }, {\n        key: \"createElement\",\n        value: function createElement(type) {\n          (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n          return document.createElementNS(SVG_NS, type);\n        }\n      }]);\n    }();\n    exports.DOMSVGFactory = DOMSVGFactory;\n    var PageViewport = /*#__PURE__*/function () {\n      function PageViewport(_ref5) {\n        var viewBox = _ref5.viewBox,\n          scale = _ref5.scale,\n          rotation = _ref5.rotation,\n          _ref5$offsetX = _ref5.offsetX,\n          offsetX = _ref5$offsetX === void 0 ? 0 : _ref5$offsetX,\n          _ref5$offsetY = _ref5.offsetY,\n          offsetY = _ref5$offsetY === void 0 ? 0 : _ref5$offsetY,\n          _ref5$dontFlip = _ref5.dontFlip,\n          dontFlip = _ref5$dontFlip === void 0 ? false : _ref5$dontFlip;\n        _classCallCheck(this, PageViewport);\n        this.viewBox = viewBox;\n        this.scale = scale;\n        this.rotation = rotation;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        var centerX = (viewBox[2] + viewBox[0]) / 2;\n        var centerY = (viewBox[3] + viewBox[1]) / 2;\n        var rotateA, rotateB, rotateC, rotateD;\n        rotation = rotation % 360;\n        rotation = rotation < 0 ? rotation + 360 : rotation;\n        switch (rotation) {\n          case 180:\n            rotateA = -1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = 1;\n            break;\n          case 90:\n            rotateA = 0;\n            rotateB = 1;\n            rotateC = 1;\n            rotateD = 0;\n            break;\n          case 270:\n            rotateA = 0;\n            rotateB = -1;\n            rotateC = -1;\n            rotateD = 0;\n            break;\n          case 0:\n            rotateA = 1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = -1;\n            break;\n          default:\n            throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n        }\n        if (dontFlip) {\n          rotateC = -rotateC;\n          rotateD = -rotateD;\n        }\n        var offsetCanvasX, offsetCanvasY;\n        var width, height;\n        if (rotateA === 0) {\n          offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n          width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        } else {\n          offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n          width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        }\n        this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n        this.width = width;\n        this.height = height;\n      }\n      return _createClass(PageViewport, [{\n        key: \"clone\",\n        value: function clone() {\n          var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref6$scale = _ref6.scale,\n            scale = _ref6$scale === void 0 ? this.scale : _ref6$scale,\n            _ref6$rotation = _ref6.rotation,\n            rotation = _ref6$rotation === void 0 ? this.rotation : _ref6$rotation,\n            _ref6$offsetX = _ref6.offsetX,\n            offsetX = _ref6$offsetX === void 0 ? this.offsetX : _ref6$offsetX,\n            _ref6$offsetY = _ref6.offsetY,\n            offsetY = _ref6$offsetY === void 0 ? this.offsetY : _ref6$offsetY,\n            _ref6$dontFlip = _ref6.dontFlip,\n            dontFlip = _ref6$dontFlip === void 0 ? false : _ref6$dontFlip;\n          return new PageViewport({\n            viewBox: this.viewBox.slice(),\n            scale: scale,\n            rotation: rotation,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            dontFlip: dontFlip\n          });\n        }\n      }, {\n        key: \"convertToViewportPoint\",\n        value: function convertToViewportPoint(x, y) {\n          return _util.Util.applyTransform([x, y], this.transform);\n        }\n      }, {\n        key: \"convertToViewportRectangle\",\n        value: function convertToViewportRectangle(rect) {\n          var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n          var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n          return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n        }\n      }, {\n        key: \"convertToPdfPoint\",\n        value: function convertToPdfPoint(x, y) {\n          return _util.Util.applyInverseTransform([x, y], this.transform);\n        }\n      }]);\n    }();\n    exports.PageViewport = PageViewport;\n    var RenderingCancelledException = /*#__PURE__*/function (_util$BaseException) {\n      function RenderingCancelledException(msg, type) {\n        var _this2;\n        _classCallCheck(this, RenderingCancelledException);\n        _this2 = _callSuper(this, RenderingCancelledException, [msg]);\n        _this2.type = type;\n        return _this2;\n      }\n      _inherits(RenderingCancelledException, _util$BaseException);\n      return _createClass(RenderingCancelledException);\n    }(_util.BaseException);\n    exports.RenderingCancelledException = RenderingCancelledException;\n    var LinkTarget = {\n      NONE: 0,\n      SELF: 1,\n      BLANK: 2,\n      PARENT: 3,\n      TOP: 4\n    };\n    exports.LinkTarget = LinkTarget;\n    function addLinkAttributes(link) {\n      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        url = _ref7.url,\n        target = _ref7.target,\n        rel = _ref7.rel,\n        _ref7$enabled = _ref7.enabled,\n        enabled = _ref7$enabled === void 0 ? true : _ref7$enabled;\n      (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n      var urlNullRemoved = (0, _util.removeNullCharacters)(url);\n      if (enabled) {\n        link.href = link.title = urlNullRemoved;\n      } else {\n        link.href = \"\";\n        link.title = \"Disabled: \".concat(urlNullRemoved);\n        link.onclick = function () {\n          return false;\n        };\n      }\n      var targetStr = \"\";\n      switch (target) {\n        case LinkTarget.NONE:\n          break;\n        case LinkTarget.SELF:\n          targetStr = \"_self\";\n          break;\n        case LinkTarget.BLANK:\n          targetStr = \"_blank\";\n          break;\n        case LinkTarget.PARENT:\n          targetStr = \"_parent\";\n          break;\n        case LinkTarget.TOP:\n          targetStr = \"_top\";\n          break;\n      }\n      link.target = targetStr;\n      link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n    }\n    function getFilenameFromUrl(url) {\n      var anchor = url.indexOf(\"#\");\n      var query = url.indexOf(\"?\");\n      var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n      return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n    }\n    var StatTimer = /*#__PURE__*/function () {\n      function StatTimer() {\n        _classCallCheck(this, StatTimer);\n        this.started = Object.create(null);\n        this.times = [];\n      }\n      return _createClass(StatTimer, [{\n        key: \"time\",\n        value: function time(name) {\n          if (name in this.started) {\n            (0, _util.warn)(\"Timer is already running for \".concat(name));\n          }\n          this.started[name] = Date.now();\n        }\n      }, {\n        key: \"timeEnd\",\n        value: function timeEnd(name) {\n          if (!(name in this.started)) {\n            (0, _util.warn)(\"Timer has not been started for \".concat(name));\n          }\n          this.times.push({\n            name: name,\n            start: this.started[name],\n            end: Date.now()\n          });\n          delete this.started[name];\n        }\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          var outBuf = [];\n          var longest = 0;\n          var _iterator = _createForOfIteratorHelper(this.times),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var time = _step.value;\n              var name = time.name;\n              if (name.length > longest) {\n                longest = name.length;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var _iterator2 = _createForOfIteratorHelper(this.times),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _time = _step2.value;\n              var duration = _time.end - _time.start;\n              outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return outBuf.join(\"\");\n        }\n      }]);\n    }();\n    exports.StatTimer = StatTimer;\n    function isFetchSupported() {\n      return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n    }\n    function isValidFetchUrl(url, baseUrl) {\n      try {\n        var _ref8 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n          protocol = _ref8.protocol;\n        return protocol === \"http:\" || protocol === \"https:\";\n      } catch (ex) {\n        return false;\n      }\n    }\n    function loadScript(src) {\n      return new Promise(function (resolve, reject) {\n        var script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = resolve;\n        script.onerror = function () {\n          reject(new Error(\"Cannot load script at: \".concat(script.src)));\n        };\n        (document.head || document.documentElement).appendChild(script);\n      });\n    }\n    function deprecated(details) {\n      console.log(\"Deprecated API usage: \" + details);\n    }\n    var pdfDateStringRegex;\n    var PDFDateString = /*#__PURE__*/function () {\n      function PDFDateString() {\n        _classCallCheck(this, PDFDateString);\n      }\n      return _createClass(PDFDateString, null, [{\n        key: \"toDateObject\",\n        value: function toDateObject(input) {\n          if (!input || !(0, _util.isString)(input)) {\n            return null;\n          }\n          if (!pdfDateStringRegex) {\n            pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n          }\n          var matches = pdfDateStringRegex.exec(input);\n          if (!matches) {\n            return null;\n          }\n          var year = parseInt(matches[1], 10);\n          var month = parseInt(matches[2], 10);\n          month = month >= 1 && month <= 12 ? month - 1 : 0;\n          var day = parseInt(matches[3], 10);\n          day = day >= 1 && day <= 31 ? day : 1;\n          var hour = parseInt(matches[4], 10);\n          hour = hour >= 0 && hour <= 23 ? hour : 0;\n          var minute = parseInt(matches[5], 10);\n          minute = minute >= 0 && minute <= 59 ? minute : 0;\n          var second = parseInt(matches[6], 10);\n          second = second >= 0 && second <= 59 ? second : 0;\n          var universalTimeRelation = matches[7] || \"Z\";\n          var offsetHour = parseInt(matches[8], 10);\n          offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n          var offsetMinute = parseInt(matches[9], 10) || 0;\n          offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n          if (universalTimeRelation === \"-\") {\n            hour += offsetHour;\n            minute += offsetMinute;\n          } else if (universalTimeRelation === \"+\") {\n            hour -= offsetHour;\n            minute -= offsetMinute;\n          }\n          return new Date(Date.UTC(year, month, day, hour, minute, second));\n        }\n      }]);\n    }();\n    exports.PDFDateString = PDFDateString;\n\n    /***/\n  }), (/* 2 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.arrayByteLength = arrayByteLength;\n    exports.arraysToBytes = arraysToBytes;\n    exports.assert = assert;\n    exports.bytesToString = bytesToString;\n    exports.createPromiseCapability = createPromiseCapability;\n    exports.getVerbosityLevel = getVerbosityLevel;\n    exports.info = info;\n    exports.isArrayBuffer = isArrayBuffer;\n    exports.isArrayEqual = isArrayEqual;\n    exports.isBool = isBool;\n    exports.isEmptyObj = isEmptyObj;\n    exports.isNum = isNum;\n    exports.isString = isString;\n    exports.isSameOrigin = isSameOrigin;\n    exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n    exports.removeNullCharacters = removeNullCharacters;\n    exports.setVerbosityLevel = setVerbosityLevel;\n    exports.shadow = shadow;\n    exports.string32 = string32;\n    exports.stringToBytes = stringToBytes;\n    exports.stringToPDFString = stringToPDFString;\n    exports.stringToUTF8String = stringToUTF8String;\n    exports.utf8StringToString = utf8StringToString;\n    exports.warn = warn;\n    exports.unreachable = unreachable;\n    exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n    __w_pdfjs_require__(3);\n    var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n    exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n    var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n    exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n    var PermissionFlag = {\n      PRINT: 0x04,\n      MODIFY_CONTENTS: 0x08,\n      COPY: 0x10,\n      MODIFY_ANNOTATIONS: 0x20,\n      FILL_INTERACTIVE_FORMS: 0x100,\n      COPY_FOR_ACCESSIBILITY: 0x200,\n      ASSEMBLE: 0x400,\n      PRINT_HIGH_QUALITY: 0x800\n    };\n    exports.PermissionFlag = PermissionFlag;\n    var TextRenderingMode = {\n      FILL: 0,\n      STROKE: 1,\n      FILL_STROKE: 2,\n      INVISIBLE: 3,\n      FILL_ADD_TO_PATH: 4,\n      STROKE_ADD_TO_PATH: 5,\n      FILL_STROKE_ADD_TO_PATH: 6,\n      ADD_TO_PATH: 7,\n      FILL_STROKE_MASK: 3,\n      ADD_TO_PATH_FLAG: 4\n    };\n    exports.TextRenderingMode = TextRenderingMode;\n    var ImageKind = {\n      GRAYSCALE_1BPP: 1,\n      RGB_24BPP: 2,\n      RGBA_32BPP: 3\n    };\n    exports.ImageKind = ImageKind;\n    var AnnotationType = {\n      TEXT: 1,\n      LINK: 2,\n      FREETEXT: 3,\n      LINE: 4,\n      SQUARE: 5,\n      CIRCLE: 6,\n      POLYGON: 7,\n      POLYLINE: 8,\n      HIGHLIGHT: 9,\n      UNDERLINE: 10,\n      SQUIGGLY: 11,\n      STRIKEOUT: 12,\n      STAMP: 13,\n      CARET: 14,\n      INK: 15,\n      POPUP: 16,\n      FILEATTACHMENT: 17,\n      SOUND: 18,\n      MOVIE: 19,\n      WIDGET: 20,\n      SCREEN: 21,\n      PRINTERMARK: 22,\n      TRAPNET: 23,\n      WATERMARK: 24,\n      THREED: 25,\n      REDACT: 26\n    };\n    exports.AnnotationType = AnnotationType;\n    var AnnotationStateModelType = {\n      MARKED: \"Marked\",\n      REVIEW: \"Review\"\n    };\n    exports.AnnotationStateModelType = AnnotationStateModelType;\n    var AnnotationMarkedState = {\n      MARKED: \"Marked\",\n      UNMARKED: \"Unmarked\"\n    };\n    exports.AnnotationMarkedState = AnnotationMarkedState;\n    var AnnotationReviewState = {\n      ACCEPTED: \"Accepted\",\n      REJECTED: \"Rejected\",\n      CANCELLED: \"Cancelled\",\n      COMPLETED: \"Completed\",\n      NONE: \"None\"\n    };\n    exports.AnnotationReviewState = AnnotationReviewState;\n    var AnnotationReplyType = {\n      GROUP: \"Group\",\n      REPLY: \"R\"\n    };\n    exports.AnnotationReplyType = AnnotationReplyType;\n    var AnnotationFlag = {\n      INVISIBLE: 0x01,\n      HIDDEN: 0x02,\n      PRINT: 0x04,\n      NOZOOM: 0x08,\n      NOROTATE: 0x10,\n      NOVIEW: 0x20,\n      READONLY: 0x40,\n      LOCKED: 0x80,\n      TOGGLENOVIEW: 0x100,\n      LOCKEDCONTENTS: 0x200\n    };\n    exports.AnnotationFlag = AnnotationFlag;\n    var AnnotationFieldFlag = {\n      READONLY: 0x0000001,\n      REQUIRED: 0x0000002,\n      NOEXPORT: 0x0000004,\n      MULTILINE: 0x0001000,\n      PASSWORD: 0x0002000,\n      NOTOGGLETOOFF: 0x0004000,\n      RADIO: 0x0008000,\n      PUSHBUTTON: 0x0010000,\n      COMBO: 0x0020000,\n      EDIT: 0x0040000,\n      SORT: 0x0080000,\n      FILESELECT: 0x0100000,\n      MULTISELECT: 0x0200000,\n      DONOTSPELLCHECK: 0x0400000,\n      DONOTSCROLL: 0x0800000,\n      COMB: 0x1000000,\n      RICHTEXT: 0x2000000,\n      RADIOSINUNISON: 0x2000000,\n      COMMITONSELCHANGE: 0x4000000\n    };\n    exports.AnnotationFieldFlag = AnnotationFieldFlag;\n    var AnnotationBorderStyleType = {\n      SOLID: 1,\n      DASHED: 2,\n      BEVELED: 3,\n      INSET: 4,\n      UNDERLINE: 5\n    };\n    exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n    var StreamType = {\n      UNKNOWN: \"UNKNOWN\",\n      FLATE: \"FLATE\",\n      LZW: \"LZW\",\n      DCT: \"DCT\",\n      JPX: \"JPX\",\n      JBIG: \"JBIG\",\n      A85: \"A85\",\n      AHX: \"AHX\",\n      CCF: \"CCF\",\n      RLX: \"RLX\"\n    };\n    exports.StreamType = StreamType;\n    var FontType = {\n      UNKNOWN: \"UNKNOWN\",\n      TYPE1: \"TYPE1\",\n      TYPE1C: \"TYPE1C\",\n      CIDFONTTYPE0: \"CIDFONTTYPE0\",\n      CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n      TRUETYPE: \"TRUETYPE\",\n      CIDFONTTYPE2: \"CIDFONTTYPE2\",\n      TYPE3: \"TYPE3\",\n      OPENTYPE: \"OPENTYPE\",\n      TYPE0: \"TYPE0\",\n      MMTYPE1: \"MMTYPE1\"\n    };\n    exports.FontType = FontType;\n    var VerbosityLevel = {\n      ERRORS: 0,\n      WARNINGS: 1,\n      INFOS: 5\n    };\n    exports.VerbosityLevel = VerbosityLevel;\n    var CMapCompressionType = {\n      NONE: 0,\n      BINARY: 1,\n      STREAM: 2\n    };\n    exports.CMapCompressionType = CMapCompressionType;\n    var OPS = {\n      dependency: 1,\n      setLineWidth: 2,\n      setLineCap: 3,\n      setLineJoin: 4,\n      setMiterLimit: 5,\n      setDash: 6,\n      setRenderingIntent: 7,\n      setFlatness: 8,\n      setGState: 9,\n      save: 10,\n      restore: 11,\n      transform: 12,\n      moveTo: 13,\n      lineTo: 14,\n      curveTo: 15,\n      curveTo2: 16,\n      curveTo3: 17,\n      closePath: 18,\n      rectangle: 19,\n      stroke: 20,\n      closeStroke: 21,\n      fill: 22,\n      eoFill: 23,\n      fillStroke: 24,\n      eoFillStroke: 25,\n      closeFillStroke: 26,\n      closeEOFillStroke: 27,\n      endPath: 28,\n      clip: 29,\n      eoClip: 30,\n      beginText: 31,\n      endText: 32,\n      setCharSpacing: 33,\n      setWordSpacing: 34,\n      setHScale: 35,\n      setLeading: 36,\n      setFont: 37,\n      setTextRenderingMode: 38,\n      setTextRise: 39,\n      moveText: 40,\n      setLeadingMoveText: 41,\n      setTextMatrix: 42,\n      nextLine: 43,\n      showText: 44,\n      showSpacedText: 45,\n      nextLineShowText: 46,\n      nextLineSetSpacingShowText: 47,\n      setCharWidth: 48,\n      setCharWidthAndBounds: 49,\n      setStrokeColorSpace: 50,\n      setFillColorSpace: 51,\n      setStrokeColor: 52,\n      setStrokeColorN: 53,\n      setFillColor: 54,\n      setFillColorN: 55,\n      setStrokeGray: 56,\n      setFillGray: 57,\n      setStrokeRGBColor: 58,\n      setFillRGBColor: 59,\n      setStrokeCMYKColor: 60,\n      setFillCMYKColor: 61,\n      shadingFill: 62,\n      beginInlineImage: 63,\n      beginImageData: 64,\n      endInlineImage: 65,\n      paintXObject: 66,\n      markPoint: 67,\n      markPointProps: 68,\n      beginMarkedContent: 69,\n      beginMarkedContentProps: 70,\n      endMarkedContent: 71,\n      beginCompat: 72,\n      endCompat: 73,\n      paintFormXObjectBegin: 74,\n      paintFormXObjectEnd: 75,\n      beginGroup: 76,\n      endGroup: 77,\n      beginAnnotations: 78,\n      endAnnotations: 79,\n      beginAnnotation: 80,\n      endAnnotation: 81,\n      paintJpegXObject: 82,\n      paintImageMaskXObject: 83,\n      paintImageMaskXObjectGroup: 84,\n      paintImageXObject: 85,\n      paintInlineImageXObject: 86,\n      paintInlineImageXObjectGroup: 87,\n      paintImageXObjectRepeat: 88,\n      paintImageMaskXObjectRepeat: 89,\n      paintSolidColorImageMask: 90,\n      constructPath: 91\n    };\n    exports.OPS = OPS;\n    var UNSUPPORTED_FEATURES = {\n      unknown: \"unknown\",\n      forms: \"forms\",\n      javaScript: \"javaScript\",\n      smask: \"smask\",\n      shadingPattern: \"shadingPattern\",\n      font: \"font\",\n      errorTilingPattern: \"errorTilingPattern\",\n      errorExtGState: \"errorExtGState\",\n      errorXObject: \"errorXObject\",\n      errorFontLoadType3: \"errorFontLoadType3\",\n      errorFontState: \"errorFontState\",\n      errorFontMissing: \"errorFontMissing\",\n      errorFontTranslate: \"errorFontTranslate\",\n      errorColorSpace: \"errorColorSpace\",\n      errorOperatorList: \"errorOperatorList\",\n      errorFontToUnicode: \"errorFontToUnicode\",\n      errorFontLoadNative: \"errorFontLoadNative\",\n      errorFontGetPath: \"errorFontGetPath\"\n    };\n    exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n    var PasswordResponses = {\n      NEED_PASSWORD: 1,\n      INCORRECT_PASSWORD: 2\n    };\n    exports.PasswordResponses = PasswordResponses;\n    var verbosity = VerbosityLevel.WARNINGS;\n    function setVerbosityLevel(level) {\n      if (Number.isInteger(level)) {\n        verbosity = level;\n      }\n    }\n    function getVerbosityLevel() {\n      return verbosity;\n    }\n    function info(msg) {\n      if (verbosity >= VerbosityLevel.INFOS) {\n        console.log(\"Info: \".concat(msg));\n      }\n    }\n    function warn(msg) {\n      if (verbosity >= VerbosityLevel.WARNINGS) {\n        console.log(\"Warning: \".concat(msg));\n      }\n    }\n    function unreachable(msg) {\n      throw new Error(msg);\n    }\n    function assert(cond, msg) {\n      if (!cond) {\n        unreachable(msg);\n      }\n    }\n    function isSameOrigin(baseUrl, otherUrl) {\n      var base;\n      try {\n        base = new URL(baseUrl);\n        if (!base.origin || base.origin === \"null\") {\n          return false;\n        }\n      } catch (e) {\n        return false;\n      }\n      var other = new URL(otherUrl, base);\n      return base.origin === other.origin;\n    }\n    function _isValidProtocol(url) {\n      if (!url) {\n        return false;\n      }\n      switch (url.protocol) {\n        case \"http:\":\n        case \"https:\":\n        case \"ftp:\":\n        case \"mailto:\":\n        case \"tel:\":\n          return true;\n        default:\n          return false;\n      }\n    }\n    function createValidAbsoluteUrl(url, baseUrl) {\n      if (!url) {\n        return null;\n      }\n      try {\n        var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n        if (_isValidProtocol(absoluteUrl)) {\n          return absoluteUrl;\n        }\n      } catch (ex) {}\n      return null;\n    }\n    function shadow(obj, prop, value) {\n      Object.defineProperty(obj, prop, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n      return value;\n    }\n    var BaseException = function BaseExceptionClosure() {\n      function BaseException(message) {\n        if (this.constructor === BaseException) {\n          unreachable(\"Cannot initialize BaseException.\");\n        }\n        this.message = message;\n        this.name = this.constructor.name;\n      }\n      BaseException.prototype = new Error();\n      BaseException.constructor = BaseException;\n      return BaseException;\n    }();\n    exports.BaseException = BaseException;\n    var PasswordException = /*#__PURE__*/function (_BaseException) {\n      function PasswordException(msg, code) {\n        var _this3;\n        _classCallCheck(this, PasswordException);\n        _this3 = _callSuper(this, PasswordException, [msg]);\n        _this3.code = code;\n        return _this3;\n      }\n      _inherits(PasswordException, _BaseException);\n      return _createClass(PasswordException);\n    }(BaseException);\n    exports.PasswordException = PasswordException;\n    var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n      function UnknownErrorException(msg, details) {\n        var _this4;\n        _classCallCheck(this, UnknownErrorException);\n        _this4 = _callSuper(this, UnknownErrorException, [msg]);\n        _this4.details = details;\n        return _this4;\n      }\n      _inherits(UnknownErrorException, _BaseException2);\n      return _createClass(UnknownErrorException);\n    }(BaseException);\n    exports.UnknownErrorException = UnknownErrorException;\n    var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n      function InvalidPDFException() {\n        _classCallCheck(this, InvalidPDFException);\n        return _callSuper(this, InvalidPDFException, arguments);\n      }\n      _inherits(InvalidPDFException, _BaseException3);\n      return _createClass(InvalidPDFException);\n    }(BaseException);\n    exports.InvalidPDFException = InvalidPDFException;\n    var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n      function MissingPDFException() {\n        _classCallCheck(this, MissingPDFException);\n        return _callSuper(this, MissingPDFException, arguments);\n      }\n      _inherits(MissingPDFException, _BaseException4);\n      return _createClass(MissingPDFException);\n    }(BaseException);\n    exports.MissingPDFException = MissingPDFException;\n    var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n      function UnexpectedResponseException(msg, status) {\n        var _this5;\n        _classCallCheck(this, UnexpectedResponseException);\n        _this5 = _callSuper(this, UnexpectedResponseException, [msg]);\n        _this5.status = status;\n        return _this5;\n      }\n      _inherits(UnexpectedResponseException, _BaseException5);\n      return _createClass(UnexpectedResponseException);\n    }(BaseException);\n    exports.UnexpectedResponseException = UnexpectedResponseException;\n    var FormatError = /*#__PURE__*/function (_BaseException6) {\n      function FormatError() {\n        _classCallCheck(this, FormatError);\n        return _callSuper(this, FormatError, arguments);\n      }\n      _inherits(FormatError, _BaseException6);\n      return _createClass(FormatError);\n    }(BaseException);\n    exports.FormatError = FormatError;\n    var AbortException = /*#__PURE__*/function (_BaseException7) {\n      function AbortException() {\n        _classCallCheck(this, AbortException);\n        return _callSuper(this, AbortException, arguments);\n      }\n      _inherits(AbortException, _BaseException7);\n      return _createClass(AbortException);\n    }(BaseException);\n    exports.AbortException = AbortException;\n    var NullCharactersRegExp = /\\x00/g;\n    function removeNullCharacters(str) {\n      if (typeof str !== \"string\") {\n        warn(\"The argument for removeNullCharacters must be a string.\");\n        return str;\n      }\n      return str.replace(NullCharactersRegExp, \"\");\n    }\n    function bytesToString(bytes) {\n      assert(bytes !== null && _typeof(bytes) === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n      var length = bytes.length;\n      var MAX_ARGUMENT_COUNT = 8192;\n      if (length < MAX_ARGUMENT_COUNT) {\n        return String.fromCharCode.apply(null, bytes);\n      }\n      var strBuf = [];\n      for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n        var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        strBuf.push(String.fromCharCode.apply(null, chunk));\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToBytes(str) {\n      assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n      var length = str.length;\n      var bytes = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        bytes[i] = str.charCodeAt(i) & 0xff;\n      }\n      return bytes;\n    }\n    function arrayByteLength(arr) {\n      if (arr.length !== undefined) {\n        return arr.length;\n      }\n      assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n      return arr.byteLength;\n    }\n    function arraysToBytes(arr) {\n      var length = arr.length;\n      if (length === 1 && arr[0] instanceof Uint8Array) {\n        return arr[0];\n      }\n      var resultLength = 0;\n      for (var i = 0; i < length; i++) {\n        resultLength += arrayByteLength(arr[i]);\n      }\n      var pos = 0;\n      var data = new Uint8Array(resultLength);\n      for (var _i = 0; _i < length; _i++) {\n        var item = arr[_i];\n        if (!(item instanceof Uint8Array)) {\n          if (typeof item === \"string\") {\n            item = stringToBytes(item);\n          } else {\n            item = new Uint8Array(item);\n          }\n        }\n        var itemLength = item.byteLength;\n        data.set(item, pos);\n        pos += itemLength;\n      }\n      return data;\n    }\n    function string32(value) {\n      return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n    }\n    function isLittleEndian() {\n      var buffer8 = new Uint8Array(4);\n      buffer8[0] = 1;\n      var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n      return view32[0] === 1;\n    }\n    var IsLittleEndianCached = {\n      get value() {\n        return shadow(this, \"value\", isLittleEndian());\n      }\n    };\n    exports.IsLittleEndianCached = IsLittleEndianCached;\n    function isEvalSupported() {\n      try {\n        new Function(\"\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    var IsEvalSupportedCached = {\n      get value() {\n        return shadow(this, \"value\", isEvalSupported());\n      }\n    };\n    exports.IsEvalSupportedCached = IsEvalSupportedCached;\n    var rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n    var Util = /*#__PURE__*/function () {\n      function Util() {\n        _classCallCheck(this, Util);\n      }\n      return _createClass(Util, null, [{\n        key: \"makeCssRgb\",\n        value: function makeCssRgb(r, g, b) {\n          rgbBuf[1] = r;\n          rgbBuf[3] = g;\n          rgbBuf[5] = b;\n          return rgbBuf.join(\"\");\n        }\n      }, {\n        key: \"transform\",\n        value: function transform(m1, m2) {\n          return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n        }\n      }, {\n        key: \"applyTransform\",\n        value: function applyTransform(p, m) {\n          var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n          var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n          return [xt, yt];\n        }\n      }, {\n        key: \"applyInverseTransform\",\n        value: function applyInverseTransform(p, m) {\n          var d = m[0] * m[3] - m[1] * m[2];\n          var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n          var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n          return [xt, yt];\n        }\n      }, {\n        key: \"getAxialAlignedBoundingBox\",\n        value: function getAxialAlignedBoundingBox(r, m) {\n          var p1 = Util.applyTransform(r, m);\n          var p2 = Util.applyTransform(r.slice(2, 4), m);\n          var p3 = Util.applyTransform([r[0], r[3]], m);\n          var p4 = Util.applyTransform([r[2], r[1]], m);\n          return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n        }\n      }, {\n        key: \"inverseTransform\",\n        value: function inverseTransform(m) {\n          var d = m[0] * m[3] - m[1] * m[2];\n          return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n        }\n      }, {\n        key: \"apply3dTransform\",\n        value: function apply3dTransform(m, v) {\n          return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n        }\n      }, {\n        key: \"singularValueDecompose2dScale\",\n        value: function singularValueDecompose2dScale(m) {\n          var transpose = [m[0], m[2], m[1], m[3]];\n          var a = m[0] * transpose[0] + m[1] * transpose[2];\n          var b = m[0] * transpose[1] + m[1] * transpose[3];\n          var c = m[2] * transpose[0] + m[3] * transpose[2];\n          var d = m[2] * transpose[1] + m[3] * transpose[3];\n          var first = (a + d) / 2;\n          var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n          var sx = first + second || 1;\n          var sy = first - second || 1;\n          return [Math.sqrt(sx), Math.sqrt(sy)];\n        }\n      }, {\n        key: \"normalizeRect\",\n        value: function normalizeRect(rect) {\n          var r = rect.slice(0);\n          if (rect[0] > rect[2]) {\n            r[0] = rect[2];\n            r[2] = rect[0];\n          }\n          if (rect[1] > rect[3]) {\n            r[1] = rect[3];\n            r[3] = rect[1];\n          }\n          return r;\n        }\n      }, {\n        key: \"intersect\",\n        value: function intersect(rect1, rect2) {\n          function compare(a, b) {\n            return a - b;\n          }\n          var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n          var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n          var result = [];\n          rect1 = Util.normalizeRect(rect1);\n          rect2 = Util.normalizeRect(rect2);\n          if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n            result[0] = orderedX[1];\n            result[2] = orderedX[2];\n          } else {\n            return null;\n          }\n          if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n            result[1] = orderedY[1];\n            result[3] = orderedY[2];\n          } else {\n            return null;\n          }\n          return result;\n        }\n      }]);\n    }();\n    exports.Util = Util;\n    var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n    function stringToPDFString(str) {\n      var length = str.length,\n        strBuf = [];\n      if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n        for (var i = 2; i < length; i += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n        }\n      } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n        for (var _i2 = 2; _i2 < length; _i2 += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n        }\n      } else {\n        for (var _i3 = 0; _i3 < length; ++_i3) {\n          var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n          strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n        }\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToUTF8String(str) {\n      return decodeURIComponent(escape(str));\n    }\n    function utf8StringToString(str) {\n      return unescape(encodeURIComponent(str));\n    }\n    function isEmptyObj(obj) {\n      for (var key in obj) {\n        return false;\n      }\n      return true;\n    }\n    function isBool(v) {\n      return typeof v === \"boolean\";\n    }\n    function isNum(v) {\n      return typeof v === \"number\";\n    }\n    function isString(v) {\n      return typeof v === \"string\";\n    }\n    function isArrayBuffer(v) {\n      return _typeof(v) === \"object\" && v !== null && v.byteLength !== undefined;\n    }\n    function isArrayEqual(arr1, arr2) {\n      if (arr1.length !== arr2.length) {\n        return false;\n      }\n      return arr1.every(function (element, index) {\n        return element === arr2[index];\n      });\n    }\n    function createPromiseCapability() {\n      var capability = Object.create(null);\n      var isSettled = false;\n      Object.defineProperty(capability, \"settled\", {\n        get: function get() {\n          return isSettled;\n        }\n      });\n      capability.promise = new Promise(function (resolve, reject) {\n        capability.resolve = function (data) {\n          isSettled = true;\n          resolve(data);\n        };\n        capability.reject = function (reason) {\n          isSettled = true;\n          reject(reason);\n        };\n      });\n      return capability;\n    }\n    var createObjectURL = function createObjectURLClosure() {\n      var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      return function createObjectURL(data, contentType) {\n        var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (!forceDataSchema && URL.createObjectURL) {\n          var blob = new Blob([data], {\n            type: contentType\n          });\n          return URL.createObjectURL(blob);\n        }\n        var buffer = \"data:\".concat(contentType, \";base64,\");\n        for (var i = 0, ii = data.length; i < ii; i += 3) {\n          var b1 = data[i] & 0xff;\n          var b2 = data[i + 1] & 0xff;\n          var b3 = data[i + 2] & 0xff;\n          var d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n          var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n          var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n          buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n        }\n        return buffer;\n      };\n    }();\n    exports.createObjectURL = createObjectURL;\n\n    /***/\n  }), (/* 3 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    var _is_node = __w_pdfjs_require__(4);\n    ;\n\n    /***/\n  }), (/* 4 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.isNodeJS = void 0;\n    var isNodeJS = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !process.versions.electron;\n    exports.isNodeJS = isNodeJS;\n\n    /***/\n  }), (/* 5 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getDocument = getDocument;\n    exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n    exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _display_utils = __w_pdfjs_require__(1);\n    var _font_loader = __w_pdfjs_require__(6);\n    var _api_compatibility = __w_pdfjs_require__(7);\n    var _canvas = __w_pdfjs_require__(8);\n    var _worker_options = __w_pdfjs_require__(10);\n    var _is_node = __w_pdfjs_require__(4);\n    var _message_handler = __w_pdfjs_require__(11);\n    var _metadata = __w_pdfjs_require__(12);\n    var _transport_stream = __w_pdfjs_require__(14);\n    var _webgl = __w_pdfjs_require__(15);\n    var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n    var RENDERING_CANCELLED_TIMEOUT = 100;\n    var createPDFNetworkStream;\n    function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n      createPDFNetworkStream = pdfNetworkStreamFactory;\n    }\n    function getDocument(src) {\n      var task = new PDFDocumentLoadingTask();\n      var source;\n      if (typeof src === \"string\") {\n        source = {\n          url: src\n        };\n      } else if ((0, _util.isArrayBuffer)(src)) {\n        source = {\n          data: src\n        };\n      } else if (src instanceof PDFDataRangeTransport) {\n        source = {\n          range: src\n        };\n      } else {\n        if (_typeof(src) !== \"object\") {\n          throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n        }\n        if (!src.url && !src.data && !src.range) {\n          throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n        }\n        source = src;\n      }\n      var params = Object.create(null);\n      var rangeTransport = null,\n        worker = null;\n      for (var key in source) {\n        if (key === \"url\" && typeof window !== \"undefined\") {\n          params[key] = new URL(source[key], window.location).href;\n          continue;\n        } else if (key === \"range\") {\n          rangeTransport = source[key];\n          continue;\n        } else if (key === \"worker\") {\n          worker = source[key];\n          continue;\n        } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n          var pdfBytes = source[key];\n          if (typeof pdfBytes === \"string\") {\n            params[key] = (0, _util.stringToBytes)(pdfBytes);\n          } else if (_typeof(pdfBytes) === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else {\n            throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n          }\n          continue;\n        }\n        params[key] = source[key];\n      }\n      params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n      params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n      params.ignoreErrors = params.stopAtErrors !== true;\n      params.fontExtraProperties = params.fontExtraProperties === true;\n      params.pdfBug = params.pdfBug === true;\n      if (!Number.isInteger(params.maxImageSize)) {\n        params.maxImageSize = -1;\n      }\n      if (typeof params.isEvalSupported !== \"boolean\") {\n        params.isEvalSupported = true;\n      }\n      if (typeof params.disableFontFace !== \"boolean\") {\n        params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n      }\n      if (typeof params.disableRange !== \"boolean\") {\n        params.disableRange = false;\n      }\n      if (typeof params.disableStream !== \"boolean\") {\n        params.disableStream = false;\n      }\n      if (typeof params.disableAutoFetch !== \"boolean\") {\n        params.disableAutoFetch = false;\n      }\n      (0, _util.setVerbosityLevel)(params.verbosity);\n      if (!worker) {\n        var workerParams = {\n          verbosity: params.verbosity,\n          port: _worker_options.GlobalWorkerOptions.workerPort\n        };\n        worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n        task._worker = worker;\n      }\n      var docId = task.docId;\n      worker.promise.then(function () {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n        var workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n        var networkStreamPromise = new Promise(function (resolve) {\n          var networkStream;\n          if (rangeTransport) {\n            networkStream = new _transport_stream.PDFDataTransportStream({\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            }, rangeTransport);\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            });\n          }\n          resolve(networkStream);\n        });\n        return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref9) {\n          var _ref10 = _slicedToArray(_ref9, 2),\n            workerId = _ref10[0],\n            networkStream = _ref10[1];\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        });\n      }).catch(task._capability.reject);\n      return task;\n    }\n    function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n      if (worker.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n      if (pdfDataRangeTransport) {\n        source.length = pdfDataRangeTransport.length;\n        source.initialData = pdfDataRangeTransport.initialData;\n        source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n      }\n      return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n        docId: docId,\n        apiVersion: '2.5.207',\n        source: {\n          data: source.data,\n          url: source.url,\n          password: source.password,\n          disableAutoFetch: source.disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize,\n          length: source.length\n        },\n        maxImageSize: source.maxImageSize,\n        disableFontFace: source.disableFontFace,\n        postMessageTransfers: worker.postMessageTransfers,\n        docBaseUrl: source.docBaseUrl,\n        ignoreErrors: source.ignoreErrors,\n        isEvalSupported: source.isEvalSupported,\n        fontExtraProperties: source.fontExtraProperties\n      }).then(function (workerId) {\n        if (worker.destroyed) {\n          throw new Error(\"Worker was destroyed\");\n        }\n        return workerId;\n      });\n    }\n    var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n      var nextDocumentId = 0;\n      var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n        function PDFDocumentLoadingTask() {\n          _classCallCheck(this, PDFDocumentLoadingTask);\n          this._capability = (0, _util.createPromiseCapability)();\n          this._transport = null;\n          this._worker = null;\n          this.docId = \"d\" + nextDocumentId++;\n          this.destroyed = false;\n          this.onPassword = null;\n          this.onProgress = null;\n          this.onUnsupportedFeature = null;\n        }\n        return _createClass(PDFDocumentLoadingTask, [{\n          key: \"promise\",\n          get: function get() {\n            return this._capability.promise;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            var _this6 = this;\n            this.destroyed = true;\n            var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n            return transportDestroyed.then(function () {\n              _this6._transport = null;\n              if (_this6._worker) {\n                _this6._worker.destroy();\n                _this6._worker = null;\n              }\n            });\n          }\n        }]);\n      }();\n      return PDFDocumentLoadingTask;\n    }();\n    var PDFDataRangeTransport = /*#__PURE__*/function () {\n      function PDFDataRangeTransport(length, initialData) {\n        var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        _classCallCheck(this, PDFDataRangeTransport);\n        this.length = length;\n        this.initialData = initialData;\n        this.progressiveDone = progressiveDone;\n        this._rangeListeners = [];\n        this._progressListeners = [];\n        this._progressiveReadListeners = [];\n        this._progressiveDoneListeners = [];\n        this._readyCapability = (0, _util.createPromiseCapability)();\n      }\n      return _createClass(PDFDataRangeTransport, [{\n        key: \"addRangeListener\",\n        value: function addRangeListener(listener) {\n          this._rangeListeners.push(listener);\n        }\n      }, {\n        key: \"addProgressListener\",\n        value: function addProgressListener(listener) {\n          this._progressListeners.push(listener);\n        }\n      }, {\n        key: \"addProgressiveReadListener\",\n        value: function addProgressiveReadListener(listener) {\n          this._progressiveReadListeners.push(listener);\n        }\n      }, {\n        key: \"addProgressiveDoneListener\",\n        value: function addProgressiveDoneListener(listener) {\n          this._progressiveDoneListeners.push(listener);\n        }\n      }, {\n        key: \"onDataRange\",\n        value: function onDataRange(begin, chunk) {\n          var _iterator3 = _createForOfIteratorHelper(this._rangeListeners),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var listener = _step3.value;\n              listener(begin, chunk);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }, {\n        key: \"onDataProgress\",\n        value: function onDataProgress(loaded, total) {\n          var _this7 = this;\n          this._readyCapability.promise.then(function () {\n            var _iterator4 = _createForOfIteratorHelper(_this7._progressListeners),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var listener = _step4.value;\n                listener(loaded, total);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          });\n        }\n      }, {\n        key: \"onDataProgressiveRead\",\n        value: function onDataProgressiveRead(chunk) {\n          var _this8 = this;\n          this._readyCapability.promise.then(function () {\n            var _iterator5 = _createForOfIteratorHelper(_this8._progressiveReadListeners),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var listener = _step5.value;\n                listener(chunk);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          });\n        }\n      }, {\n        key: \"onDataProgressiveDone\",\n        value: function onDataProgressiveDone() {\n          var _this9 = this;\n          this._readyCapability.promise.then(function () {\n            var _iterator6 = _createForOfIteratorHelper(_this9._progressiveDoneListeners),\n              _step6;\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var listener = _step6.value;\n                listener();\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          });\n        }\n      }, {\n        key: \"transportReady\",\n        value: function transportReady() {\n          this._readyCapability.resolve();\n        }\n      }, {\n        key: \"requestDataRange\",\n        value: function requestDataRange(begin, end) {\n          (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n        }\n      }, {\n        key: \"abort\",\n        value: function abort() {}\n      }]);\n    }();\n    exports.PDFDataRangeTransport = PDFDataRangeTransport;\n    var PDFDocumentProxy = /*#__PURE__*/function () {\n      function PDFDocumentProxy(pdfInfo, transport) {\n        _classCallCheck(this, PDFDocumentProxy);\n        this._pdfInfo = pdfInfo;\n        this._transport = transport;\n      }\n      return _createClass(PDFDocumentProxy, [{\n        key: \"numPages\",\n        get: function get() {\n          return this._pdfInfo.numPages;\n        }\n      }, {\n        key: \"fingerprint\",\n        get: function get() {\n          return this._pdfInfo.fingerprint;\n        }\n      }, {\n        key: \"getPage\",\n        value: function getPage(pageNumber) {\n          return this._transport.getPage(pageNumber);\n        }\n      }, {\n        key: \"getPageIndex\",\n        value: function getPageIndex(ref) {\n          return this._transport.getPageIndex(ref);\n        }\n      }, {\n        key: \"getDestinations\",\n        value: function getDestinations() {\n          return this._transport.getDestinations();\n        }\n      }, {\n        key: \"getDestination\",\n        value: function getDestination(id) {\n          return this._transport.getDestination(id);\n        }\n      }, {\n        key: \"getPageLabels\",\n        value: function getPageLabels() {\n          return this._transport.getPageLabels();\n        }\n      }, {\n        key: \"getPageLayout\",\n        value: function getPageLayout() {\n          return this._transport.getPageLayout();\n        }\n      }, {\n        key: \"getPageMode\",\n        value: function getPageMode() {\n          return this._transport.getPageMode();\n        }\n      }, {\n        key: \"getViewerPreferences\",\n        value: function getViewerPreferences() {\n          return this._transport.getViewerPreferences();\n        }\n      }, {\n        key: \"getOpenAction\",\n        value: function getOpenAction() {\n          return this._transport.getOpenAction();\n        }\n      }, {\n        key: \"getOpenActionDestination\",\n        value: function getOpenActionDestination() {\n          (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n          return this.getOpenAction().then(function (openAction) {\n            return openAction && openAction.dest ? openAction.dest : null;\n          });\n        }\n      }, {\n        key: \"getAttachments\",\n        value: function getAttachments() {\n          return this._transport.getAttachments();\n        }\n      }, {\n        key: \"getJavaScript\",\n        value: function getJavaScript() {\n          return this._transport.getJavaScript();\n        }\n      }, {\n        key: \"getOutline\",\n        value: function getOutline() {\n          return this._transport.getOutline();\n        }\n      }, {\n        key: \"getPermissions\",\n        value: function getPermissions() {\n          return this._transport.getPermissions();\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata() {\n          return this._transport.getMetadata();\n        }\n      }, {\n        key: \"getData\",\n        value: function getData() {\n          return this._transport.getData();\n        }\n      }, {\n        key: \"getDownloadInfo\",\n        value: function getDownloadInfo() {\n          return this._transport.downloadInfoCapability.promise;\n        }\n      }, {\n        key: \"getStats\",\n        value: function getStats() {\n          return this._transport.getStats();\n        }\n      }, {\n        key: \"cleanup\",\n        value: function cleanup() {\n          return this._transport.startCleanup();\n        }\n      }, {\n        key: \"destroy\",\n        value: function destroy() {\n          return this.loadingTask.destroy();\n        }\n      }, {\n        key: \"loadingParams\",\n        get: function get() {\n          return this._transport.loadingParams;\n        }\n      }, {\n        key: \"loadingTask\",\n        get: function get() {\n          return this._transport.loadingTask;\n        }\n      }]);\n    }();\n    exports.PDFDocumentProxy = PDFDocumentProxy;\n    var PDFPageProxy = /*#__PURE__*/function () {\n      function PDFPageProxy(pageIndex, pageInfo, transport) {\n        var pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        _classCallCheck(this, PDFPageProxy);\n        this._pageIndex = pageIndex;\n        this._pageInfo = pageInfo;\n        this._transport = transport;\n        this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n        this._pdfBug = pdfBug;\n        this.commonObjs = transport.commonObjs;\n        this.objs = new PDFObjects();\n        this.cleanupAfterRender = false;\n        this.pendingCleanup = false;\n        this.intentStates = Object.create(null);\n        this.destroyed = false;\n      }\n      return _createClass(PDFPageProxy, [{\n        key: \"pageNumber\",\n        get: function get() {\n          return this._pageIndex + 1;\n        }\n      }, {\n        key: \"rotate\",\n        get: function get() {\n          return this._pageInfo.rotate;\n        }\n      }, {\n        key: \"ref\",\n        get: function get() {\n          return this._pageInfo.ref;\n        }\n      }, {\n        key: \"userUnit\",\n        get: function get() {\n          return this._pageInfo.userUnit;\n        }\n      }, {\n        key: \"view\",\n        get: function get() {\n          return this._pageInfo.view;\n        }\n      }, {\n        key: \"getViewport\",\n        value: function getViewport() {\n          var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            scale = _ref11.scale,\n            _ref11$rotation = _ref11.rotation,\n            rotation = _ref11$rotation === void 0 ? this.rotate : _ref11$rotation,\n            _ref11$offsetX = _ref11.offsetX,\n            offsetX = _ref11$offsetX === void 0 ? 0 : _ref11$offsetX,\n            _ref11$offsetY = _ref11.offsetY,\n            offsetY = _ref11$offsetY === void 0 ? 0 : _ref11$offsetY,\n            _ref11$dontFlip = _ref11.dontFlip,\n            dontFlip = _ref11$dontFlip === void 0 ? false : _ref11$dontFlip;\n          return new _display_utils.PageViewport({\n            viewBox: this.view,\n            scale: scale,\n            rotation: rotation,\n            offsetX: offsetX,\n            offsetY: offsetY,\n            dontFlip: dontFlip\n          });\n        }\n      }, {\n        key: \"getAnnotations\",\n        value: function getAnnotations() {\n          var _ref12 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref12$intent = _ref12.intent,\n            intent = _ref12$intent === void 0 ? null : _ref12$intent;\n          if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n            this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n            this.annotationsIntent = intent;\n          }\n          return this.annotationsPromise;\n        }\n      }, {\n        key: \"render\",\n        value: function render(_ref13) {\n          var _this10 = this;\n          var canvasContext = _ref13.canvasContext,\n            viewport = _ref13.viewport,\n            _ref13$intent = _ref13.intent,\n            intent = _ref13$intent === void 0 ? \"display\" : _ref13$intent,\n            _ref13$enableWebGL = _ref13.enableWebGL,\n            enableWebGL = _ref13$enableWebGL === void 0 ? false : _ref13$enableWebGL,\n            _ref13$renderInteract = _ref13.renderInteractiveForms,\n            renderInteractiveForms = _ref13$renderInteract === void 0 ? false : _ref13$renderInteract,\n            _ref13$transform = _ref13.transform,\n            transform = _ref13$transform === void 0 ? null : _ref13$transform,\n            _ref13$imageLayer = _ref13.imageLayer,\n            imageLayer = _ref13$imageLayer === void 0 ? null : _ref13$imageLayer,\n            _ref13$canvasFactory = _ref13.canvasFactory,\n            canvasFactory = _ref13$canvasFactory === void 0 ? null : _ref13$canvasFactory,\n            _ref13$background = _ref13.background,\n            background = _ref13$background === void 0 ? null : _ref13$background;\n          if (this._stats) {\n            this._stats.time(\"Overall\");\n          }\n          var renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n          this.pendingCleanup = false;\n          if (!this.intentStates[renderingIntent]) {\n            this.intentStates[renderingIntent] = Object.create(null);\n          }\n          var intentState = this.intentStates[renderingIntent];\n          if (intentState.streamReaderCancelTimeout) {\n            clearTimeout(intentState.streamReaderCancelTimeout);\n            intentState.streamReaderCancelTimeout = null;\n          }\n          var canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n          var webGLContext = new _webgl.WebGLContext({\n            enable: enableWebGL\n          });\n          if (!intentState.displayReadyCapability) {\n            intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              renderInteractiveForms: renderInteractiveForms === true\n            });\n          }\n          var complete = function complete(error) {\n            var i = intentState.renderTasks.indexOf(internalRenderTask);\n            if (i >= 0) {\n              intentState.renderTasks.splice(i, 1);\n            }\n            if (_this10.cleanupAfterRender || renderingIntent === \"print\") {\n              _this10.pendingCleanup = true;\n            }\n            _this10._tryCleanup();\n            if (error) {\n              internalRenderTask.capability.reject(error);\n              _this10._abortOperatorList({\n                intentState: intentState,\n                reason: error\n              });\n            } else {\n              internalRenderTask.capability.resolve();\n            }\n            if (_this10._stats) {\n              _this10._stats.timeEnd(\"Rendering\");\n              _this10._stats.timeEnd(\"Overall\");\n            }\n          };\n          var internalRenderTask = new InternalRenderTask({\n            callback: complete,\n            params: {\n              canvasContext: canvasContext,\n              viewport: viewport,\n              transform: transform,\n              imageLayer: imageLayer,\n              background: background\n            },\n            objs: this.objs,\n            commonObjs: this.commonObjs,\n            operatorList: intentState.operatorList,\n            pageIndex: this._pageIndex,\n            canvasFactory: canvasFactoryInstance,\n            webGLContext: webGLContext,\n            useRequestAnimationFrame: renderingIntent !== \"print\",\n            pdfBug: this._pdfBug\n          });\n          if (!intentState.renderTasks) {\n            intentState.renderTasks = [];\n          }\n          intentState.renderTasks.push(internalRenderTask);\n          var renderTask = internalRenderTask.task;\n          intentState.displayReadyCapability.promise.then(function (transparency) {\n            if (_this10.pendingCleanup) {\n              complete();\n              return;\n            }\n            if (_this10._stats) {\n              _this10._stats.time(\"Rendering\");\n            }\n            internalRenderTask.initializeGraphics(transparency);\n            internalRenderTask.operatorListChanged();\n          }).catch(complete);\n          return renderTask;\n        }\n      }, {\n        key: \"getOperatorList\",\n        value: function getOperatorList() {\n          function operatorListChanged() {\n            if (intentState.operatorList.lastChunk) {\n              intentState.opListReadCapability.resolve(intentState.operatorList);\n              var i = intentState.renderTasks.indexOf(opListTask);\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n            }\n          }\n          var renderingIntent = \"oplist\";\n          if (!this.intentStates[renderingIntent]) {\n            this.intentStates[renderingIntent] = Object.create(null);\n          }\n          var intentState = this.intentStates[renderingIntent];\n          var opListTask;\n          if (!intentState.opListReadCapability) {\n            opListTask = {};\n            opListTask.operatorListChanged = operatorListChanged;\n            intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n            intentState.renderTasks = [];\n            intentState.renderTasks.push(opListTask);\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent\n            });\n          }\n          return intentState.opListReadCapability.promise;\n        }\n      }, {\n        key: \"streamTextContent\",\n        value: function streamTextContent() {\n          var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref14$normalizeWhite = _ref14.normalizeWhitespace,\n            normalizeWhitespace = _ref14$normalizeWhite === void 0 ? false : _ref14$normalizeWhite,\n            _ref14$disableCombine = _ref14.disableCombineTextItems,\n            disableCombineTextItems = _ref14$disableCombine === void 0 ? false : _ref14$disableCombine;\n          var TEXT_CONTENT_CHUNK_SIZE = 100;\n          return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n            pageIndex: this._pageIndex,\n            normalizeWhitespace: normalizeWhitespace === true,\n            combineTextItems: disableCombineTextItems !== true\n          }, {\n            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n            size: function size(textContent) {\n              return textContent.items.length;\n            }\n          });\n        }\n      }, {\n        key: \"getTextContent\",\n        value: function getTextContent() {\n          var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var readableStream = this.streamTextContent(params);\n          return new Promise(function (resolve, reject) {\n            function pump() {\n              reader.read().then(function (_ref15) {\n                var _textContent$items;\n                var value = _ref15.value,\n                  done = _ref15.done;\n                if (done) {\n                  resolve(textContent);\n                  return;\n                }\n                Object.assign(textContent.styles, value.styles);\n                (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n                pump();\n              }, reject);\n            }\n            var reader = readableStream.getReader();\n            var textContent = {\n              items: [],\n              styles: Object.create(null)\n            };\n            pump();\n          });\n        }\n      }, {\n        key: \"_destroy\",\n        value: function _destroy() {\n          var _this11 = this;\n          this.destroyed = true;\n          this._transport.pageCache[this._pageIndex] = null;\n          var waitOn = [];\n          Object.keys(this.intentStates).forEach(function (intent) {\n            var intentState = _this11.intentStates[intent];\n            _this11._abortOperatorList({\n              intentState: intentState,\n              reason: new Error(\"Page was destroyed.\"),\n              force: true\n            });\n            if (intent === \"oplist\") {\n              return;\n            }\n            intentState.renderTasks.forEach(function (renderTask) {\n              var renderCompleted = renderTask.capability.promise.catch(function () {});\n              waitOn.push(renderCompleted);\n              renderTask.cancel();\n            });\n          });\n          this.objs.clear();\n          this.annotationsPromise = null;\n          this.pendingCleanup = false;\n          return Promise.all(waitOn);\n        }\n      }, {\n        key: \"cleanup\",\n        value: function cleanup() {\n          var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          this.pendingCleanup = true;\n          return this._tryCleanup(resetStats);\n        }\n      }, {\n        key: \"_tryCleanup\",\n        value: function _tryCleanup() {\n          var _this12 = this;\n          var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {\n            var intentState = _this12.intentStates[intent];\n            return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n          })) {\n            return false;\n          }\n          Object.keys(this.intentStates).forEach(function (intent) {\n            delete _this12.intentStates[intent];\n          });\n          this.objs.clear();\n          this.annotationsPromise = null;\n          if (resetStats && this._stats) {\n            this._stats = new _display_utils.StatTimer();\n          }\n          this.pendingCleanup = false;\n          return true;\n        }\n      }, {\n        key: \"_startRenderPage\",\n        value: function _startRenderPage(transparency, intent) {\n          var intentState = this.intentStates[intent];\n          if (!intentState) {\n            return;\n          }\n          if (this._stats) {\n            this._stats.timeEnd(\"Page Request\");\n          }\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.resolve(transparency);\n          }\n        }\n      }, {\n        key: \"_renderPageChunk\",\n        value: function _renderPageChunk(operatorListChunk, intentState) {\n          for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n          }\n          intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n          for (var _i4 = 0; _i4 < intentState.renderTasks.length; _i4++) {\n            intentState.renderTasks[_i4].operatorListChanged();\n          }\n          if (operatorListChunk.lastChunk) {\n            this._tryCleanup();\n          }\n        }\n      }, {\n        key: \"_pumpOperatorList\",\n        value: function _pumpOperatorList(args) {\n          var _this13 = this;\n          (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n          var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n          var reader = readableStream.getReader();\n          var intentState = this.intentStates[args.intent];\n          intentState.streamReader = reader;\n          var _pump = function pump() {\n            reader.read().then(function (_ref16) {\n              var value = _ref16.value,\n                done = _ref16.done;\n              if (done) {\n                intentState.streamReader = null;\n                return;\n              }\n              if (_this13._transport.destroyed) {\n                return;\n              }\n              _this13._renderPageChunk(value, intentState);\n              _pump();\n            }, function (reason) {\n              intentState.streamReader = null;\n              if (_this13._transport.destroyed) {\n                return;\n              }\n              if (intentState.operatorList) {\n                intentState.operatorList.lastChunk = true;\n                for (var i = 0; i < intentState.renderTasks.length; i++) {\n                  intentState.renderTasks[i].operatorListChanged();\n                }\n                _this13._tryCleanup();\n              }\n              if (intentState.displayReadyCapability) {\n                intentState.displayReadyCapability.reject(reason);\n              } else if (intentState.opListReadCapability) {\n                intentState.opListReadCapability.reject(reason);\n              } else {\n                throw reason;\n              }\n            });\n          };\n          _pump();\n        }\n      }, {\n        key: \"_abortOperatorList\",\n        value: function _abortOperatorList(_ref17) {\n          var _this14 = this;\n          var intentState = _ref17.intentState,\n            reason = _ref17.reason,\n            _ref17$force = _ref17.force,\n            force = _ref17$force === void 0 ? false : _ref17$force;\n          (0, _util.assert)(reason instanceof Error || _typeof(reason) === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n          if (!intentState.streamReader) {\n            return;\n          }\n          if (!force) {\n            if (intentState.renderTasks.length !== 0) {\n              return;\n            }\n            if (reason instanceof _display_utils.RenderingCancelledException) {\n              intentState.streamReaderCancelTimeout = setTimeout(function () {\n                _this14._abortOperatorList({\n                  intentState: intentState,\n                  reason: reason,\n                  force: true\n                });\n                intentState.streamReaderCancelTimeout = null;\n              }, RENDERING_CANCELLED_TIMEOUT);\n              return;\n            }\n          }\n          intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n          intentState.streamReader = null;\n          if (this._transport.destroyed) {\n            return;\n          }\n          Object.keys(this.intentStates).some(function (intent) {\n            if (_this14.intentStates[intent] === intentState) {\n              delete _this14.intentStates[intent];\n              return true;\n            }\n            return false;\n          });\n          this.cleanup();\n        }\n      }, {\n        key: \"stats\",\n        get: function get() {\n          return this._stats;\n        }\n      }]);\n    }();\n    exports.PDFPageProxy = PDFPageProxy;\n    var LoopbackPort = /*#__PURE__*/function () {\n      function LoopbackPort() {\n        var defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        _classCallCheck(this, LoopbackPort);\n        this._listeners = [];\n        this._defer = defer;\n        this._deferred = Promise.resolve(undefined);\n      }\n      return _createClass(LoopbackPort, [{\n        key: \"postMessage\",\n        value: function postMessage(obj, transfers) {\n          var _this15 = this;\n          function cloneValue(value) {\n            if (_typeof(value) !== \"object\" || value === null) {\n              return value;\n            }\n            if (cloned.has(value)) {\n              return cloned.get(value);\n            }\n            var buffer, result;\n            if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n              var transferable = transfers && transfers.includes(buffer);\n              if (transferable) {\n                result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n              } else {\n                result = new value.constructor(value);\n              }\n              cloned.set(value, result);\n              return result;\n            }\n            result = Array.isArray(value) ? [] : {};\n            cloned.set(value, result);\n            for (var i in value) {\n              var desc = void 0,\n                p = value;\n              while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                p = Object.getPrototypeOf(p);\n              }\n              if (typeof desc.value === \"undefined\") {\n                continue;\n              }\n              if (typeof desc.value === \"function\") {\n                if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                  throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value[i]));\n                }\n                continue;\n              }\n              result[i] = cloneValue(desc.value);\n            }\n            return result;\n          }\n          if (!this._defer) {\n            this._listeners.forEach(function (listener) {\n              listener.call(_this15, {\n                data: obj\n              });\n            });\n            return;\n          }\n          var cloned = new WeakMap();\n          var e = {\n            data: cloneValue(obj)\n          };\n          this._deferred.then(function () {\n            _this15._listeners.forEach(function (listener) {\n              listener.call(_this15, e);\n            });\n          });\n        }\n      }, {\n        key: \"addEventListener\",\n        value: function addEventListener(name, listener) {\n          this._listeners.push(listener);\n        }\n      }, {\n        key: \"removeEventListener\",\n        value: function removeEventListener(name, listener) {\n          var i = this._listeners.indexOf(listener);\n          this._listeners.splice(i, 1);\n        }\n      }, {\n        key: \"terminate\",\n        value: function terminate() {\n          this._listeners.length = 0;\n        }\n      }]);\n    }();\n    exports.LoopbackPort = LoopbackPort;\n    var PDFWorker = function PDFWorkerClosure() {\n      var pdfWorkerPorts = new WeakMap();\n      var isWorkerDisabled = false;\n      var fallbackWorkerSrc;\n      var nextFakeWorkerId = 0;\n      var fakeWorkerCapability;\n      if (_is_node.isNodeJS && typeof require === \"function\") {\n        isWorkerDisabled = true;\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      } else if ((typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === \"object\" && \"currentScript\" in document) {\n        var pdfjsFilePath = document.currentScript && document.currentScript.src;\n        if (pdfjsFilePath) {\n          fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n        }\n      }\n      function _getWorkerSrc() {\n        if (_worker_options.GlobalWorkerOptions.workerSrc) {\n          return _worker_options.GlobalWorkerOptions.workerSrc;\n        }\n        if (typeof fallbackWorkerSrc !== \"undefined\") {\n          if (!_is_node.isNodeJS) {\n            (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n          return fallbackWorkerSrc;\n        }\n        throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      function getMainThreadWorkerMessageHandler() {\n        var mainWorkerMessageHandler;\n        try {\n          mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n        } catch (ex) {}\n        return mainWorkerMessageHandler || null;\n      }\n      function setupFakeWorkerGlobal() {\n        if (fakeWorkerCapability) {\n          return fakeWorkerCapability.promise;\n        }\n        fakeWorkerCapability = (0, _util.createPromiseCapability)();\n        var loader = /*#__PURE__*/function () {\n          var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            var mainWorkerMessageHandler, worker;\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n                  if (!mainWorkerMessageHandler) {\n                    _context3.next = 3;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\", mainWorkerMessageHandler);\n                case 3:\n                  if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                    _context3.next = 6;\n                    break;\n                  }\n                  worker = eval(\"require\")(_getWorkerSrc());\n                  return _context3.abrupt(\"return\", worker.WorkerMessageHandler);\n                case 6:\n                  _context3.next = 8;\n                  return (0, _display_utils.loadScript)(_getWorkerSrc());\n                case 8:\n                  return _context3.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n          return function loader() {\n            return _ref18.apply(this, arguments);\n          };\n        }();\n        loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n        return fakeWorkerCapability.promise;\n      }\n      function createCDNWrapper(url) {\n        var wrapper = \"importScripts('\" + url + \"');\";\n        return URL.createObjectURL(new Blob([wrapper]));\n      }\n      var PDFWorker = /*#__PURE__*/function () {\n        function PDFWorker() {\n          var _ref19 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref19$name = _ref19.name,\n            name = _ref19$name === void 0 ? null : _ref19$name,\n            _ref19$port = _ref19.port,\n            port = _ref19$port === void 0 ? null : _ref19$port,\n            _ref19$verbosity = _ref19.verbosity,\n            verbosity = _ref19$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref19$verbosity;\n          _classCallCheck(this, PDFWorker);\n          if (port && pdfWorkerPorts.has(port)) {\n            throw new Error(\"Cannot use more than one PDFWorker per port\");\n          }\n          this.name = name;\n          this.destroyed = false;\n          this.postMessageTransfers = true;\n          this.verbosity = verbosity;\n          this._readyCapability = (0, _util.createPromiseCapability)();\n          this._port = null;\n          this._webWorker = null;\n          this._messageHandler = null;\n          if (port) {\n            pdfWorkerPorts.set(port, this);\n            this._initializeFromPort(port);\n            return;\n          }\n          this._initialize();\n        }\n        return _createClass(PDFWorker, [{\n          key: \"promise\",\n          get: function get() {\n            return this._readyCapability.promise;\n          }\n        }, {\n          key: \"port\",\n          get: function get() {\n            return this._port;\n          }\n        }, {\n          key: \"messageHandler\",\n          get: function get() {\n            return this._messageHandler;\n          }\n        }, {\n          key: \"_initializeFromPort\",\n          value: function _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n            this._messageHandler.on(\"ready\", function () {});\n            this._readyCapability.resolve();\n          }\n        }, {\n          key: \"_initialize\",\n          value: function _initialize() {\n            var _this16 = this;\n            if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n              var workerSrc = _getWorkerSrc();\n              try {\n                if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                  workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n                var worker = new Worker(workerSrc);\n                var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                var terminateEarly = function terminateEarly() {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n                  if (_this16.destroyed) {\n                    _this16._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    _this16._setupFakeWorker();\n                  }\n                };\n                var onWorkerError = function onWorkerError() {\n                  if (!_this16._webWorker) {\n                    terminateEarly();\n                  }\n                };\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", function (data) {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (_this16.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  if (data) {\n                    _this16._messageHandler = messageHandler;\n                    _this16._port = worker;\n                    _this16._webWorker = worker;\n                    if (!data.supportTransfers) {\n                      _this16.postMessageTransfers = false;\n                    }\n                    _this16._readyCapability.resolve();\n                    messageHandler.send(\"configure\", {\n                      verbosity: _this16.verbosity\n                    });\n                  } else {\n                    _this16._setupFakeWorker();\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", function (data) {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (_this16.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    _this16._setupFakeWorker();\n                  }\n                });\n                var sendTest = function sendTest() {\n                  var testObj = new Uint8Array([_this16.postMessageTransfers ? 255 : 0]);\n                  try {\n                    messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                  } catch (ex) {\n                    (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                    testObj[0] = 0;\n                    messageHandler.send(\"test\", testObj);\n                  }\n                };\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n            this._setupFakeWorker();\n          }\n        }, {\n          key: \"_setupFakeWorker\",\n          value: function _setupFakeWorker() {\n            var _this17 = this;\n            if (!isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              isWorkerDisabled = true;\n            }\n            setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\n              if (_this17.destroyed) {\n                _this17._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              var port = new LoopbackPort();\n              _this17._port = port;\n              var id = \"fake\" + nextFakeWorkerId++;\n              var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              _this17._messageHandler = messageHandler;\n              _this17._readyCapability.resolve();\n              messageHandler.send(\"configure\", {\n                verbosity: _this17.verbosity\n              });\n            }).catch(function (reason) {\n              _this17._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n            });\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.destroyed = true;\n            if (this._webWorker) {\n              this._webWorker.terminate();\n              this._webWorker = null;\n            }\n            pdfWorkerPorts.delete(this._port);\n            this._port = null;\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n              this._messageHandler = null;\n            }\n          }\n        }], [{\n          key: \"fromPort\",\n          value: function fromPort(params) {\n            if (!params || !params.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n            if (pdfWorkerPorts.has(params.port)) {\n              return pdfWorkerPorts.get(params.port);\n            }\n            return new PDFWorker(params);\n          }\n        }, {\n          key: \"getWorkerSrc\",\n          value: function getWorkerSrc() {\n            return _getWorkerSrc();\n          }\n        }]);\n      }();\n      return PDFWorker;\n    }();\n    exports.PDFWorker = PDFWorker;\n    var WorkerTransport = /*#__PURE__*/function () {\n      function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n        _classCallCheck(this, WorkerTransport);\n        this.messageHandler = messageHandler;\n        this.loadingTask = loadingTask;\n        this.commonObjs = new PDFObjects();\n        this.fontLoader = new _font_loader.FontLoader({\n          docId: loadingTask.docId,\n          onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n        });\n        this._params = params;\n        this.CMapReaderFactory = new params.CMapReaderFactory({\n          baseUrl: params.cMapUrl,\n          isCompressed: params.cMapPacked\n        });\n        this.destroyed = false;\n        this.destroyCapability = null;\n        this._passwordCapability = null;\n        this._networkStream = networkStream;\n        this._fullReader = null;\n        this._lastProgress = null;\n        this.pageCache = [];\n        this.pagePromises = [];\n        this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n        this.setupMessageHandler();\n      }\n      return _createClass(WorkerTransport, [{\n        key: \"destroy\",\n        value: function destroy() {\n          var _this18 = this;\n          if (this.destroyCapability) {\n            return this.destroyCapability.promise;\n          }\n          this.destroyed = true;\n          this.destroyCapability = (0, _util.createPromiseCapability)();\n          if (this._passwordCapability) {\n            this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n          }\n          var waitOn = [];\n          this.pageCache.forEach(function (page) {\n            if (page) {\n              waitOn.push(page._destroy());\n            }\n          });\n          this.pageCache.length = 0;\n          this.pagePromises.length = 0;\n          var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n          waitOn.push(terminated);\n          Promise.all(waitOn).then(function () {\n            _this18.fontLoader.clear();\n            if (_this18._networkStream) {\n              _this18._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n            }\n            if (_this18.messageHandler) {\n              _this18.messageHandler.destroy();\n              _this18.messageHandler = null;\n            }\n            _this18.destroyCapability.resolve();\n          }, this.destroyCapability.reject);\n          return this.destroyCapability.promise;\n        }\n      }, {\n        key: \"setupMessageHandler\",\n        value: function setupMessageHandler() {\n          var _this19 = this;\n          var messageHandler = this.messageHandler,\n            loadingTask = this.loadingTask;\n          messageHandler.on(\"GetReader\", function (data, sink) {\n            (0, _util.assert)(_this19._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n            _this19._fullReader = _this19._networkStream.getFullReader();\n            _this19._fullReader.onProgress = function (evt) {\n              _this19._lastProgress = {\n                loaded: evt.loaded,\n                total: evt.total\n              };\n            };\n            sink.onPull = function () {\n              _this19._fullReader.read().then(function (_ref20) {\n                var value = _ref20.value,\n                  done = _ref20.done;\n                if (done) {\n                  sink.close();\n                  return;\n                }\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(function (reason) {\n                sink.error(reason);\n              });\n            };\n            sink.onCancel = function (reason) {\n              _this19._fullReader.cancel(reason);\n            };\n          });\n          messageHandler.on(\"ReaderHeadersReady\", function (data) {\n            var headersCapability = (0, _util.createPromiseCapability)();\n            var fullReader = _this19._fullReader;\n            fullReader.headersReady.then(function () {\n              if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                if (_this19._lastProgress && loadingTask.onProgress) {\n                  loadingTask.onProgress(_this19._lastProgress);\n                }\n                fullReader.onProgress = function (evt) {\n                  if (loadingTask.onProgress) {\n                    loadingTask.onProgress({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  }\n                };\n              }\n              headersCapability.resolve({\n                isStreamingSupported: fullReader.isStreamingSupported,\n                isRangeSupported: fullReader.isRangeSupported,\n                contentLength: fullReader.contentLength\n              });\n            }, headersCapability.reject);\n            return headersCapability.promise;\n          });\n          messageHandler.on(\"GetRangeReader\", function (data, sink) {\n            (0, _util.assert)(_this19._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n            var rangeReader = _this19._networkStream.getRangeReader(data.begin, data.end);\n            if (!rangeReader) {\n              sink.close();\n              return;\n            }\n            sink.onPull = function () {\n              rangeReader.read().then(function (_ref21) {\n                var value = _ref21.value,\n                  done = _ref21.done;\n                if (done) {\n                  sink.close();\n                  return;\n                }\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(function (reason) {\n                sink.error(reason);\n              });\n            };\n            sink.onCancel = function (reason) {\n              rangeReader.cancel(reason);\n            };\n          });\n          messageHandler.on(\"GetDoc\", function (_ref22) {\n            var pdfInfo = _ref22.pdfInfo;\n            _this19._numPages = pdfInfo.numPages;\n            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this19));\n          });\n          messageHandler.on(\"DocException\", function (ex) {\n            var reason;\n            switch (ex.name) {\n              case \"PasswordException\":\n                reason = new _util.PasswordException(ex.message, ex.code);\n                break;\n              case \"InvalidPDFException\":\n                reason = new _util.InvalidPDFException(ex.message);\n                break;\n              case \"MissingPDFException\":\n                reason = new _util.MissingPDFException(ex.message);\n                break;\n              case \"UnexpectedResponseException\":\n                reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                break;\n              case \"UnknownErrorException\":\n                reason = new _util.UnknownErrorException(ex.message, ex.details);\n                break;\n            }\n            loadingTask._capability.reject(reason);\n          });\n          messageHandler.on(\"PasswordRequest\", function (exception) {\n            _this19._passwordCapability = (0, _util.createPromiseCapability)();\n            if (loadingTask.onPassword) {\n              var updatePassword = function updatePassword(password) {\n                _this19._passwordCapability.resolve({\n                  password: password\n                });\n              };\n              try {\n                loadingTask.onPassword(updatePassword, exception.code);\n              } catch (ex) {\n                _this19._passwordCapability.reject(ex);\n              }\n            } else {\n              _this19._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n            }\n            return _this19._passwordCapability.promise;\n          });\n          messageHandler.on(\"DataLoaded\", function (data) {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.length,\n                total: data.length\n              });\n            }\n            _this19.downloadInfoCapability.resolve(data);\n          });\n          messageHandler.on(\"StartRenderPage\", function (data) {\n            if (_this19.destroyed) {\n              return;\n            }\n            var page = _this19.pageCache[data.pageIndex];\n            page._startRenderPage(data.transparency, data.intent);\n          });\n          messageHandler.on(\"commonobj\", function (data) {\n            if (_this19.destroyed) {\n              return;\n            }\n            var _data = _slicedToArray(data, 3),\n              id = _data[0],\n              type = _data[1],\n              exportedData = _data[2];\n            if (_this19.commonObjs.has(id)) {\n              return;\n            }\n            switch (type) {\n              case \"Font\":\n                var params = _this19._params;\n                if (\"error\" in exportedData) {\n                  var exportedError = exportedData.error;\n                  (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n                  _this19.commonObjs.resolve(id, exportedError);\n                  break;\n                }\n                var fontRegistry = null;\n                if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                  fontRegistry = {\n                    registerFont: function registerFont(font, url) {\n                      globalThis.FontInspector.fontAdded(font, url);\n                    }\n                  };\n                }\n                var font = new _font_loader.FontFaceObject(exportedData, {\n                  isEvalSupported: params.isEvalSupported,\n                  disableFontFace: params.disableFontFace,\n                  ignoreErrors: params.ignoreErrors,\n                  onUnsupportedFeature: _this19._onUnsupportedFeature.bind(_this19),\n                  fontRegistry: fontRegistry\n                });\n                _this19.fontLoader.bind(font).catch(function (reason) {\n                  return messageHandler.sendWithPromise(\"FontFallback\", {\n                    id: id\n                  });\n                }).finally(function () {\n                  if (!params.fontExtraProperties && font.data) {\n                    font.data = null;\n                  }\n                  _this19.commonObjs.resolve(id, font);\n                });\n                break;\n              case \"FontPath\":\n              case \"FontType3Res\":\n              case \"Image\":\n                _this19.commonObjs.resolve(id, exportedData);\n                break;\n              default:\n                throw new Error(\"Got unknown common object type \".concat(type));\n            }\n          });\n          messageHandler.on(\"obj\", function (data) {\n            if (_this19.destroyed) {\n              return undefined;\n            }\n            var _data2 = _slicedToArray(data, 4),\n              id = _data2[0],\n              pageIndex = _data2[1],\n              type = _data2[2],\n              imageData = _data2[3];\n            var pageProxy = _this19.pageCache[pageIndex];\n            if (pageProxy.objs.has(id)) {\n              return undefined;\n            }\n            switch (type) {\n              case \"Image\":\n                pageProxy.objs.resolve(id, imageData);\n                var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n                if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                  pageProxy.cleanupAfterRender = true;\n                }\n                break;\n              default:\n                throw new Error(\"Got unknown object type \".concat(type));\n            }\n            return undefined;\n          });\n          messageHandler.on(\"DocProgress\", function (data) {\n            if (_this19.destroyed) {\n              return;\n            }\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.loaded,\n                total: data.total\n              });\n            }\n          });\n          messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n          messageHandler.on(\"FetchBuiltInCMap\", function (data, sink) {\n            if (_this19.destroyed) {\n              sink.error(new Error(\"Worker was destroyed\"));\n              return;\n            }\n            var fetched = false;\n            sink.onPull = function () {\n              if (fetched) {\n                sink.close();\n                return;\n              }\n              fetched = true;\n              _this19.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n              }).catch(function (reason) {\n                sink.error(reason);\n              });\n            };\n          });\n        }\n      }, {\n        key: \"_onUnsupportedFeature\",\n        value: function _onUnsupportedFeature(_ref23) {\n          var featureId = _ref23.featureId;\n          if (this.destroyed) {\n            return;\n          }\n          if (this.loadingTask.onUnsupportedFeature) {\n            this.loadingTask.onUnsupportedFeature(featureId);\n          }\n        }\n      }, {\n        key: \"getData\",\n        value: function getData() {\n          return this.messageHandler.sendWithPromise(\"GetData\", null);\n        }\n      }, {\n        key: \"getPage\",\n        value: function getPage(pageNumber) {\n          var _this20 = this;\n          if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n            return Promise.reject(new Error(\"Invalid page request\"));\n          }\n          var pageIndex = pageNumber - 1;\n          if (pageIndex in this.pagePromises) {\n            return this.pagePromises[pageIndex];\n          }\n          var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n            pageIndex: pageIndex\n          }).then(function (pageInfo) {\n            if (_this20.destroyed) {\n              throw new Error(\"Transport destroyed\");\n            }\n            var page = new PDFPageProxy(pageIndex, pageInfo, _this20, _this20._params.pdfBug);\n            _this20.pageCache[pageIndex] = page;\n            return page;\n          });\n          this.pagePromises[pageIndex] = promise;\n          return promise;\n        }\n      }, {\n        key: \"getPageIndex\",\n        value: function getPageIndex(ref) {\n          return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n            ref: ref\n          }).catch(function (reason) {\n            return Promise.reject(new Error(reason));\n          });\n        }\n      }, {\n        key: \"getAnnotations\",\n        value: function getAnnotations(pageIndex, intent) {\n          return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n            pageIndex: pageIndex,\n            intent: intent\n          });\n        }\n      }, {\n        key: \"getDestinations\",\n        value: function getDestinations() {\n          return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n        }\n      }, {\n        key: \"getDestination\",\n        value: function getDestination(id) {\n          if (typeof id !== \"string\") {\n            return Promise.reject(new Error(\"Invalid destination request.\"));\n          }\n          return this.messageHandler.sendWithPromise(\"GetDestination\", {\n            id: id\n          });\n        }\n      }, {\n        key: \"getPageLabels\",\n        value: function getPageLabels() {\n          return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n        }\n      }, {\n        key: \"getPageLayout\",\n        value: function getPageLayout() {\n          return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n        }\n      }, {\n        key: \"getPageMode\",\n        value: function getPageMode() {\n          return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n        }\n      }, {\n        key: \"getViewerPreferences\",\n        value: function getViewerPreferences() {\n          return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n        }\n      }, {\n        key: \"getOpenAction\",\n        value: function getOpenAction() {\n          return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n        }\n      }, {\n        key: \"getAttachments\",\n        value: function getAttachments() {\n          return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n        }\n      }, {\n        key: \"getJavaScript\",\n        value: function getJavaScript() {\n          return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n        }\n      }, {\n        key: \"getOutline\",\n        value: function getOutline() {\n          return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n        }\n      }, {\n        key: \"getPermissions\",\n        value: function getPermissions() {\n          return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata() {\n          var _this21 = this;\n          return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n            return {\n              info: results[0],\n              metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n              contentDispositionFilename: _this21._fullReader ? _this21._fullReader.filename : null\n            };\n          });\n        }\n      }, {\n        key: \"getStats\",\n        value: function getStats() {\n          return this.messageHandler.sendWithPromise(\"GetStats\", null);\n        }\n      }, {\n        key: \"startCleanup\",\n        value: function startCleanup() {\n          var _this22 = this;\n          return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(function () {\n            for (var i = 0, ii = _this22.pageCache.length; i < ii; i++) {\n              var page = _this22.pageCache[i];\n              if (page) {\n                var cleanupSuccessful = page.cleanup();\n                if (!cleanupSuccessful) {\n                  throw new Error(\"startCleanup: Page \".concat(i + 1, \" is currently rendering.\"));\n                }\n              }\n            }\n            _this22.commonObjs.clear();\n            _this22.fontLoader.clear();\n          });\n        }\n      }, {\n        key: \"loadingParams\",\n        get: function get() {\n          var params = this._params;\n          return (0, _util.shadow)(this, \"loadingParams\", {\n            disableAutoFetch: params.disableAutoFetch,\n            disableFontFace: params.disableFontFace\n          });\n        }\n      }]);\n    }();\n    var PDFObjects = /*#__PURE__*/function () {\n      function PDFObjects() {\n        _classCallCheck(this, PDFObjects);\n        this._objs = Object.create(null);\n      }\n      return _createClass(PDFObjects, [{\n        key: \"_ensureObj\",\n        value: function _ensureObj(objId) {\n          if (this._objs[objId]) {\n            return this._objs[objId];\n          }\n          return this._objs[objId] = {\n            capability: (0, _util.createPromiseCapability)(),\n            data: null,\n            resolved: false\n          };\n        }\n      }, {\n        key: \"get\",\n        value: function get(objId) {\n          var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          if (callback) {\n            this._ensureObj(objId).capability.promise.then(callback);\n            return null;\n          }\n          var obj = this._objs[objId];\n          if (!obj || !obj.resolved) {\n            throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n          }\n          return obj.data;\n        }\n      }, {\n        key: \"has\",\n        value: function has(objId) {\n          var obj = this._objs[objId];\n          return obj ? obj.resolved : false;\n        }\n      }, {\n        key: \"resolve\",\n        value: function resolve(objId, data) {\n          var obj = this._ensureObj(objId);\n          obj.resolved = true;\n          obj.data = data;\n          obj.capability.resolve(data);\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          this._objs = Object.create(null);\n        }\n      }]);\n    }();\n    var RenderTask = /*#__PURE__*/function () {\n      function RenderTask(internalRenderTask) {\n        _classCallCheck(this, RenderTask);\n        this._internalRenderTask = internalRenderTask;\n        this.onContinue = null;\n      }\n      return _createClass(RenderTask, [{\n        key: \"promise\",\n        get: function get() {\n          return this._internalRenderTask.capability.promise;\n        }\n      }, {\n        key: \"cancel\",\n        value: function cancel() {\n          this._internalRenderTask.cancel();\n        }\n      }]);\n    }();\n    var InternalRenderTask = function InternalRenderTaskClosure() {\n      var canvasInRendering = new WeakSet();\n      var InternalRenderTask = /*#__PURE__*/function () {\n        function InternalRenderTask(_ref24) {\n          var callback = _ref24.callback,\n            params = _ref24.params,\n            objs = _ref24.objs,\n            commonObjs = _ref24.commonObjs,\n            operatorList = _ref24.operatorList,\n            pageIndex = _ref24.pageIndex,\n            canvasFactory = _ref24.canvasFactory,\n            webGLContext = _ref24.webGLContext,\n            _ref24$useRequestAnim = _ref24.useRequestAnimationFrame,\n            useRequestAnimationFrame = _ref24$useRequestAnim === void 0 ? false : _ref24$useRequestAnim,\n            _ref24$pdfBug = _ref24.pdfBug,\n            pdfBug = _ref24$pdfBug === void 0 ? false : _ref24$pdfBug;\n          _classCallCheck(this, InternalRenderTask);\n          this.callback = callback;\n          this.params = params;\n          this.objs = objs;\n          this.commonObjs = commonObjs;\n          this.operatorListIdx = null;\n          this.operatorList = operatorList;\n          this._pageIndex = pageIndex;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this._pdfBug = pdfBug;\n          this.running = false;\n          this.graphicsReadyCallback = null;\n          this.graphicsReady = false;\n          this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n          this.cancelled = false;\n          this.capability = (0, _util.createPromiseCapability)();\n          this.task = new RenderTask(this);\n          this._continueBound = this._continue.bind(this);\n          this._scheduleNextBound = this._scheduleNext.bind(this);\n          this._nextBound = this._next.bind(this);\n          this._canvas = params.canvasContext.canvas;\n        }\n        return _createClass(InternalRenderTask, [{\n          key: \"initializeGraphics\",\n          value: function initializeGraphics() {\n            var transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.cancelled) {\n              return;\n            }\n            if (this._canvas) {\n              if (canvasInRendering.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n              canvasInRendering.add(this._canvas);\n            }\n            if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n            var _this$params = this.params,\n              canvasContext = _this$params.canvasContext,\n              viewport = _this$params.viewport,\n              transform = _this$params.transform,\n              imageLayer = _this$params.imageLayer,\n              background = _this$params.background;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n            this.gfx.beginDrawing({\n              transform: transform,\n              viewport: viewport,\n              transparency: transparency,\n              background: background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n            this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n          }\n        }, {\n          key: \"operatorListChanged\",\n          value: function operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n              return;\n            }\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n            if (this.running) {\n              return;\n            }\n            this._continue();\n          }\n        }, {\n          key: \"_continue\",\n          value: function _continue() {\n            this.running = true;\n            if (this.cancelled) {\n              return;\n            }\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n        }, {\n          key: \"_scheduleNext\",\n          value: function _scheduleNext() {\n            var _this23 = this;\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(function () {\n                _this23._nextBound().catch(_this23.cancel.bind(_this23));\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n            }\n          }\n        }, {\n          key: \"_next\",\n          value: function () {\n            var _next2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!this.cancelled) {\n                      _context4.next = 2;\n                      break;\n                    }\n                    return _context4.abrupt(\"return\");\n                  case 2:\n                    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n                    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                      this.running = false;\n                      if (this.operatorList.lastChunk) {\n                        this.gfx.endDrawing();\n                        if (this._canvas) {\n                          canvasInRendering.delete(this._canvas);\n                        }\n                        this.callback();\n                      }\n                    }\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4, this);\n            }));\n            function _next() {\n              return _next2.apply(this, arguments);\n            }\n            return _next;\n          }()\n        }]);\n      }();\n      return InternalRenderTask;\n    }();\n    var version = '2.5.207';\n    exports.version = version;\n    var build = '0974d605';\n    exports.build = build;\n\n    /***/\n  }), (/* 6 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.FontLoader = exports.FontFaceObject = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var BaseFontLoader = /*#__PURE__*/function () {\n      function BaseFontLoader(_ref25) {\n        var docId = _ref25.docId,\n          onUnsupportedFeature = _ref25.onUnsupportedFeature;\n        _classCallCheck(this, BaseFontLoader);\n        if (this.constructor === BaseFontLoader) {\n          (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n        }\n        this.docId = docId;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.nativeFontFaces = [];\n        this.styleElement = null;\n      }\n      return _createClass(BaseFontLoader, [{\n        key: \"addNativeFontFace\",\n        value: function addNativeFontFace(nativeFontFace) {\n          this.nativeFontFaces.push(nativeFontFace);\n          document.fonts.add(nativeFontFace);\n        }\n      }, {\n        key: \"insertRule\",\n        value: function insertRule(rule) {\n          var styleElement = this.styleElement;\n          if (!styleElement) {\n            styleElement = this.styleElement = document.createElement(\"style\");\n            styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n            document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n          }\n          var styleSheet = styleElement.sheet;\n          styleSheet.insertRule(rule, styleSheet.cssRules.length);\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          this.nativeFontFaces.forEach(function (nativeFontFace) {\n            document.fonts.delete(nativeFontFace);\n          });\n          this.nativeFontFaces.length = 0;\n          if (this.styleElement) {\n            this.styleElement.remove();\n            this.styleElement = null;\n          }\n        }\n      }, {\n        key: \"bind\",\n        value: function () {\n          var _bind = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(font) {\n            var _this24 = this;\n            var nativeFontFace, rule;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!(font.attached || font.missingFile)) {\n                    _context5.next = 2;\n                    break;\n                  }\n                  return _context5.abrupt(\"return\");\n                case 2:\n                  font.attached = true;\n                  if (!this.isFontLoadingAPISupported) {\n                    _context5.next = 19;\n                    break;\n                  }\n                  nativeFontFace = font.createNativeFontFace();\n                  if (!nativeFontFace) {\n                    _context5.next = 18;\n                    break;\n                  }\n                  this.addNativeFontFace(nativeFontFace);\n                  _context5.prev = 7;\n                  _context5.next = 10;\n                  return nativeFontFace.loaded;\n                case 10:\n                  _context5.next = 18;\n                  break;\n                case 12:\n                  _context5.prev = 12;\n                  _context5.t0 = _context5[\"catch\"](7);\n                  this._onUnsupportedFeature({\n                    featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                  });\n                  (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context5.t0, \"'.\"));\n                  font.disableFontFace = true;\n                  throw _context5.t0;\n                case 18:\n                  return _context5.abrupt(\"return\");\n                case 19:\n                  rule = font.createFontFaceRule();\n                  if (!rule) {\n                    _context5.next = 26;\n                    break;\n                  }\n                  this.insertRule(rule);\n                  if (!this.isSyncFontLoadingSupported) {\n                    _context5.next = 24;\n                    break;\n                  }\n                  return _context5.abrupt(\"return\");\n                case 24:\n                  _context5.next = 26;\n                  return new Promise(function (resolve) {\n                    var request = _this24._queueLoadingCallback(resolve);\n                    _this24._prepareFontLoadEvent([rule], [font], request);\n                  });\n                case 26:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5, this, [[7, 12]]);\n          }));\n          function bind(_x4) {\n            return _bind.apply(this, arguments);\n          }\n          return bind;\n        }()\n      }, {\n        key: \"_queueLoadingCallback\",\n        value: function _queueLoadingCallback(callback) {\n          (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n        }\n      }, {\n        key: \"isFontLoadingAPISupported\",\n        get: function get() {\n          var supported = typeof document !== \"undefined\" && !!document.fonts;\n          return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n        }\n      }, {\n        key: \"isSyncFontLoadingSupported\",\n        get: function get() {\n          (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n        }\n      }, {\n        key: \"_loadTestFont\",\n        get: function get() {\n          (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n        }\n      }, {\n        key: \"_prepareFontLoadEvent\",\n        value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n          (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n        }\n      }]);\n    }();\n    var FontLoader;\n    exports.FontLoader = FontLoader;\n    {\n      exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n        function GenericFontLoader(docId) {\n          var _this25;\n          _classCallCheck(this, GenericFontLoader);\n          _this25 = _callSuper(this, GenericFontLoader, [docId]);\n          _this25.loadingContext = {\n            requests: [],\n            nextRequestId: 0\n          };\n          _this25.loadTestFontId = 0;\n          return _this25;\n        }\n        _inherits(GenericFontLoader, _BaseFontLoader);\n        return _createClass(GenericFontLoader, [{\n          key: \"isSyncFontLoadingSupported\",\n          get: function get() {\n            var supported = false;\n            if (typeof navigator === \"undefined\") {\n              supported = true;\n            } else {\n              var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n              if (m && m[1] >= 14) {\n                supported = true;\n              }\n            }\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n        }, {\n          key: \"_queueLoadingCallback\",\n          value: function _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n              while (context.requests.length > 0 && context.requests[0].done) {\n                var otherRequest = context.requests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n            var context = this.loadingContext;\n            var request = {\n              id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n              done: false,\n              complete: completeRequest,\n              callback: callback\n            };\n            context.requests.push(request);\n            return request;\n          }\n        }, {\n          key: \"_loadTestFont\",\n          get: function get() {\n            var getLoadTestFont = function getLoadTestFont() {\n              return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            };\n            return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n          }\n        }, {\n          key: \"_prepareFontLoadEvent\",\n          value: function _prepareFontLoadEvent(rules, fonts, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n            function spliceString(s, offset, remove, insert) {\n              var chunk1 = s.substring(0, offset);\n              var chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n            var i, ii;\n            var canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            var ctx = canvas.getContext(\"2d\");\n            var called = 0;\n            function isFontReady(name, callback) {\n              called++;\n              if (called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              var imageData = ctx.getImageData(0, 0, 1, 1);\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n            var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n            var data = this._loadTestFont;\n            var COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            var CFF_CHECKSUM_OFFSET = 16;\n            var XXXX_VALUE = 0x58585858;\n            var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n            var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n            this.insertRule(rule);\n            var names = [];\n            for (i = 0, ii = fonts.length; i < ii; i++) {\n              names.push(fonts[i].loadedName);\n            }\n            names.push(loadTestFontId);\n            var div = document.createElement(\"div\");\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n            for (i = 0, ii = names.length; i < ii; ++i) {\n              var span = document.createElement(\"span\");\n              span.textContent = \"Hi\";\n              span.style.fontFamily = names[i];\n              div.appendChild(span);\n            }\n            document.body.appendChild(div);\n            isFontReady(loadTestFontId, function () {\n              document.body.removeChild(div);\n              request.complete();\n            });\n          }\n        }]);\n      }(BaseFontLoader);\n    }\n    var FontFaceObject = /*#__PURE__*/function () {\n      function FontFaceObject(translatedData, _ref26) {\n        var _ref26$isEvalSupporte = _ref26.isEvalSupported,\n          isEvalSupported = _ref26$isEvalSupporte === void 0 ? true : _ref26$isEvalSupporte,\n          _ref26$disableFontFac = _ref26.disableFontFace,\n          disableFontFace = _ref26$disableFontFac === void 0 ? false : _ref26$disableFontFac,\n          _ref26$ignoreErrors = _ref26.ignoreErrors,\n          ignoreErrors = _ref26$ignoreErrors === void 0 ? false : _ref26$ignoreErrors,\n          _ref26$onUnsupportedF = _ref26.onUnsupportedFeature,\n          onUnsupportedFeature = _ref26$onUnsupportedF === void 0 ? null : _ref26$onUnsupportedF,\n          _ref26$fontRegistry = _ref26.fontRegistry,\n          fontRegistry = _ref26$fontRegistry === void 0 ? null : _ref26$fontRegistry;\n        _classCallCheck(this, FontFaceObject);\n        this.compiledGlyphs = Object.create(null);\n        for (var i in translatedData) {\n          this[i] = translatedData[i];\n        }\n        this.isEvalSupported = isEvalSupported !== false;\n        this.disableFontFace = disableFontFace === true;\n        this.ignoreErrors = ignoreErrors === true;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.fontRegistry = fontRegistry;\n      }\n      return _createClass(FontFaceObject, [{\n        key: \"createNativeFontFace\",\n        value: function createNativeFontFace() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n          var nativeFontFace = new FontFace(this.loadedName, this.data, {});\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this);\n          }\n          return nativeFontFace;\n        }\n      }, {\n        key: \"createFontFaceRule\",\n        value: function createFontFaceRule() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n          var data = (0, _util.bytesToString)(new Uint8Array(this.data));\n          var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n          var rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this, url);\n          }\n          return rule;\n        }\n      }, {\n        key: \"getPathGenerator\",\n        value: function getPathGenerator(objs, character) {\n          if (this.compiledGlyphs[character] !== undefined) {\n            return this.compiledGlyphs[character];\n          }\n          var cmds, current;\n          try {\n            cmds = objs.get(this.loadedName + \"_path_\" + character);\n          } catch (ex) {\n            if (!this.ignoreErrors) {\n              throw ex;\n            }\n            if (this._onUnsupportedFeature) {\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n              });\n            }\n            (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n            return this.compiledGlyphs[character] = function (c, size) {};\n          }\n          if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n            var args,\n              js = \"\";\n            for (var i = 0, ii = cmds.length; i < ii; i++) {\n              current = cmds[i];\n              if (current.args !== undefined) {\n                args = current.args.join(\",\");\n              } else {\n                args = \"\";\n              }\n              js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n            }\n            return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n          }\n          return this.compiledGlyphs[character] = function (c, size) {\n            for (var _i5 = 0, _ii = cmds.length; _i5 < _ii; _i5++) {\n              current = cmds[_i5];\n              if (current.cmd === \"scale\") {\n                current.args = [size, -size];\n              }\n              c[current.cmd].apply(c, current.args);\n            }\n          };\n        }\n      }]);\n    }();\n    exports.FontFaceObject = FontFaceObject;\n\n    /***/\n  }), (/* 7 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.apiCompatibilityParams = void 0;\n    var _is_node = __w_pdfjs_require__(4);\n    var compatibilityParams = Object.create(null);\n    {\n      (function checkFontFace() {\n        if (_is_node.isNodeJS) {\n          compatibilityParams.disableFontFace = true;\n        }\n      })();\n    }\n    var apiCompatibilityParams = Object.freeze(compatibilityParams);\n    exports.apiCompatibilityParams = apiCompatibilityParams;\n\n    /***/\n  }), (/* 8 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CanvasGraphics = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _pattern_helper = __w_pdfjs_require__(9);\n    var MIN_FONT_SIZE = 16;\n    var MAX_FONT_SIZE = 100;\n    var MAX_GROUP_SIZE = 4096;\n    var MIN_WIDTH_FACTOR = 0.65;\n    var COMPILE_TYPE3_GLYPHS = true;\n    var MAX_SIZE_TO_COMPILE = 1000;\n    var FULL_CHUNK_HEIGHT = 16;\n    function addContextCurrentTransform(ctx) {\n      if (!ctx.mozCurrentTransform) {\n        ctx._originalSave = ctx.save;\n        ctx._originalRestore = ctx.restore;\n        ctx._originalRotate = ctx.rotate;\n        ctx._originalScale = ctx.scale;\n        ctx._originalTranslate = ctx.translate;\n        ctx._originalTransform = ctx.transform;\n        ctx._originalSetTransform = ctx.setTransform;\n        ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n        ctx._transformStack = [];\n        Object.defineProperty(ctx, \"mozCurrentTransform\", {\n          get: function getCurrentTransform() {\n            return this._transformMatrix;\n          }\n        });\n        Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n          get: function getCurrentTransformInverse() {\n            var m = this._transformMatrix;\n            var a = m[0],\n              b = m[1],\n              c = m[2],\n              d = m[3],\n              e = m[4],\n              f = m[5];\n            var ad_bc = a * d - b * c;\n            var bc_ad = b * c - a * d;\n            return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n          }\n        });\n        ctx.save = function ctxSave() {\n          var old = this._transformMatrix;\n          this._transformStack.push(old);\n          this._transformMatrix = old.slice(0, 6);\n          this._originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          var prev = this._transformStack.pop();\n          if (prev) {\n            this._transformMatrix = prev;\n            this._originalRestore();\n          }\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          var m = this._transformMatrix;\n          m[4] = m[0] * x + m[2] * y + m[4];\n          m[5] = m[1] * x + m[3] * y + m[5];\n          this._originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          var m = this._transformMatrix;\n          m[0] = m[0] * x;\n          m[1] = m[1] * x;\n          m[2] = m[2] * y;\n          m[3] = m[3] * y;\n          this._originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n          ctx._originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          this._transformMatrix = [a, b, c, d, e, f];\n          ctx._originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          var cosValue = Math.cos(angle);\n          var sinValue = Math.sin(angle);\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n          this._originalRotate(angle);\n        };\n      }\n    }\n    var CachedCanvases = function CachedCanvasesClosure() {\n      function CachedCanvases(canvasFactory) {\n        this.canvasFactory = canvasFactory;\n        this.cache = Object.create(null);\n      }\n      CachedCanvases.prototype = {\n        getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n          var canvasEntry;\n          if (this.cache[id] !== undefined) {\n            canvasEntry = this.cache[id];\n            this.canvasFactory.reset(canvasEntry, width, height);\n            canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n          } else {\n            canvasEntry = this.canvasFactory.create(width, height);\n            this.cache[id] = canvasEntry;\n          }\n          if (trackTransform) {\n            addContextCurrentTransform(canvasEntry.context);\n          }\n          return canvasEntry;\n        },\n        clear: function clear() {\n          for (var id in this.cache) {\n            var canvasEntry = this.cache[id];\n            this.canvasFactory.destroy(canvasEntry);\n            delete this.cache[id];\n          }\n        }\n      };\n      return CachedCanvases;\n    }();\n    function compileType3Glyph(imgData) {\n      var POINT_TO_PROCESS_LIMIT = 1000;\n      var width = imgData.width,\n        height = imgData.height;\n      var i,\n        j,\n        j0,\n        width1 = width + 1;\n      var points = new Uint8Array(width1 * (height + 1));\n      var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n      var lineSize = width + 7 & ~7,\n        data0 = imgData.data;\n      var data = new Uint8Array(lineSize * height),\n        pos = 0,\n        ii;\n      for (i = 0, ii = data0.length; i < ii; i++) {\n        var mask = 128,\n          elem = data0[i];\n        while (mask > 0) {\n          data[pos++] = elem & mask ? 0 : 255;\n          mask >>= 1;\n        }\n      }\n      var count = 0;\n      pos = 0;\n      if (data[pos] !== 0) {\n        points[0] = 1;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j] = data[pos] ? 2 : 1;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j] = 2;\n        ++count;\n      }\n      for (i = 1; i < height; i++) {\n        pos = i * lineSize;\n        j0 = i * width1;\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0] = data[pos] ? 1 : 8;\n          ++count;\n        }\n        var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n        for (j = 1; j < width; j++) {\n          sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n          if (POINT_TYPES[sum]) {\n            points[j0 + j] = POINT_TYPES[sum];\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0 + j] = data[pos] ? 2 : 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n      }\n      pos = lineSize * (height - 1);\n      j0 = i * width1;\n      if (data[pos] !== 0) {\n        points[j0] = 8;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j0 + j] = data[pos] ? 4 : 8;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j0 + j] = 4;\n        ++count;\n      }\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n      var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n      var outlines = [];\n      for (i = 0; count && i <= height; i++) {\n        var p = i * width1;\n        var end = p + width;\n        while (p < end && !points[p]) {\n          p++;\n        }\n        if (p === end) {\n          continue;\n        }\n        var coords = [p % width1, i];\n        var type = points[p],\n          p0 = p,\n          pp;\n        do {\n          var step = steps[type];\n          do {\n            p += step;\n          } while (!points[p]);\n          pp = points[p];\n          if (pp !== 5 && pp !== 10) {\n            type = pp;\n            points[p] = 0;\n          } else {\n            type = pp & 0x33 * type >> 4;\n            points[p] &= type >> 2 | type << 2;\n          }\n          coords.push(p % width1);\n          coords.push(p / width1 | 0);\n          if (!points[p]) {\n            --count;\n          }\n        } while (p0 !== p);\n        outlines.push(coords);\n        --i;\n      }\n      var drawOutline = function drawOutline(c) {\n        c.save();\n        c.scale(1 / width, -1 / height);\n        c.translate(0, -height);\n        c.beginPath();\n        for (var k = 0, kk = outlines.length; k < kk; k++) {\n          var o = outlines[k];\n          c.moveTo(o[0], o[1]);\n          for (var l = 2, ll = o.length; l < ll; l += 2) {\n            c.lineTo(o[l], o[l + 1]);\n          }\n        }\n        c.fill();\n        c.beginPath();\n        c.restore();\n      };\n      return drawOutline;\n    }\n    var CanvasExtraState = function CanvasExtraStateClosure() {\n      function CanvasExtraState() {\n        this.alphaIsShape = false;\n        this.fontSize = 0;\n        this.fontSizeScale = 1;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.textMatrixScale = 1;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textRise = 0;\n        this.fillColor = \"#000000\";\n        this.strokeColor = \"#000000\";\n        this.patternFill = false;\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.activeSMask = null;\n        this.resumeSMaskCtx = null;\n      }\n      CanvasExtraState.prototype = {\n        clone: function CanvasExtraState_clone() {\n          return Object.create(this);\n        },\n        setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n      };\n      return CanvasExtraState;\n    }();\n    var CanvasGraphics = function CanvasGraphicsClosure() {\n      var EXECUTION_TIME = 15;\n      var EXECUTION_STEPS = 10;\n      function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n        this.ctx = canvasCtx;\n        this.current = new CanvasExtraState();\n        this.stateStack = [];\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.res = null;\n        this.xobjs = null;\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this.imageLayer = imageLayer;\n        this.groupStack = [];\n        this.processingType3 = null;\n        this.baseTransform = null;\n        this.baseTransformStack = [];\n        this.groupLevel = 0;\n        this.smaskStack = [];\n        this.smaskCounter = 0;\n        this.tempSMask = null;\n        this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n        if (canvasCtx) {\n          addContextCurrentTransform(canvasCtx);\n        }\n        this._cachedGetSinglePixelWidth = null;\n      }\n      function putBinaryImageData(ctx, imgData) {\n        if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n          ctx.putImageData(imgData, 0, 0);\n          return;\n        }\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0,\n          destPos;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        var i, j, thisChunkHeight, elemsInThisChunk;\n        if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n          var srcLength = src.byteLength;\n          var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n          var dest32DataLength = dest32.length;\n          var fullSrcDiff = width + 7 >> 3;\n          var white = 0xffffffff;\n          var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n          for (i = 0; i < totalChunks; i++) {\n            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            destPos = 0;\n            for (j = 0; j < thisChunkHeight; j++) {\n              var srcDiff = srcLength - srcPos;\n              var k = 0;\n              var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n              var kEndUnrolled = kEnd & ~7;\n              var mask = 0;\n              var srcByte = 0;\n              for (; k < kEndUnrolled; k += 8) {\n                srcByte = src[srcPos++];\n                dest32[destPos++] = srcByte & 128 ? white : black;\n                dest32[destPos++] = srcByte & 64 ? white : black;\n                dest32[destPos++] = srcByte & 32 ? white : black;\n                dest32[destPos++] = srcByte & 16 ? white : black;\n                dest32[destPos++] = srcByte & 8 ? white : black;\n                dest32[destPos++] = srcByte & 4 ? white : black;\n                dest32[destPos++] = srcByte & 2 ? white : black;\n                dest32[destPos++] = srcByte & 1 ? white : black;\n              }\n              for (; k < kEnd; k++) {\n                if (mask === 0) {\n                  srcByte = src[srcPos++];\n                  mask = 128;\n                }\n                dest32[destPos++] = srcByte & mask ? white : black;\n                mask >>= 1;\n              }\n            }\n            while (destPos < dest32DataLength) {\n              dest32[destPos++] = 0;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n          j = 0;\n          elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n          for (i = 0; i < fullChunks; i++) {\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            srcPos += elemsInThisChunk;\n            ctx.putImageData(chunkImgData, 0, j);\n            j += FULL_CHUNK_HEIGHT;\n          }\n          if (i < totalChunks) {\n            elemsInThisChunk = width * partialChunkHeight * 4;\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            ctx.putImageData(chunkImgData, 0, j);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n          thisChunkHeight = FULL_CHUNK_HEIGHT;\n          elemsInThisChunk = width * thisChunkHeight;\n          for (i = 0; i < totalChunks; i++) {\n            if (i >= fullChunks) {\n              thisChunkHeight = partialChunkHeight;\n              elemsInThisChunk = width * thisChunkHeight;\n            }\n            destPos = 0;\n            for (j = elemsInThisChunk; j--;) {\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = 255;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else {\n          throw new Error(\"bad image kind: \".concat(imgData.kind));\n        }\n      }\n      function putBinaryImageMask(ctx, imgData) {\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        for (var i = 0; i < totalChunks; i++) {\n          var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          var destPos = 3;\n          for (var j = 0; j < thisChunkHeight; j++) {\n            var mask = 0;\n            for (var k = 0; k < width; k++) {\n              if (!mask) {\n                var elem = src[srcPos++];\n                mask = 128;\n              }\n              dest[destPos] = elem & mask ? 0 : 255;\n              destPos += 4;\n              mask >>= 1;\n            }\n          }\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      }\n      function copyCtxState(sourceCtx, destCtx) {\n        var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n        for (var i = 0, ii = properties.length; i < ii; i++) {\n          var property = properties[i];\n          if (sourceCtx[property] !== undefined) {\n            destCtx[property] = sourceCtx[property];\n          }\n        }\n        if (sourceCtx.setLineDash !== undefined) {\n          destCtx.setLineDash(sourceCtx.getLineDash());\n          destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n        }\n      }\n      function resetCtxToDefault(ctx) {\n        ctx.strokeStyle = \"#000000\";\n        ctx.fillStyle = \"#000000\";\n        ctx.fillRule = \"nonzero\";\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"butt\";\n        ctx.lineJoin = \"miter\";\n        ctx.miterLimit = 10;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.font = \"10px sans-serif\";\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash([]);\n          ctx.lineDashOffset = 0;\n        }\n      }\n      function composeSMaskBackdrop(bytes, r0, g0, b0) {\n        var length = bytes.length;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = bytes[i];\n          if (alpha === 0) {\n            bytes[i - 3] = r0;\n            bytes[i - 2] = g0;\n            bytes[i - 1] = b0;\n          } else if (alpha < 255) {\n            var alpha_ = 255 - alpha;\n            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n          }\n        }\n      }\n      function composeSMaskAlpha(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        var scale = 1 / 255;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n          layerData[i] = layerData[i] * alpha * scale | 0;\n        }\n      }\n      function composeSMaskLuminosity(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        for (var i = 3; i < length; i += 4) {\n          var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n          layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n        }\n      }\n      function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n        var hasBackdrop = !!backdrop;\n        var r0 = hasBackdrop ? backdrop[0] : 0;\n        var g0 = hasBackdrop ? backdrop[1] : 0;\n        var b0 = hasBackdrop ? backdrop[2] : 0;\n        var composeFn;\n        if (subtype === \"Luminosity\") {\n          composeFn = composeSMaskLuminosity;\n        } else {\n          composeFn = composeSMaskAlpha;\n        }\n        var PIXELS_TO_PROCESS = 1048576;\n        var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n        for (var row = 0; row < height; row += chunkSize) {\n          var chunkHeight = Math.min(chunkSize, height - row);\n          var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n          var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n          if (hasBackdrop) {\n            composeSMaskBackdrop(maskData.data, r0, g0, b0);\n          }\n          composeFn(maskData.data, layerData.data, transferMap);\n          maskCtx.putImageData(layerData, 0, row);\n        }\n      }\n      function composeSMask(ctx, smask, layerCtx, webGLContext) {\n        var mask = smask.canvas;\n        var maskCtx = smask.context;\n        ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n        var backdrop = smask.backdrop || null;\n        if (!smask.transferMap && webGLContext.isEnabled) {\n          var composed = webGLContext.composeSMask({\n            layer: layerCtx.canvas,\n            mask: mask,\n            properties: {\n              subtype: smask.subtype,\n              backdrop: backdrop\n            }\n          });\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n          return;\n        }\n        genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n        ctx.drawImage(mask, 0, 0);\n      }\n      var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      var NORMAL_CLIP = {};\n      var EO_CLIP = {};\n      CanvasGraphics.prototype = {\n        beginDrawing: function beginDrawing(_ref27) {\n          var transform = _ref27.transform,\n            viewport = _ref27.viewport,\n            _ref27$transparency = _ref27.transparency,\n            transparency = _ref27$transparency === void 0 ? false : _ref27$transparency,\n            _ref27$background = _ref27.background,\n            background = _ref27$background === void 0 ? null : _ref27$background;\n          var width = this.ctx.canvas.width;\n          var height = this.ctx.canvas.height;\n          this.ctx.save();\n          this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n          this.ctx.fillRect(0, 0, width, height);\n          this.ctx.restore();\n          if (transparency) {\n            var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n            this.compositeCtx = this.ctx;\n            this.transparentCanvas = transparentCanvas.canvas;\n            this.ctx = transparentCanvas.context;\n            this.ctx.save();\n            this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n          }\n          this.ctx.save();\n          resetCtxToDefault(this.ctx);\n          if (transform) {\n            this.ctx.transform.apply(this.ctx, transform);\n          }\n          this.ctx.transform.apply(this.ctx, viewport.transform);\n          this.baseTransform = this.ctx.mozCurrentTransform.slice();\n          if (this.imageLayer) {\n            this.imageLayer.beginLayout();\n          }\n        },\n        executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n          var argsArray = operatorList.argsArray;\n          var fnArray = operatorList.fnArray;\n          var i = executionStartIdx || 0;\n          var argsArrayLen = argsArray.length;\n          if (argsArrayLen === i) {\n            return i;\n          }\n          var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n          var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n          var steps = 0;\n          var commonObjs = this.commonObjs;\n          var objs = this.objs;\n          var fnId;\n          while (true) {\n            if (stepper !== undefined && i === stepper.nextBreakPoint) {\n              stepper.breakIt(i, continueCallback);\n              return i;\n            }\n            fnId = fnArray[i];\n            if (fnId !== _util.OPS.dependency) {\n              this[fnId].apply(this, argsArray[i]);\n            } else {\n              var _iterator7 = _createForOfIteratorHelper(argsArray[i]),\n                _step7;\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var depObjId = _step7.value;\n                  var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n            }\n            i++;\n            if (i === argsArrayLen) {\n              return i;\n            }\n            if (chunkOperations && ++steps > EXECUTION_STEPS) {\n              if (Date.now() > endTime) {\n                continueCallback();\n                return i;\n              }\n              steps = 0;\n            }\n          }\n        },\n        endDrawing: function CanvasGraphics_endDrawing() {\n          if (this.current.activeSMask !== null) {\n            this.endSMaskGroup();\n          }\n          this.ctx.restore();\n          if (this.transparentCanvas) {\n            this.ctx = this.compositeCtx;\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.drawImage(this.transparentCanvas, 0, 0);\n            this.ctx.restore();\n            this.transparentCanvas = null;\n          }\n          this.cachedCanvases.clear();\n          this.webGLContext.clear();\n          if (this.imageLayer) {\n            this.imageLayer.endLayout();\n          }\n        },\n        setLineWidth: function CanvasGraphics_setLineWidth(width) {\n          this.current.lineWidth = width;\n          this.ctx.lineWidth = width;\n        },\n        setLineCap: function CanvasGraphics_setLineCap(style) {\n          this.ctx.lineCap = LINE_CAP_STYLES[style];\n        },\n        setLineJoin: function CanvasGraphics_setLineJoin(style) {\n          this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n        },\n        setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n          this.ctx.miterLimit = limit;\n        },\n        setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n          var ctx = this.ctx;\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash(dashArray);\n            ctx.lineDashOffset = dashPhase;\n          }\n        },\n        setRenderingIntent: function setRenderingIntent(intent) {},\n        setFlatness: function setFlatness(flatness) {},\n        setGState: function CanvasGraphics_setGState(states) {\n          for (var i = 0, ii = states.length; i < ii; i++) {\n            var state = states[i];\n            var key = state[0];\n            var value = state[1];\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value[0], value[1]);\n                break;\n              case \"CA\":\n                this.current.strokeAlpha = state[1];\n                break;\n              case \"ca\":\n                this.current.fillAlpha = state[1];\n                this.ctx.globalAlpha = state[1];\n                break;\n              case \"BM\":\n                this.ctx.globalCompositeOperation = value;\n                break;\n              case \"SMask\":\n                if (this.current.activeSMask) {\n                  if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                    this.suspendSMaskGroup();\n                  } else {\n                    this.endSMaskGroup();\n                  }\n                }\n                this.current.activeSMask = value ? this.tempSMask : null;\n                if (this.current.activeSMask) {\n                  this.beginSMaskGroup();\n                }\n                this.tempSMask = null;\n                break;\n            }\n          }\n        },\n        beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n          var activeSMask = this.current.activeSMask;\n          var drawnWidth = activeSMask.canvas.width;\n          var drawnHeight = activeSMask.canvas.height;\n          var cacheId = \"smaskGroupAt\" + this.groupLevel;\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var currentCtx = this.ctx;\n          var currentTransform = currentCtx.mozCurrentTransform;\n          this.ctx.save();\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n          groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          this.ctx.save();\n          copyCtxState(groupCtx, this.ctx);\n          this.current.resumeSMaskCtx = groupCtx;\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n          groupCtx.save();\n          groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n          groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n          groupCtx.restore();\n        },\n        resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.current.resumeSMaskCtx;\n          var currentCtx = this.ctx;\n          this.ctx = groupCtx;\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          copyCtxState(groupCtx, this.ctx);\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n        },\n        save: function CanvasGraphics_save() {\n          this.ctx.save();\n          var old = this.current;\n          this.stateStack.push(old);\n          this.current = old.clone();\n          this.current.resumeSMaskCtx = null;\n        },\n        restore: function CanvasGraphics_restore() {\n          if (this.current.resumeSMaskCtx) {\n            this.resumeSMaskGroup();\n          }\n          if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n            this.endSMaskGroup();\n          }\n          if (this.stateStack.length !== 0) {\n            this.current = this.stateStack.pop();\n            this.ctx.restore();\n            this.pendingClip = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n        },\n        transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n          this.ctx.transform(a, b, c, d, e, f);\n          this._cachedGetSinglePixelWidth = null;\n        },\n        constructPath: function CanvasGraphics_constructPath(ops, args) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var x = current.x,\n            y = current.y;\n          for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n            switch (ops[i] | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                var width = args[j++];\n                var height = args[j++];\n                if (width === 0) {\n                  width = this.getSinglePixelWidth();\n                }\n                if (height === 0) {\n                  height = this.getSinglePixelWidth();\n                }\n                var xw = x + width;\n                var yh = y + height;\n                this.ctx.moveTo(x, y);\n                this.ctx.lineTo(xw, y);\n                this.ctx.lineTo(xw, yh);\n                this.ctx.lineTo(x, yh);\n                this.ctx.lineTo(x, y);\n                this.ctx.closePath();\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.moveTo(x, y);\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.lineTo(x, y);\n                break;\n              case _util.OPS.curveTo:\n                x = args[j + 4];\n                y = args[j + 5];\n                ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                x = args[j + 2];\n                y = args[j + 3];\n                ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                ctx.closePath();\n                break;\n            }\n          }\n          current.setCurrentPoint(x, y);\n        },\n        closePath: function CanvasGraphics_closePath() {\n          this.ctx.closePath();\n        },\n        stroke: function CanvasGraphics_stroke(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var strokeColor = this.current.strokeColor;\n          ctx.globalAlpha = this.current.strokeAlpha;\n          if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n            ctx.save();\n            var transform = ctx.mozCurrentTransform;\n            var scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n            ctx.stroke();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n          ctx.globalAlpha = this.current.fillAlpha;\n        },\n        closeStroke: function CanvasGraphics_closeStroke() {\n          this.closePath();\n          this.stroke();\n        },\n        fill: function CanvasGraphics_fill(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var needRestore = false;\n          if (isPatternFill) {\n            ctx.save();\n            if (this.baseTransform) {\n              ctx.setTransform.apply(ctx, this.baseTransform);\n            }\n            ctx.fillStyle = fillColor.getPattern(ctx, this);\n            needRestore = true;\n          }\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n          if (needRestore) {\n            ctx.restore();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n        },\n        eoFill: function CanvasGraphics_eoFill() {\n          this.pendingEOFill = true;\n          this.fill();\n        },\n        fillStroke: function CanvasGraphics_fillStroke() {\n          this.fill(false);\n          this.stroke(false);\n          this.consumePath();\n        },\n        eoFillStroke: function CanvasGraphics_eoFillStroke() {\n          this.pendingEOFill = true;\n          this.fillStroke();\n        },\n        closeFillStroke: function CanvasGraphics_closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        },\n        closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n          this.pendingEOFill = true;\n          this.closePath();\n          this.fillStroke();\n        },\n        endPath: function CanvasGraphics_endPath() {\n          this.consumePath();\n        },\n        clip: function CanvasGraphics_clip() {\n          this.pendingClip = NORMAL_CLIP;\n        },\n        eoClip: function CanvasGraphics_eoClip() {\n          this.pendingClip = EO_CLIP;\n        },\n        beginText: function CanvasGraphics_beginText() {\n          this.current.textMatrix = _util.IDENTITY_MATRIX;\n          this.current.textMatrixScale = 1;\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        endText: function CanvasGraphics_endText() {\n          var paths = this.pendingTextPaths;\n          var ctx = this.ctx;\n          if (paths === undefined) {\n            ctx.beginPath();\n            return;\n          }\n          ctx.save();\n          ctx.beginPath();\n          for (var i = 0; i < paths.length; i++) {\n            var path = paths[i];\n            ctx.setTransform.apply(ctx, path.transform);\n            ctx.translate(path.x, path.y);\n            path.addToPath(ctx, path.fontSize);\n          }\n          ctx.restore();\n          ctx.clip();\n          ctx.beginPath();\n          delete this.pendingTextPaths;\n        },\n        setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n          this.current.charSpacing = spacing;\n        },\n        setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n          this.current.wordSpacing = spacing;\n        },\n        setHScale: function CanvasGraphics_setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        },\n        setLeading: function CanvasGraphics_setLeading(leading) {\n          this.current.leading = -leading;\n        },\n        setFont: function CanvasGraphics_setFont(fontRefName, size) {\n          var fontObj = this.commonObjs.get(fontRefName);\n          var current = this.current;\n          if (!fontObj) {\n            throw new Error(\"Can't find font for \".concat(fontRefName));\n          }\n          current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n          if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n            (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n          }\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          this.current.font = fontObj;\n          this.current.fontSize = size;\n          if (fontObj.isType3Font) {\n            return;\n          }\n          var name = fontObj.loadedName || \"sans-serif\";\n          var bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          var italic = fontObj.italic ? \"italic\" : \"normal\";\n          var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n          var browserFontSize = size;\n          if (size < MIN_FONT_SIZE) {\n            browserFontSize = MIN_FONT_SIZE;\n          } else if (size > MAX_FONT_SIZE) {\n            browserFontSize = MAX_FONT_SIZE;\n          }\n          this.current.fontSizeScale = size / browserFontSize;\n          this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n        },\n        setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n          this.current.textRenderingMode = mode;\n        },\n        setTextRise: function CanvasGraphics_setTextRise(rise) {\n          this.current.textRise = rise;\n        },\n        moveText: function CanvasGraphics_moveText(x, y) {\n          this.current.x = this.current.lineX += x;\n          this.current.y = this.current.lineY += y;\n        },\n        setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        },\n        setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n          this.current.textMatrix = [a, b, c, d, e, f];\n          this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        nextLine: function CanvasGraphics_nextLine() {\n          this.moveText(0, this.current.leading);\n        },\n        paintChar: function paintChar(character, x, y, patternTransform) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var textRenderingMode = current.textRenderingMode;\n          var fontSize = current.fontSize / current.fontSizeScale;\n          var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n          var patternFill = current.patternFill && !font.missingFile;\n          var addToPath;\n          if (font.disableFontFace || isAddToPathSet || patternFill) {\n            addToPath = font.getPathGenerator(this.commonObjs, character);\n          }\n          if (font.disableFontFace || patternFill) {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.beginPath();\n            addToPath(ctx, fontSize);\n            if (patternTransform) {\n              ctx.setTransform.apply(ctx, patternTransform);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fill();\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.stroke();\n            }\n            ctx.restore();\n          } else {\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fillText(character, x, y);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.strokeText(character, x, y);\n            }\n          }\n          if (isAddToPathSet) {\n            var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n            paths.push({\n              transform: ctx.mozCurrentTransform,\n              x: x,\n              y: y,\n              fontSize: fontSize,\n              addToPath: addToPath\n            });\n          }\n        },\n        get isFontSubpixelAAEnabled() {\n          var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n            ctx = _this$cachedCanvases$.context;\n          ctx.scale(1.5, 1);\n          ctx.fillText(\"I\", 0, 10);\n          var data = ctx.getImageData(0, 0, 10, 10).data;\n          var enabled = false;\n          for (var i = 3; i < data.length; i += 4) {\n            if (data[i] > 0 && data[i] < 255) {\n              enabled = true;\n              break;\n            }\n          }\n          return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n        },\n        showText: function CanvasGraphics_showText(glyphs) {\n          var current = this.current;\n          var font = current.font;\n          if (font.isType3Font) {\n            return this.showType3Text(glyphs);\n          }\n          var fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return undefined;\n          }\n          var ctx = this.ctx;\n          var fontSizeScale = current.fontSizeScale;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var fontDirection = current.fontDirection;\n          var textHScale = current.textHScale * fontDirection;\n          var glyphsLength = glyphs.length;\n          var vertical = font.vertical;\n          var spacingDir = vertical ? 1 : -1;\n          var defaultVMetrics = font.defaultVMetrics;\n          var widthAdvanceScale = fontSize * current.fontMatrix[0];\n          var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n          ctx.save();\n          var patternTransform;\n          if (current.patternFill) {\n            ctx.save();\n            var pattern = current.fillColor.getPattern(ctx, this);\n            patternTransform = ctx.mozCurrentTransform;\n            ctx.restore();\n            ctx.fillStyle = pattern;\n          }\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y + current.textRise);\n          if (fontDirection > 0) {\n            ctx.scale(textHScale, -1);\n          } else {\n            ctx.scale(textHScale, 1);\n          }\n          var lineWidth = current.lineWidth;\n          var scale = current.textMatrixScale;\n          if (scale === 0 || lineWidth === 0) {\n            var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              this._cachedGetSinglePixelWidth = null;\n              lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n            }\n          } else {\n            lineWidth /= scale;\n          }\n          if (fontSizeScale !== 1.0) {\n            ctx.scale(fontSizeScale, fontSizeScale);\n            lineWidth /= fontSizeScale;\n          }\n          ctx.lineWidth = lineWidth;\n          var x = 0,\n            i;\n          for (i = 0; i < glyphsLength; ++i) {\n            var glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              x += spacingDir * glyph * fontSize / 1000;\n              continue;\n            }\n            var restoreNeeded = false;\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var character = glyph.fontChar;\n            var accent = glyph.accent;\n            var scaledX, scaledY, scaledAccentX, scaledAccentY;\n            var width = glyph.width;\n            if (vertical) {\n              var vmetric, vx, vy;\n              vmetric = glyph.vmetric || defaultVMetrics;\n              vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n              vx = -vx * widthAdvanceScale;\n              vy = vmetric[2] * widthAdvanceScale;\n              width = vmetric ? -vmetric[0] : width;\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n            if (font.remeasure && width > 0) {\n              var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n              if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                var characterScaleX = width / measuredWidth;\n                restoreNeeded = true;\n                ctx.save();\n                ctx.scale(characterScaleX, 1);\n                scaledX /= characterScaleX;\n              } else if (width !== measuredWidth) {\n                scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n              }\n            }\n            if (glyph.isInFont || font.missingFile) {\n              if (simpleFillText && !accent) {\n                ctx.fillText(character, scaledX, scaledY);\n              } else {\n                this.paintChar(character, scaledX, scaledY, patternTransform);\n                if (accent) {\n                  scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                  scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                  this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                }\n              }\n            }\n            var charWidth;\n            if (vertical) {\n              charWidth = width * widthAdvanceScale - spacing * fontDirection;\n            } else {\n              charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            }\n            x += charWidth;\n            if (restoreNeeded) {\n              ctx.restore();\n            }\n          }\n          if (vertical) {\n            current.y -= x;\n          } else {\n            current.x += x * textHScale;\n          }\n          ctx.restore();\n        },\n        showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var fontSize = current.fontSize;\n          var fontDirection = current.fontDirection;\n          var spacingDir = font.vertical ? 1 : -1;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var textHScale = current.textHScale * fontDirection;\n          var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n          var glyphsLength = glyphs.length;\n          var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n          var i, glyph, width, spacingLength;\n          if (isTextInvisible || fontSize === 0) {\n            return;\n          }\n          this._cachedGetSinglePixelWidth = null;\n          ctx.save();\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y);\n          ctx.scale(textHScale, fontDirection);\n          for (i = 0; i < glyphsLength; ++i) {\n            glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              spacingLength = spacingDir * glyph * fontSize / 1000;\n              this.ctx.translate(spacingLength, 0);\n              current.x += spacingLength * textHScale;\n              continue;\n            }\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var operatorList = font.charProcOperatorList[glyph.operatorListId];\n            if (!operatorList) {\n              (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n              continue;\n            }\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n            var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n            width = transformed[0] * fontSize + spacing;\n            ctx.translate(width, 0);\n            current.x += width * textHScale;\n          }\n          ctx.restore();\n          this.processingType3 = null;\n        },\n        setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n        setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n          this.ctx.rect(llx, lly, urx - llx, ury - lly);\n          this.clip();\n          this.endPath();\n        },\n        getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n          var _this26 = this;\n          var pattern;\n          if (IR[0] === \"TilingPattern\") {\n            var color = IR[1];\n            var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n            var canvasGraphicsFactory = {\n              createCanvasGraphics: function createCanvasGraphics(ctx) {\n                return new CanvasGraphics(ctx, _this26.commonObjs, _this26.objs, _this26.canvasFactory, _this26.webGLContext);\n              }\n            };\n            pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n          } else {\n            pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n          }\n          return pattern;\n        },\n        setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n          this.current.strokeColor = this.getColorN_Pattern(arguments);\n        },\n        setFillColorN: function CanvasGraphics_setFillColorN() {\n          this.current.fillColor = this.getColorN_Pattern(arguments);\n          this.current.patternFill = true;\n        },\n        setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.strokeStyle = color;\n          this.current.strokeColor = color;\n        },\n        setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.fillStyle = color;\n          this.current.fillColor = color;\n          this.current.patternFill = false;\n        },\n        shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n          var ctx = this.ctx;\n          this.save();\n          var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n          ctx.fillStyle = pattern.getPattern(ctx, this, true);\n          var inv = ctx.mozCurrentTransformInverse;\n          if (inv) {\n            var canvas = ctx.canvas;\n            var width = canvas.width;\n            var height = canvas.height;\n            var bl = _util.Util.applyTransform([0, 0], inv);\n            var br = _util.Util.applyTransform([0, height], inv);\n            var ul = _util.Util.applyTransform([width, 0], inv);\n            var ur = _util.Util.applyTransform([width, height], inv);\n            var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          } else {\n            this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n          }\n          this.restore();\n        },\n        beginInlineImage: function CanvasGraphics_beginInlineImage() {\n          (0, _util.unreachable)(\"Should not call beginInlineImage\");\n        },\n        beginImageData: function CanvasGraphics_beginImageData() {\n          (0, _util.unreachable)(\"Should not call beginImageData\");\n        },\n        paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n          this.save();\n          this.baseTransformStack.push(this.baseTransform);\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform.apply(this, matrix);\n          }\n          this.baseTransform = this.ctx.mozCurrentTransform;\n          if (bbox) {\n            var width = bbox[2] - bbox[0];\n            var height = bbox[3] - bbox[1];\n            this.ctx.rect(bbox[0], bbox[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n        },\n        paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n          this.restore();\n          this.baseTransform = this.baseTransformStack.pop();\n        },\n        beginGroup: function CanvasGraphics_beginGroup(group) {\n          this.save();\n          var currentCtx = this.ctx;\n          if (!group.isolated) {\n            (0, _util.info)(\"TODO: Support non-isolated groups.\");\n          }\n          if (group.knockout) {\n            (0, _util.warn)(\"Knockout groups not supported.\");\n          }\n          var currentTransform = currentCtx.mozCurrentTransform;\n          if (group.matrix) {\n            currentCtx.transform.apply(currentCtx, group.matrix);\n          }\n          if (!group.bbox) {\n            throw new Error(\"Bounding box is required.\");\n          }\n          var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n          var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n          bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n          var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n          var scaleX = 1,\n            scaleY = 1;\n          if (drawnWidth > MAX_GROUP_SIZE) {\n            scaleX = drawnWidth / MAX_GROUP_SIZE;\n            drawnWidth = MAX_GROUP_SIZE;\n          }\n          if (drawnHeight > MAX_GROUP_SIZE) {\n            scaleY = drawnHeight / MAX_GROUP_SIZE;\n            drawnHeight = MAX_GROUP_SIZE;\n          }\n          var cacheId = \"groupAt\" + this.groupLevel;\n          if (group.smask) {\n            cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n          }\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / scaleX, 1 / scaleY);\n          groupCtx.translate(-offsetX, -offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          if (group.smask) {\n            this.smaskStack.push({\n              canvas: scratchCanvas.canvas,\n              context: groupCtx,\n              offsetX: offsetX,\n              offsetY: offsetY,\n              scaleX: scaleX,\n              scaleY: scaleY,\n              subtype: group.smask.subtype,\n              backdrop: group.smask.backdrop,\n              transferMap: group.smask.transferMap || null,\n              startTransformInverse: null\n            });\n          } else {\n            currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n            currentCtx.translate(offsetX, offsetY);\n            currentCtx.scale(scaleX, scaleY);\n          }\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n          this.current.activeSMask = null;\n        },\n        endGroup: function CanvasGraphics_endGroup(group) {\n          this.groupLevel--;\n          var groupCtx = this.ctx;\n          this.ctx = this.groupStack.pop();\n          if (this.ctx.imageSmoothingEnabled !== undefined) {\n            this.ctx.imageSmoothingEnabled = false;\n          } else {\n            this.ctx.mozImageSmoothingEnabled = false;\n          }\n          if (group.smask) {\n            this.tempSMask = this.smaskStack.pop();\n          } else {\n            this.ctx.drawImage(groupCtx.canvas, 0, 0);\n          }\n          this.restore();\n        },\n        beginAnnotations: function CanvasGraphics_beginAnnotations() {\n          this.save();\n          if (this.baseTransform) {\n            this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n          }\n        },\n        endAnnotations: function CanvasGraphics_endAnnotations() {\n          this.restore();\n        },\n        beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n          this.save();\n          resetCtxToDefault(this.ctx);\n          this.current = new CanvasExtraState();\n          if (Array.isArray(rect) && rect.length === 4) {\n            var width = rect[2] - rect[0];\n            var height = rect[3] - rect[1];\n            this.ctx.rect(rect[0], rect[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n          this.transform.apply(this, transform);\n          this.transform.apply(this, matrix);\n        },\n        endAnnotation: function CanvasGraphics_endAnnotation() {\n          this.restore();\n        },\n        paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n          var ctx = this.ctx;\n          var width = img.width,\n            height = img.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var glyph = this.processingType3;\n          if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n            if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n              glyph.compiled = compileType3Glyph({\n                data: img.data,\n                width: width,\n                height: height\n              });\n            } else {\n              glyph.compiled = null;\n            }\n          }\n          if (glyph && glyph.compiled) {\n            glyph.compiled(ctx);\n            return;\n          }\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, img);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          this.paintInlineImageXObject(maskCanvas.canvas);\n        },\n        paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, imgData);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          var ctx = this.ctx;\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            ctx.save();\n            ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          for (var i = 0, ii = images.length; i < ii; i++) {\n            var image = images[i];\n            var width = image.width,\n              height = image.height;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, image);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            ctx.save();\n            ctx.transform.apply(ctx, image.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n          var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        },\n        paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n          var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          var width = imgData.width;\n          var height = imgData.height;\n          var map = [];\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            map.push({\n              transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n              x: 0,\n              y: 0,\n              w: width,\n              h: height\n            });\n          }\n          this.paintInlineImageXObjectGroup(imgData, map);\n        },\n        paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var ctx = this.ctx;\n          this.save();\n          ctx.scale(1 / width, -1 / height);\n          var currentTransform = ctx.mozCurrentTransformInverse;\n          var a = currentTransform[0],\n            b = currentTransform[1];\n          var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n          var c = currentTransform[2],\n            d = currentTransform[3];\n          var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n          var imgToPaint, tmpCanvas;\n          if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n            imgToPaint = imgData;\n          } else {\n            tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n            imgToPaint = tmpCanvas.canvas;\n          }\n          var paintWidth = width,\n            paintHeight = height;\n          var tmpCanvasId = \"prescale1\";\n          while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n            var newWidth = paintWidth,\n              newHeight = paintHeight;\n            if (widthScale > 2 && paintWidth > 1) {\n              newWidth = Math.ceil(paintWidth / 2);\n              widthScale /= paintWidth / newWidth;\n            }\n            if (heightScale > 2 && paintHeight > 1) {\n              newHeight = Math.ceil(paintHeight / 2);\n              heightScale /= paintHeight / newHeight;\n            }\n            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n            tmpCtx = tmpCanvas.context;\n            tmpCtx.clearRect(0, 0, newWidth, newHeight);\n            tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n            imgToPaint = tmpCanvas.canvas;\n            paintWidth = newWidth;\n            paintHeight = newHeight;\n            tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n          }\n          ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n          if (this.imageLayer) {\n            var position = this.getCanvasPosition(0, -height);\n            this.imageLayer.appendImage({\n              imgData: imgData,\n              left: position[0],\n              top: position[1],\n              width: width / currentTransform[0],\n              height: height / currentTransform[3]\n            });\n          }\n          this.restore();\n        },\n        paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n          var ctx = this.ctx;\n          var w = imgData.width;\n          var h = imgData.height;\n          var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n          var tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData);\n          for (var i = 0, ii = map.length; i < ii; i++) {\n            var entry = map[i];\n            ctx.save();\n            ctx.transform.apply(ctx, entry.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(entry.x, entry.y);\n              this.imageLayer.appendImage({\n                imgData: imgData,\n                left: position[0],\n                top: position[1],\n                width: w,\n                height: h\n              });\n            }\n            ctx.restore();\n          }\n        },\n        paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n          this.ctx.fillRect(0, 0, 1, 1);\n        },\n        paintXObject: function CanvasGraphics_paintXObject() {\n          (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n        },\n        markPoint: function CanvasGraphics_markPoint(tag) {},\n        markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n        beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n        beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n        endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n        beginCompat: function CanvasGraphics_beginCompat() {},\n        endCompat: function CanvasGraphics_endCompat() {},\n        consumePath: function CanvasGraphics_consumePath() {\n          var ctx = this.ctx;\n          if (this.pendingClip) {\n            if (this.pendingClip === EO_CLIP) {\n              ctx.clip(\"evenodd\");\n            } else {\n              ctx.clip();\n            }\n            this.pendingClip = null;\n          }\n          ctx.beginPath();\n        },\n        getSinglePixelWidth: function getSinglePixelWidth(scale) {\n          if (this._cachedGetSinglePixelWidth === null) {\n            var inverse = this.ctx.mozCurrentTransformInverse;\n            this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n          }\n          return this._cachedGetSinglePixelWidth;\n        },\n        getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n          var transform = this.ctx.mozCurrentTransform;\n          return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n        }\n      };\n      for (var op in _util.OPS) {\n        CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n      }\n      return CanvasGraphics;\n    }();\n    exports.CanvasGraphics = CanvasGraphics;\n\n    /***/\n  }), (/* 9 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getShadingPatternFromIR = getShadingPatternFromIR;\n    exports.TilingPattern = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var ShadingIRs = {};\n    function applyBoundingBox(ctx, bbox) {\n      if (!bbox || typeof Path2D === \"undefined\") {\n        return;\n      }\n      var width = bbox[2] - bbox[0];\n      var height = bbox[3] - bbox[1];\n      var region = new Path2D();\n      region.rect(bbox[0], bbox[1], width, height);\n      ctx.clip(region);\n    }\n    ShadingIRs.RadialAxial = {\n      fromIR: function RadialAxial_fromIR(raw) {\n        var type = raw[1];\n        var bbox = raw[2];\n        var colorStops = raw[3];\n        var p0 = raw[4];\n        var p1 = raw[5];\n        var r0 = raw[6];\n        var r1 = raw[7];\n        return {\n          type: \"Pattern\",\n          getPattern: function RadialAxial_getPattern(ctx) {\n            applyBoundingBox(ctx, bbox);\n            var grad;\n            if (type === \"axial\") {\n              grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n            } else if (type === \"radial\") {\n              grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n            }\n            for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n              var c = colorStops[i];\n              grad.addColorStop(c[0], c[1]);\n            }\n            return grad;\n          }\n        };\n      }\n    };\n    var createMeshCanvas = function createMeshCanvasClosure() {\n      function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n        var coords = context.coords,\n          colors = context.colors;\n        var bytes = data.data,\n          rowSize = data.width * 4;\n        var tmp;\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        if (coords[p2 + 1] > coords[p3 + 1]) {\n          tmp = p2;\n          p2 = p3;\n          p3 = tmp;\n          tmp = c2;\n          c2 = c3;\n          c3 = tmp;\n        }\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n        var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n        var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n        var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n        var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n        var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n        if (y1 >= y3) {\n          return;\n        }\n        var c1r = colors[c1],\n          c1g = colors[c1 + 1],\n          c1b = colors[c1 + 2];\n        var c2r = colors[c2],\n          c2g = colors[c2 + 1],\n          c2b = colors[c2 + 2];\n        var c3r = colors[c3],\n          c3g = colors[c3 + 1],\n          c3b = colors[c3 + 2];\n        var minY = Math.round(y1),\n          maxY = Math.round(y3);\n        var xa, car, cag, cab;\n        var xb, cbr, cbg, cbb;\n        for (var y = minY; y <= maxY; y++) {\n          if (y < y2) {\n            var _k = void 0;\n            if (y < y1) {\n              _k = 0;\n            } else if (y1 === y2) {\n              _k = 1;\n            } else {\n              _k = (y1 - y) / (y1 - y2);\n            }\n            xa = x1 - (x1 - x2) * _k;\n            car = c1r - (c1r - c2r) * _k;\n            cag = c1g - (c1g - c2g) * _k;\n            cab = c1b - (c1b - c2b) * _k;\n          } else {\n            var _k2 = void 0;\n            if (y > y3) {\n              _k2 = 1;\n            } else if (y2 === y3) {\n              _k2 = 0;\n            } else {\n              _k2 = (y2 - y) / (y2 - y3);\n            }\n            xa = x2 - (x2 - x3) * _k2;\n            car = c2r - (c2r - c3r) * _k2;\n            cag = c2g - (c2g - c3g) * _k2;\n            cab = c2b - (c2b - c3b) * _k2;\n          }\n          var k = void 0;\n          if (y < y1) {\n            k = 0;\n          } else if (y > y3) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y3);\n          }\n          xb = x1 - (x1 - x3) * k;\n          cbr = c1r - (c1r - c3r) * k;\n          cbg = c1g - (c1g - c3g) * k;\n          cbb = c1b - (c1b - c3b) * k;\n          var x1_ = Math.round(Math.min(xa, xb));\n          var x2_ = Math.round(Math.max(xa, xb));\n          var j = rowSize * y + x1_ * 4;\n          for (var x = x1_; x <= x2_; x++) {\n            k = (xa - x) / (xa - xb);\n            if (k < 0) {\n              k = 0;\n            } else if (k > 1) {\n              k = 1;\n            }\n            bytes[j++] = car - (car - cbr) * k | 0;\n            bytes[j++] = cag - (cag - cbg) * k | 0;\n            bytes[j++] = cab - (cab - cbb) * k | 0;\n            bytes[j++] = 255;\n          }\n        }\n      }\n      function drawFigure(data, figure, context) {\n        var ps = figure.coords;\n        var cs = figure.colors;\n        var i, ii;\n        switch (figure.type) {\n          case \"lattice\":\n            var verticesPerRow = figure.verticesPerRow;\n            var rows = Math.floor(ps.length / verticesPerRow) - 1;\n            var cols = verticesPerRow - 1;\n            for (i = 0; i < rows; i++) {\n              var q = i * verticesPerRow;\n              for (var j = 0; j < cols; j++, q++) {\n                drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n              }\n            }\n            break;\n          case \"triangles\":\n            for (i = 0, ii = ps.length; i < ii; i += 3) {\n              drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n            }\n            break;\n          default:\n            throw new Error(\"illegal figure\");\n        }\n      }\n      function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n        var EXPECTED_SCALE = 1.1;\n        var MAX_PATTERN_SIZE = 3000;\n        var BORDER_SIZE = 2;\n        var offsetX = Math.floor(bounds[0]);\n        var offsetY = Math.floor(bounds[1]);\n        var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n        var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n        var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var scaleX = boundsWidth / width;\n        var scaleY = boundsHeight / height;\n        var context = {\n          coords: coords,\n          colors: colors,\n          offsetX: -offsetX,\n          offsetY: -offsetY,\n          scaleX: 1 / scaleX,\n          scaleY: 1 / scaleY\n        };\n        var paddedWidth = width + BORDER_SIZE * 2;\n        var paddedHeight = height + BORDER_SIZE * 2;\n        var canvas, tmpCanvas, i, ii;\n        if (webGLContext.isEnabled) {\n          canvas = webGLContext.drawFigures({\n            width: width,\n            height: height,\n            backgroundColor: backgroundColor,\n            figures: figures,\n            context: context\n          });\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        } else {\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          var tmpCtx = tmpCanvas.context;\n          var data = tmpCtx.createImageData(width, height);\n          if (backgroundColor) {\n            var bytes = data.data;\n            for (i = 0, ii = bytes.length; i < ii; i += 4) {\n              bytes[i] = backgroundColor[0];\n              bytes[i + 1] = backgroundColor[1];\n              bytes[i + 2] = backgroundColor[2];\n              bytes[i + 3] = 255;\n            }\n          }\n          for (i = 0; i < figures.length; i++) {\n            drawFigure(data, figures[i], context);\n          }\n          tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        }\n        return {\n          canvas: canvas,\n          offsetX: offsetX - BORDER_SIZE * scaleX,\n          offsetY: offsetY - BORDER_SIZE * scaleY,\n          scaleX: scaleX,\n          scaleY: scaleY\n        };\n      }\n      return createMeshCanvas;\n    }();\n    ShadingIRs.Mesh = {\n      fromIR: function Mesh_fromIR(raw) {\n        var coords = raw[2];\n        var colors = raw[3];\n        var figures = raw[4];\n        var bounds = raw[5];\n        var matrix = raw[6];\n        var bbox = raw[7];\n        var background = raw[8];\n        return {\n          type: \"Pattern\",\n          getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n            applyBoundingBox(ctx, bbox);\n            var scale;\n            if (shadingFill) {\n              scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (matrix) {\n                var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n            if (!shadingFill) {\n              ctx.setTransform.apply(ctx, owner.baseTransform);\n              if (matrix) {\n                ctx.transform.apply(ctx, matrix);\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        };\n      }\n    };\n    ShadingIRs.Dummy = {\n      fromIR: function Dummy_fromIR() {\n        return {\n          type: \"Pattern\",\n          getPattern: function Dummy_fromIR_getPattern() {\n            return \"hotpink\";\n          }\n        };\n      }\n    };\n    function getShadingPatternFromIR(raw) {\n      var shadingIR = ShadingIRs[raw[0]];\n      if (!shadingIR) {\n        throw new Error(\"Unknown IR type: \".concat(raw[0]));\n      }\n      return shadingIR.fromIR(raw);\n    }\n    var TilingPattern = function TilingPatternClosure() {\n      var PaintType = {\n        COLORED: 1,\n        UNCOLORED: 2\n      };\n      var MAX_PATTERN_SIZE = 3000;\n      function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n        this.operatorList = IR[2];\n        this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n        this.bbox = IR[4];\n        this.xstep = IR[5];\n        this.ystep = IR[6];\n        this.paintType = IR[7];\n        this.tilingType = IR[8];\n        this.color = color;\n        this.canvasGraphicsFactory = canvasGraphicsFactory;\n        this.baseTransform = baseTransform;\n        this.type = \"Pattern\";\n        this.ctx = ctx;\n      }\n      TilingPattern.prototype = {\n        createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n          var operatorList = this.operatorList;\n          var bbox = this.bbox;\n          var xstep = this.xstep;\n          var ystep = this.ystep;\n          var paintType = this.paintType;\n          var tilingType = this.tilingType;\n          var color = this.color;\n          var canvasGraphicsFactory = this.canvasGraphicsFactory;\n          (0, _util.info)(\"TilingType: \" + tilingType);\n          var x0 = bbox[0],\n            y0 = bbox[1],\n            x1 = bbox[2],\n            y1 = bbox[3];\n          var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n          var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n          var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n          var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n          var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n          var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n          var tmpCtx = tmpCanvas.context;\n          var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n          graphics.groupLevel = owner.groupLevel;\n          this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n          graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n          graphics.transform(1, 0, 0, 1, -x0, -y0);\n          this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n          graphics.executeOperatorList(operatorList);\n          this.ctx.transform(1, 0, 0, 1, x0, y0);\n          this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n          return tmpCanvas.canvas;\n        },\n        getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n          step = Math.abs(step);\n          var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n          var size = Math.ceil(step * scale);\n          if (size >= maxSize) {\n            size = maxSize;\n          } else {\n            scale = size / step;\n          }\n          return {\n            scale: scale,\n            size: size\n          };\n        },\n        clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n          if (Array.isArray(bbox) && bbox.length === 4) {\n            var bboxWidth = x1 - x0;\n            var bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.clip();\n            graphics.endPath();\n          }\n        },\n        setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n          var context = graphics.ctx,\n            current = graphics.current;\n          switch (paintType) {\n            case PaintType.COLORED:\n              var ctx = this.ctx;\n              context.fillStyle = ctx.fillStyle;\n              context.strokeStyle = ctx.strokeStyle;\n              current.fillColor = ctx.fillStyle;\n              current.strokeColor = ctx.strokeStyle;\n              break;\n            case PaintType.UNCOLORED:\n              var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n              context.fillStyle = cssColor;\n              context.strokeStyle = cssColor;\n              current.fillColor = cssColor;\n              current.strokeColor = cssColor;\n              break;\n            default:\n              throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n          }\n        },\n        getPattern: function TilingPattern_getPattern(ctx, owner) {\n          ctx = this.ctx;\n          ctx.setTransform.apply(ctx, this.baseTransform);\n          ctx.transform.apply(ctx, this.matrix);\n          var temporaryPatternCanvas = this.createPatternCanvas(owner);\n          return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n        }\n      };\n      return TilingPattern;\n    }();\n    exports.TilingPattern = TilingPattern;\n\n    /***/\n  }), (/* 10 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.GlobalWorkerOptions = void 0;\n    var GlobalWorkerOptions = Object.create(null);\n    exports.GlobalWorkerOptions = GlobalWorkerOptions;\n    GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n    GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n    /***/\n  }), (/* 11 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.MessageHandler = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var CallbackKind = {\n      UNKNOWN: 0,\n      DATA: 1,\n      ERROR: 2\n    };\n    var StreamKind = {\n      UNKNOWN: 0,\n      CANCEL: 1,\n      CANCEL_COMPLETE: 2,\n      CLOSE: 3,\n      ENQUEUE: 4,\n      ERROR: 5,\n      PULL: 6,\n      PULL_COMPLETE: 7,\n      START_COMPLETE: 8\n    };\n    function wrapReason(reason) {\n      if (_typeof(reason) !== \"object\" || reason === null) {\n        return reason;\n      }\n      switch (reason.name) {\n        case \"AbortException\":\n          return new _util.AbortException(reason.message);\n        case \"MissingPDFException\":\n          return new _util.MissingPDFException(reason.message);\n        case \"UnexpectedResponseException\":\n          return new _util.UnexpectedResponseException(reason.message, reason.status);\n        case \"UnknownErrorException\":\n          return new _util.UnknownErrorException(reason.message, reason.details);\n        default:\n          return new _util.UnknownErrorException(reason.message, reason.toString());\n      }\n    }\n    var MessageHandler = /*#__PURE__*/function () {\n      function MessageHandler(sourceName, targetName, comObj) {\n        var _this27 = this;\n        _classCallCheck(this, MessageHandler);\n        this.sourceName = sourceName;\n        this.targetName = targetName;\n        this.comObj = comObj;\n        this.callbackId = 1;\n        this.streamId = 1;\n        this.postMessageTransfers = true;\n        this.streamSinks = Object.create(null);\n        this.streamControllers = Object.create(null);\n        this.callbackCapabilities = Object.create(null);\n        this.actionHandler = Object.create(null);\n        this._onComObjOnMessage = function (event) {\n          var data = event.data;\n          if (data.targetName !== _this27.sourceName) {\n            return;\n          }\n          if (data.stream) {\n            _this27._processStreamMessage(data);\n            return;\n          }\n          if (data.callback) {\n            var callbackId = data.callbackId;\n            var capability = _this27.callbackCapabilities[callbackId];\n            if (!capability) {\n              throw new Error(\"Cannot resolve callback \".concat(callbackId));\n            }\n            delete _this27.callbackCapabilities[callbackId];\n            if (data.callback === CallbackKind.DATA) {\n              capability.resolve(data.data);\n            } else if (data.callback === CallbackKind.ERROR) {\n              capability.reject(wrapReason(data.reason));\n            } else {\n              throw new Error(\"Unexpected callback case\");\n            }\n            return;\n          }\n          var action = _this27.actionHandler[data.action];\n          if (!action) {\n            throw new Error(\"Unknown action from worker: \".concat(data.action));\n          }\n          if (data.callbackId) {\n            var cbSourceName = _this27.sourceName;\n            var cbTargetName = data.sourceName;\n            new Promise(function (resolve) {\n              resolve(action(data.data));\n            }).then(function (result) {\n              comObj.postMessage({\n                sourceName: cbSourceName,\n                targetName: cbTargetName,\n                callback: CallbackKind.DATA,\n                callbackId: data.callbackId,\n                data: result\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: cbSourceName,\n                targetName: cbTargetName,\n                callback: CallbackKind.ERROR,\n                callbackId: data.callbackId,\n                reason: wrapReason(reason)\n              });\n            });\n            return;\n          }\n          if (data.streamId) {\n            _this27._createStreamSink(data);\n            return;\n          }\n          action(data.data);\n        };\n        comObj.addEventListener(\"message\", this._onComObjOnMessage);\n      }\n      return _createClass(MessageHandler, [{\n        key: \"on\",\n        value: function on(actionName, handler) {\n          var ah = this.actionHandler;\n          if (ah[actionName]) {\n            throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n          }\n          ah[actionName] = handler;\n        }\n      }, {\n        key: \"send\",\n        value: function send(actionName, data, transfers) {\n          this._postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            data: data\n          }, transfers);\n        }\n      }, {\n        key: \"sendWithPromise\",\n        value: function sendWithPromise(actionName, data, transfers) {\n          var callbackId = this.callbackId++;\n          var capability = (0, _util.createPromiseCapability)();\n          this.callbackCapabilities[callbackId] = capability;\n          try {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              callbackId: callbackId,\n              data: data\n            }, transfers);\n          } catch (ex) {\n            capability.reject(ex);\n          }\n          return capability.promise;\n        }\n      }, {\n        key: \"sendWithStream\",\n        value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n          var _this28 = this;\n          var streamId = this.streamId++;\n          var sourceName = this.sourceName;\n          var targetName = this.targetName;\n          var comObj = this.comObj;\n          return new ReadableStream({\n            start: function start(controller) {\n              var startCapability = (0, _util.createPromiseCapability)();\n              _this28.streamControllers[streamId] = {\n                controller: controller,\n                startCall: startCapability,\n                pullCall: null,\n                cancelCall: null,\n                isClosed: false\n              };\n              _this28._postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                action: actionName,\n                streamId: streamId,\n                data: data,\n                desiredSize: controller.desiredSize\n              }, transfers);\n              return startCapability.promise;\n            },\n            pull: function pull(controller) {\n              var pullCapability = (0, _util.createPromiseCapability)();\n              _this28.streamControllers[streamId].pullCall = pullCapability;\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.PULL,\n                streamId: streamId,\n                desiredSize: controller.desiredSize\n              });\n              return pullCapability.promise;\n            },\n            cancel: function cancel(reason) {\n              (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n              var cancelCapability = (0, _util.createPromiseCapability)();\n              _this28.streamControllers[streamId].cancelCall = cancelCapability;\n              _this28.streamControllers[streamId].isClosed = true;\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.CANCEL,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n              return cancelCapability.promise;\n            }\n          }, queueingStrategy);\n        }\n      }, {\n        key: \"_createStreamSink\",\n        value: function _createStreamSink(data) {\n          var self = this;\n          var action = this.actionHandler[data.action];\n          var streamId = data.streamId;\n          var sourceName = this.sourceName;\n          var targetName = data.sourceName;\n          var comObj = this.comObj;\n          var streamSink = {\n            enqueue: function enqueue(chunk) {\n              var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              var transfers = arguments.length > 2 ? arguments[2] : undefined;\n              if (this.isCancelled) {\n                return;\n              }\n              var lastDesiredSize = this.desiredSize;\n              this.desiredSize -= size;\n              if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                this.sinkCapability = (0, _util.createPromiseCapability)();\n                this.ready = this.sinkCapability.promise;\n              }\n              self._postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.ENQUEUE,\n                streamId: streamId,\n                chunk: chunk\n              }, transfers);\n            },\n            close: function close() {\n              if (this.isCancelled) {\n                return;\n              }\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.CLOSE,\n                streamId: streamId\n              });\n              delete self.streamSinks[streamId];\n            },\n            error: function error(reason) {\n              (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n              if (this.isCancelled) {\n                return;\n              }\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.ERROR,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            },\n            sinkCapability: (0, _util.createPromiseCapability)(),\n            onPull: null,\n            onCancel: null,\n            isCancelled: false,\n            desiredSize: data.desiredSize,\n            ready: null\n          };\n          streamSink.sinkCapability.resolve();\n          streamSink.ready = streamSink.sinkCapability.promise;\n          this.streamSinks[streamId] = streamSink;\n          new Promise(function (resolve) {\n            resolve(action(data.data, streamSink));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName: sourceName,\n              targetName: targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId: streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName: sourceName,\n              targetName: targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId: streamId,\n              reason: wrapReason(reason)\n            });\n          });\n        }\n      }, {\n        key: \"_processStreamMessage\",\n        value: function _processStreamMessage(data) {\n          var streamId = data.streamId;\n          var sourceName = this.sourceName;\n          var targetName = data.sourceName;\n          var comObj = this.comObj;\n          switch (data.stream) {\n            case StreamKind.START_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].startCall.resolve();\n              } else {\n                this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n              }\n              break;\n            case StreamKind.PULL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].pullCall.resolve();\n              } else {\n                this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n              }\n              break;\n            case StreamKind.PULL:\n              if (!this.streamSinks[streamId]) {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId: streamId,\n                  success: true\n                });\n                break;\n              }\n              if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                this.streamSinks[streamId].sinkCapability.resolve();\n              }\n              this.streamSinks[streamId].desiredSize = data.desiredSize;\n              var onPull = this.streamSinks[data.streamId].onPull;\n              new Promise(function (resolve) {\n                resolve(onPull && onPull());\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId: streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              break;\n            case StreamKind.ENQUEUE:\n              (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n              this.streamControllers[streamId].controller.enqueue(data.chunk);\n              break;\n            case StreamKind.CLOSE:\n              (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n              this.streamControllers[streamId].isClosed = true;\n              this.streamControllers[streamId].controller.close();\n              this._deleteStreamController(streamId);\n              break;\n            case StreamKind.ERROR:\n              (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n              this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n              this._deleteStreamController(streamId);\n              break;\n            case StreamKind.CANCEL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].cancelCall.resolve();\n              } else {\n                this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n              }\n              this._deleteStreamController(streamId);\n              break;\n            case StreamKind.CANCEL:\n              if (!this.streamSinks[streamId]) {\n                break;\n              }\n              var onCancel = this.streamSinks[data.streamId].onCancel;\n              new Promise(function (resolve) {\n                resolve(onCancel && onCancel(wrapReason(data.reason)));\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId: streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n              this.streamSinks[streamId].isCancelled = true;\n              delete this.streamSinks[streamId];\n              break;\n            default:\n              throw new Error(\"Unexpected stream case\");\n          }\n        }\n      }, {\n        key: \"_deleteStreamController\",\n        value: function () {\n          var _deleteStreamController2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(streamId) {\n            return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                    return capability && capability.promise;\n                  }));\n                case 2:\n                  delete this.streamControllers[streamId];\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6, this);\n          }));\n          function _deleteStreamController(_x5) {\n            return _deleteStreamController2.apply(this, arguments);\n          }\n          return _deleteStreamController;\n        }()\n      }, {\n        key: \"_postMessage\",\n        value: function _postMessage(message, transfers) {\n          if (transfers && this.postMessageTransfers) {\n            this.comObj.postMessage(message, transfers);\n          } else {\n            this.comObj.postMessage(message);\n          }\n        }\n      }, {\n        key: \"destroy\",\n        value: function destroy() {\n          this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n        }\n      }]);\n    }();\n    exports.MessageHandler = MessageHandler;\n\n    /***/\n  }), (/* 12 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Metadata = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _xml_parser = __w_pdfjs_require__(13);\n    var Metadata = /*#__PURE__*/function () {\n      function Metadata(data) {\n        _classCallCheck(this, Metadata);\n        (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n        data = this._repair(data);\n        var parser = new _xml_parser.SimpleXMLParser();\n        var xmlDocument = parser.parseFromString(data);\n        this._metadataMap = new Map();\n        if (xmlDocument) {\n          this._parse(xmlDocument);\n        }\n      }\n      return _createClass(Metadata, [{\n        key: \"_repair\",\n        value: function _repair(data) {\n          return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n            var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n              return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n            }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n              switch (name) {\n                case \"amp\":\n                  return \"&\";\n                case \"apos\":\n                  return \"'\";\n                case \"gt\":\n                  return \">\";\n                case \"lt\":\n                  return \"<\";\n                case \"quot\":\n                  return '\"';\n              }\n              throw new Error(\"_repair: \".concat(name, \" isn't defined.\"));\n            });\n            var chars = \"\";\n            for (var i = 0, ii = bytes.length; i < ii; i += 2) {\n              var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n              if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                chars += String.fromCharCode(code);\n              } else {\n                chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n              }\n            }\n            return \">\" + chars;\n          });\n        }\n      }, {\n        key: \"_parse\",\n        value: function _parse(xmlDocument) {\n          var rdf = xmlDocument.documentElement;\n          if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n            rdf = rdf.firstChild;\n            while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.nextSibling;\n            }\n          }\n          var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n          if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n            return;\n          }\n          var children = rdf.childNodes;\n          for (var i = 0, ii = children.length; i < ii; i++) {\n            var desc = children[i];\n            if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n              continue;\n            }\n            for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {\n              if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                var entry = desc.childNodes[j];\n                var name = entry.nodeName.toLowerCase();\n                this._metadataMap.set(name, entry.textContent.trim());\n              }\n            }\n          }\n        }\n      }, {\n        key: \"get\",\n        value: function get(name) {\n          return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n        }\n      }, {\n        key: \"getAll\",\n        value: function getAll() {\n          var obj = Object.create(null);\n          var _iterator8 = _createForOfIteratorHelper(this._metadataMap),\n            _step8;\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var _step8$value = _slicedToArray(_step8.value, 2),\n                key = _step8$value[0],\n                value = _step8$value[1];\n              obj[key] = value;\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n          return obj;\n        }\n      }, {\n        key: \"has\",\n        value: function has(name) {\n          return this._metadataMap.has(name);\n        }\n      }]);\n    }();\n    exports.Metadata = Metadata;\n\n    /***/\n  }), (/* 13 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SimpleXMLParser = void 0;\n    var XMLParserErrorCode = {\n      NoError: 0,\n      EndOfDocument: -1,\n      UnterminatedCdat: -2,\n      UnterminatedXmlDeclaration: -3,\n      UnterminatedDoctypeDeclaration: -4,\n      UnterminatedComment: -5,\n      MalformedElement: -6,\n      OutOfMemory: -7,\n      UnterminatedAttributeValue: -8,\n      UnterminatedElement: -9,\n      ElementNeverBegun: -10\n    };\n    function isWhitespace(s, index) {\n      var ch = s[index];\n      return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n    }\n    function isWhitespaceString(s) {\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (!isWhitespace(s, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    var XMLParserBase = /*#__PURE__*/function () {\n      function XMLParserBase() {\n        _classCallCheck(this, XMLParserBase);\n      }\n      return _createClass(XMLParserBase, [{\n        key: \"_resolveEntities\",\n        value: function _resolveEntities(s) {\n          var _this29 = this;\n          return s.replace(/&([^;]+);/g, function (all, entity) {\n            if (entity.substring(0, 2) === \"#x\") {\n              return String.fromCharCode(parseInt(entity.substring(2), 16));\n            } else if (entity.substring(0, 1) === \"#\") {\n              return String.fromCharCode(parseInt(entity.substring(1), 10));\n            }\n            switch (entity) {\n              case \"lt\":\n                return \"<\";\n              case \"gt\":\n                return \">\";\n              case \"amp\":\n                return \"&\";\n              case \"quot\":\n                return '\"';\n            }\n            return _this29.onResolveEntity(entity);\n          });\n        }\n      }, {\n        key: \"_parseContent\",\n        value: function _parseContent(s, start) {\n          var attributes = [];\n          var pos = start;\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n          var name = s.substring(start, pos);\n          skipWs();\n          while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n            skipWs();\n            var attrName = \"\",\n              attrValue = \"\";\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n              attrName += s[pos];\n              ++pos;\n            }\n            skipWs();\n            if (s[pos] !== \"=\") {\n              return null;\n            }\n            ++pos;\n            skipWs();\n            var attrEndChar = s[pos];\n            if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n              return null;\n            }\n            var attrEndIndex = s.indexOf(attrEndChar, ++pos);\n            if (attrEndIndex < 0) {\n              return null;\n            }\n            attrValue = s.substring(pos, attrEndIndex);\n            attributes.push({\n              name: attrName,\n              value: this._resolveEntities(attrValue)\n            });\n            pos = attrEndIndex + 1;\n            skipWs();\n          }\n          return {\n            name: name,\n            attributes: attributes,\n            parsed: pos - start\n          };\n        }\n      }, {\n        key: \"_parseProcessingInstruction\",\n        value: function _parseProcessingInstruction(s, start) {\n          var pos = start;\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n          var name = s.substring(start, pos);\n          skipWs();\n          var attrStart = pos;\n          while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n            ++pos;\n          }\n          var value = s.substring(attrStart, pos);\n          return {\n            name: name,\n            value: value,\n            parsed: pos - start\n          };\n        }\n      }, {\n        key: \"parseXml\",\n        value: function parseXml(s) {\n          var i = 0;\n          while (i < s.length) {\n            var ch = s[i];\n            var j = i;\n            if (ch === \"<\") {\n              ++j;\n              var ch2 = s[j];\n              var q = void 0;\n              switch (ch2) {\n                case \"/\":\n                  ++j;\n                  q = s.indexOf(\">\", j);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n                  this.onEndElement(s.substring(j, q));\n                  j = q + 1;\n                  break;\n                case \"?\":\n                  ++j;\n                  var pi = this._parseProcessingInstruction(s, j);\n                  if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                    this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                    return;\n                  }\n                  this.onPi(pi.name, pi.value);\n                  j += pi.parsed + 2;\n                  break;\n                case \"!\":\n                  if (s.substring(j + 1, j + 3) === \"--\") {\n                    q = s.indexOf(\"-->\", j + 3);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedComment);\n                      return;\n                    }\n                    this.onComment(s.substring(j + 3, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                    q = s.indexOf(\"]]>\", j + 8);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedCdat);\n                      return;\n                    }\n                    this.onCdata(s.substring(j + 8, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                    var q2 = s.indexOf(\"[\", j + 8);\n                    var complexDoctype = false;\n                    q = s.indexOf(\">\", j + 8);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                      return;\n                    }\n                    if (q2 > 0 && q > q2) {\n                      q = s.indexOf(\"]>\", j + 8);\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n                      complexDoctype = true;\n                    }\n                    var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                    this.onDoctype(doctypeContent);\n                    j = q + (complexDoctype ? 2 : 1);\n                  } else {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n                  break;\n                default:\n                  var content = this._parseContent(s, j);\n                  if (content === null) {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n                  var isClosed = false;\n                  if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                    isClosed = true;\n                  } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n                  this.onBeginElement(content.name, content.attributes, isClosed);\n                  j += content.parsed + (isClosed ? 2 : 1);\n                  break;\n              }\n            } else {\n              while (j < s.length && s[j] !== \"<\") {\n                j++;\n              }\n              var text = s.substring(i, j);\n              this.onText(this._resolveEntities(text));\n            }\n            i = j;\n          }\n        }\n      }, {\n        key: \"onResolveEntity\",\n        value: function onResolveEntity(name) {\n          return \"&\".concat(name, \";\");\n        }\n      }, {\n        key: \"onPi\",\n        value: function onPi(name, value) {}\n      }, {\n        key: \"onComment\",\n        value: function onComment(text) {}\n      }, {\n        key: \"onCdata\",\n        value: function onCdata(text) {}\n      }, {\n        key: \"onDoctype\",\n        value: function onDoctype(doctypeContent) {}\n      }, {\n        key: \"onText\",\n        value: function onText(text) {}\n      }, {\n        key: \"onBeginElement\",\n        value: function onBeginElement(name, attributes, isEmpty) {}\n      }, {\n        key: \"onEndElement\",\n        value: function onEndElement(name) {}\n      }, {\n        key: \"onError\",\n        value: function onError(code) {}\n      }]);\n    }();\n    var SimpleDOMNode = /*#__PURE__*/function () {\n      function SimpleDOMNode(nodeName, nodeValue) {\n        _classCallCheck(this, SimpleDOMNode);\n        this.nodeName = nodeName;\n        this.nodeValue = nodeValue;\n        Object.defineProperty(this, \"parentNode\", {\n          value: null,\n          writable: true\n        });\n      }\n      return _createClass(SimpleDOMNode, [{\n        key: \"firstChild\",\n        get: function get() {\n          return this.childNodes && this.childNodes[0];\n        }\n      }, {\n        key: \"nextSibling\",\n        get: function get() {\n          var childNodes = this.parentNode.childNodes;\n          if (!childNodes) {\n            return undefined;\n          }\n          var index = childNodes.indexOf(this);\n          if (index === -1) {\n            return undefined;\n          }\n          return childNodes[index + 1];\n        }\n      }, {\n        key: \"textContent\",\n        get: function get() {\n          if (!this.childNodes) {\n            return this.nodeValue || \"\";\n          }\n          return this.childNodes.map(function (child) {\n            return child.textContent;\n          }).join(\"\");\n        }\n      }, {\n        key: \"hasChildNodes\",\n        value: function hasChildNodes() {\n          return this.childNodes && this.childNodes.length > 0;\n        }\n      }]);\n    }();\n    var SimpleXMLParser = /*#__PURE__*/function (_XMLParserBase) {\n      function SimpleXMLParser() {\n        var _this30;\n        _classCallCheck(this, SimpleXMLParser);\n        _this30 = _callSuper(this, SimpleXMLParser);\n        _this30._currentFragment = null;\n        _this30._stack = null;\n        _this30._errorCode = XMLParserErrorCode.NoError;\n        return _this30;\n      }\n      _inherits(SimpleXMLParser, _XMLParserBase);\n      return _createClass(SimpleXMLParser, [{\n        key: \"parseFromString\",\n        value: function parseFromString(data) {\n          this._currentFragment = [];\n          this._stack = [];\n          this._errorCode = XMLParserErrorCode.NoError;\n          this.parseXml(data);\n          if (this._errorCode !== XMLParserErrorCode.NoError) {\n            return undefined;\n          }\n          var _this$_currentFragmen = _slicedToArray(this._currentFragment, 1),\n            documentElement = _this$_currentFragmen[0];\n          if (!documentElement) {\n            return undefined;\n          }\n          return {\n            documentElement: documentElement\n          };\n        }\n      }, {\n        key: \"onResolveEntity\",\n        value: function onResolveEntity(name) {\n          switch (name) {\n            case \"apos\":\n              return \"'\";\n          }\n          return _superPropGet(SimpleXMLParser, \"onResolveEntity\", this, 3)([name]);\n        }\n      }, {\n        key: \"onText\",\n        value: function onText(text) {\n          if (isWhitespaceString(text)) {\n            return;\n          }\n          var node = new SimpleDOMNode(\"#text\", text);\n          this._currentFragment.push(node);\n        }\n      }, {\n        key: \"onCdata\",\n        value: function onCdata(text) {\n          var node = new SimpleDOMNode(\"#text\", text);\n          this._currentFragment.push(node);\n        }\n      }, {\n        key: \"onBeginElement\",\n        value: function onBeginElement(name, attributes, isEmpty) {\n          var node = new SimpleDOMNode(name);\n          node.childNodes = [];\n          this._currentFragment.push(node);\n          if (isEmpty) {\n            return;\n          }\n          this._stack.push(this._currentFragment);\n          this._currentFragment = node.childNodes;\n        }\n      }, {\n        key: \"onEndElement\",\n        value: function onEndElement(name) {\n          this._currentFragment = this._stack.pop() || [];\n          var lastElement = this._currentFragment[this._currentFragment.length - 1];\n          if (!lastElement) {\n            return;\n          }\n          for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n            lastElement.childNodes[i].parentNode = lastElement;\n          }\n        }\n      }, {\n        key: \"onError\",\n        value: function onError(code) {\n          this._errorCode = code;\n        }\n      }]);\n    }(XMLParserBase);\n    exports.SimpleXMLParser = SimpleXMLParser;\n\n    /***/\n  }), (/* 14 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFDataTransportStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var PDFDataTransportStream = /*#__PURE__*/function () {\n      function PDFDataTransportStream(params, pdfDataRangeTransport) {\n        var _this31 = this;\n        _classCallCheck(this, PDFDataTransportStream);\n        (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n        this._queuedChunks = [];\n        this._progressiveDone = params.progressiveDone || false;\n        var initialData = params.initialData;\n        if (initialData && initialData.length > 0) {\n          var buffer = new Uint8Array(initialData).buffer;\n          this._queuedChunks.push(buffer);\n        }\n        this._pdfDataRangeTransport = pdfDataRangeTransport;\n        this._isStreamingSupported = !params.disableStream;\n        this._isRangeSupported = !params.disableRange;\n        this._contentLength = params.length;\n        this._fullRequestReader = null;\n        this._rangeReaders = [];\n        this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n          _this31._onReceiveData({\n            begin: begin,\n            chunk: chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n          _this31._onProgress({\n            loaded: loaded,\n            total: total\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n          _this31._onReceiveData({\n            chunk: chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n          _this31._onProgressiveDone();\n        });\n        this._pdfDataRangeTransport.transportReady();\n      }\n      return _createClass(PDFDataTransportStream, [{\n        key: \"_onReceiveData\",\n        value: function _onReceiveData(args) {\n          var buffer = new Uint8Array(args.chunk).buffer;\n          if (args.begin === undefined) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader._enqueue(buffer);\n            } else {\n              this._queuedChunks.push(buffer);\n            }\n          } else {\n            var found = this._rangeReaders.some(function (rangeReader) {\n              if (rangeReader._begin !== args.begin) {\n                return false;\n              }\n              rangeReader._enqueue(buffer);\n              return true;\n            });\n            (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n          }\n        }\n      }, {\n        key: \"_progressiveDataLength\",\n        get: function get() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n      }, {\n        key: \"_onProgress\",\n        value: function _onProgress(evt) {\n          if (evt.total === undefined) {\n            var firstReader = this._rangeReaders[0];\n            if (firstReader && firstReader.onProgress) {\n              firstReader.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          } else {\n            var fullReader = this._fullRequestReader;\n            if (fullReader && fullReader.onProgress) {\n              fullReader.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n        }\n      }, {\n        key: \"_onProgressiveDone\",\n        value: function _onProgressiveDone() {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.progressiveDone();\n          }\n          this._progressiveDone = true;\n        }\n      }, {\n        key: \"_removeRangeReader\",\n        value: function _removeRangeReader(reader) {\n          var i = this._rangeReaders.indexOf(reader);\n          if (i >= 0) {\n            this._rangeReaders.splice(i, 1);\n          }\n        }\n      }, {\n        key: \"getFullReader\",\n        value: function getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n          var queuedChunks = this._queuedChunks;\n          this._queuedChunks = null;\n          return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n        }\n      }, {\n        key: \"getRangeReader\",\n        value: function getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n          this._pdfDataRangeTransport.requestDataRange(begin, end);\n          this._rangeReaders.push(reader);\n          return reader;\n        }\n      }, {\n        key: \"cancelAllRequests\",\n        value: function cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          var readers = this._rangeReaders.slice(0);\n          readers.forEach(function (rangeReader) {\n            rangeReader.cancel(reason);\n          });\n          this._pdfDataRangeTransport.abort();\n        }\n      }]);\n    }();\n    exports.PDFDataTransportStream = PDFDataTransportStream;\n    var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n      function PDFDataTransportStreamReader(stream, queuedChunks) {\n        var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        _classCallCheck(this, PDFDataTransportStreamReader);\n        this._stream = stream;\n        this._done = progressiveDone || false;\n        this._filename = null;\n        this._queuedChunks = queuedChunks || [];\n        this._loaded = 0;\n        var _iterator9 = _createForOfIteratorHelper(this._queuedChunks),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var chunk = _step9.value;\n            this._loaded += chunk.byteLength;\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n        this._requests = [];\n        this._headersReady = Promise.resolve();\n        stream._fullRequestReader = this;\n        this.onProgress = null;\n      }\n      return _createClass(PDFDataTransportStreamReader, [{\n        key: \"_enqueue\",\n        value: function _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n          if (this._requests.length > 0) {\n            var requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunks.push(chunk);\n          }\n          this._loaded += chunk.byteLength;\n        }\n      }, {\n        key: \"headersReady\",\n        get: function get() {\n          return this._headersReady;\n        }\n      }, {\n        key: \"filename\",\n        get: function get() {\n          return this._filename;\n        }\n      }, {\n        key: \"isRangeSupported\",\n        get: function get() {\n          return this._stream._isRangeSupported;\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._stream._isStreamingSupported;\n        }\n      }, {\n        key: \"contentLength\",\n        get: function get() {\n          return this._stream._contentLength;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n            var chunk, requestCapability;\n            return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  if (!(this._queuedChunks.length > 0)) {\n                    _context7.next = 3;\n                    break;\n                  }\n                  chunk = this._queuedChunks.shift();\n                  return _context7.abrupt(\"return\", {\n                    value: chunk,\n                    done: false\n                  });\n                case 3:\n                  if (!this._done) {\n                    _context7.next = 5;\n                    break;\n                  }\n                  return _context7.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 5:\n                  requestCapability = (0, _util.createPromiseCapability)();\n                  this._requests.push(requestCapability);\n                  return _context7.abrupt(\"return\", requestCapability.promise);\n                case 8:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7, this);\n          }));\n          function read() {\n            return _read.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          this._done = true;\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n        }\n      }, {\n        key: \"progressiveDone\",\n        value: function progressiveDone() {\n          if (this._done) {\n            return;\n          }\n          this._done = true;\n        }\n      }]);\n    }();\n    var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n      function PDFDataTransportStreamRangeReader(stream, begin, end) {\n        _classCallCheck(this, PDFDataTransportStreamRangeReader);\n        this._stream = stream;\n        this._begin = begin;\n        this._end = end;\n        this._queuedChunk = null;\n        this._requests = [];\n        this._done = false;\n        this.onProgress = null;\n      }\n      return _createClass(PDFDataTransportStreamRangeReader, [{\n        key: \"_enqueue\",\n        value: function _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n          if (this._requests.length === 0) {\n            this._queuedChunk = chunk;\n          } else {\n            var requestsCapability = this._requests.shift();\n            requestsCapability.resolve({\n              value: chunk,\n              done: false\n            });\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n            this._requests = [];\n          }\n          this._done = true;\n          this._stream._removeRangeReader(this);\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return false;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n            var chunk, requestCapability;\n            return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  if (!this._queuedChunk) {\n                    _context8.next = 4;\n                    break;\n                  }\n                  chunk = this._queuedChunk;\n                  this._queuedChunk = null;\n                  return _context8.abrupt(\"return\", {\n                    value: chunk,\n                    done: false\n                  });\n                case 4:\n                  if (!this._done) {\n                    _context8.next = 6;\n                    break;\n                  }\n                  return _context8.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 6:\n                  requestCapability = (0, _util.createPromiseCapability)();\n                  this._requests.push(requestCapability);\n                  return _context8.abrupt(\"return\", requestCapability.promise);\n                case 9:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8, this);\n          }));\n          function read() {\n            return _read2.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          this._done = true;\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n          this._stream._removeRangeReader(this);\n        }\n      }]);\n    }();\n    /***/\n  }), (/* 15 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WebGLContext = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var WebGLContext = /*#__PURE__*/function () {\n      function WebGLContext(_ref28) {\n        var _ref28$enable = _ref28.enable,\n          enable = _ref28$enable === void 0 ? false : _ref28$enable;\n        _classCallCheck(this, WebGLContext);\n        this._enabled = enable === true;\n      }\n      return _createClass(WebGLContext, [{\n        key: \"isEnabled\",\n        get: function get() {\n          var enabled = this._enabled;\n          if (enabled) {\n            enabled = WebGLUtils.tryInitGL();\n          }\n          return (0, _util.shadow)(this, \"isEnabled\", enabled);\n        }\n      }, {\n        key: \"composeSMask\",\n        value: function composeSMask(_ref29) {\n          var layer = _ref29.layer,\n            mask = _ref29.mask,\n            properties = _ref29.properties;\n          return WebGLUtils.composeSMask(layer, mask, properties);\n        }\n      }, {\n        key: \"drawFigures\",\n        value: function drawFigures(_ref30) {\n          var width = _ref30.width,\n            height = _ref30.height,\n            backgroundColor = _ref30.backgroundColor,\n            figures = _ref30.figures,\n            context = _ref30.context;\n          return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          WebGLUtils.cleanup();\n        }\n      }]);\n    }();\n    exports.WebGLContext = WebGLContext;\n    var WebGLUtils = function WebGLUtilsClosure() {\n      function loadShader(gl, code, shaderType) {\n        var shader = gl.createShader(shaderType);\n        gl.shaderSource(shader, code);\n        gl.compileShader(shader);\n        var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n          var errorMsg = gl.getShaderInfoLog(shader);\n          throw new Error(\"Error during shader compilation: \" + errorMsg);\n        }\n        return shader;\n      }\n      function createVertexShader(gl, code) {\n        return loadShader(gl, code, gl.VERTEX_SHADER);\n      }\n      function createFragmentShader(gl, code) {\n        return loadShader(gl, code, gl.FRAGMENT_SHADER);\n      }\n      function createProgram(gl, shaders) {\n        var program = gl.createProgram();\n        for (var i = 0, ii = shaders.length; i < ii; ++i) {\n          gl.attachShader(program, shaders[i]);\n        }\n        gl.linkProgram(program);\n        var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n          var errorMsg = gl.getProgramInfoLog(program);\n          throw new Error(\"Error during program linking: \" + errorMsg);\n        }\n        return program;\n      }\n      function createTexture(gl, image, textureId) {\n        gl.activeTexture(textureId);\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n      }\n      var currentGL, currentCanvas;\n      function generateGL() {\n        if (currentGL) {\n          return;\n        }\n        currentCanvas = document.createElement(\"canvas\");\n        currentGL = currentCanvas.getContext(\"webgl\", {\n          premultipliedalpha: false\n        });\n      }\n      var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n      var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n      var smaskCache = null;\n      function initSmaskGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n        cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n        var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n        var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n        var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n        var texCoordBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(texCoordLocation);\n        gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform1i(texLayerLocation, 0);\n        gl.uniform1i(texMaskLocation, 1);\n        smaskCache = cache;\n      }\n      function composeSMask(layer, mask, properties) {\n        var width = layer.width,\n          height = layer.height;\n        if (!smaskCache) {\n          initSmaskGL();\n        }\n        var cache = smaskCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        if (properties.backdrop) {\n          gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n        } else {\n          gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n        }\n        gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n        var texture = createTexture(gl, layer, gl.TEXTURE0);\n        var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n        var buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        gl.flush();\n        gl.deleteTexture(texture);\n        gl.deleteTexture(maskTexture);\n        gl.deleteBuffer(buffer);\n        return canvas;\n      }\n      var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n      var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n      var figuresCache = null;\n      function initFiguresGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n        cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n        figuresCache = cache;\n      }\n      function drawFigures(width, height, backgroundColor, figures, context) {\n        if (!figuresCache) {\n          initFiguresGL();\n        }\n        var cache = figuresCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        var count = 0;\n        var i, ii, rows;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          switch (figures[i].type) {\n            case \"lattice\":\n              rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n              count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n              break;\n            case \"triangles\":\n              count += figures[i].coords.length;\n              break;\n          }\n        }\n        var coords = new Float32Array(count * 2);\n        var colors = new Uint8Array(count * 3);\n        var coordsMap = context.coords,\n          colorsMap = context.colors;\n        var pIndex = 0,\n          cIndex = 0;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          var figure = figures[i],\n            ps = figure.coords,\n            cs = figure.colors;\n          switch (figure.type) {\n            case \"lattice\":\n              var cols = figure.verticesPerRow;\n              rows = ps.length / cols | 0;\n              for (var row = 1; row < rows; row++) {\n                var offset = row * cols + 1;\n                for (var col = 1; col < cols; col++, offset++) {\n                  coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                  coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                  coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                  coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                  coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                  coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                  colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                  colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                  colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                  colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                  colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                  colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                  colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                  colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                  coords[pIndex + 6] = coords[pIndex + 2];\n                  coords[pIndex + 7] = coords[pIndex + 3];\n                  coords[pIndex + 8] = coords[pIndex + 4];\n                  coords[pIndex + 9] = coords[pIndex + 5];\n                  coords[pIndex + 10] = coordsMap[ps[offset]];\n                  coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                  colors[cIndex + 9] = colors[cIndex + 3];\n                  colors[cIndex + 10] = colors[cIndex + 4];\n                  colors[cIndex + 11] = colors[cIndex + 5];\n                  colors[cIndex + 12] = colors[cIndex + 6];\n                  colors[cIndex + 13] = colors[cIndex + 7];\n                  colors[cIndex + 14] = colors[cIndex + 8];\n                  colors[cIndex + 15] = colorsMap[cs[offset]];\n                  colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                  colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                  pIndex += 12;\n                  cIndex += 18;\n                }\n              }\n              break;\n            case \"triangles\":\n              for (var j = 0, jj = ps.length; j < jj; j++) {\n                coords[pIndex] = coordsMap[ps[j]];\n                coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                colors[cIndex] = colorsMap[cs[j]];\n                colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                pIndex += 2;\n                cIndex += 3;\n              }\n              break;\n          }\n        }\n        if (backgroundColor) {\n          gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n        } else {\n          gl.clearColor(0, 0, 0, 0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        var coordsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        var colorsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.colorLocation);\n        gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n        gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n        gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n        gl.drawArrays(gl.TRIANGLES, 0, count);\n        gl.flush();\n        gl.deleteBuffer(coordsBuffer);\n        gl.deleteBuffer(colorsBuffer);\n        return canvas;\n      }\n      return {\n        tryInitGL: function tryInitGL() {\n          try {\n            generateGL();\n            return !!currentGL;\n          } catch (ex) {}\n          return false;\n        },\n        composeSMask: composeSMask,\n        drawFigures: drawFigures,\n        cleanup: function cleanup() {\n          if (smaskCache && smaskCache.canvas) {\n            smaskCache.canvas.width = 0;\n            smaskCache.canvas.height = 0;\n          }\n          if (figuresCache && figuresCache.canvas) {\n            figuresCache.canvas.width = 0;\n            figuresCache.canvas.height = 0;\n          }\n          smaskCache = null;\n          figuresCache = null;\n        }\n      };\n    }();\n\n    /***/\n  }), (/* 16 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.AnnotationLayer = void 0;\n    var _display_utils = __w_pdfjs_require__(1);\n    var _util = __w_pdfjs_require__(2);\n    var AnnotationElementFactory = /*#__PURE__*/function () {\n      function AnnotationElementFactory() {\n        _classCallCheck(this, AnnotationElementFactory);\n      }\n      return _createClass(AnnotationElementFactory, null, [{\n        key: \"create\",\n        value: function create(parameters) {\n          var subtype = parameters.data.annotationType;\n          switch (subtype) {\n            case _util.AnnotationType.LINK:\n              return new LinkAnnotationElement(parameters);\n            case _util.AnnotationType.TEXT:\n              return new TextAnnotationElement(parameters);\n            case _util.AnnotationType.WIDGET:\n              var fieldType = parameters.data.fieldType;\n              switch (fieldType) {\n                case \"Tx\":\n                  return new TextWidgetAnnotationElement(parameters);\n                case \"Btn\":\n                  if (parameters.data.radioButton) {\n                    return new RadioButtonWidgetAnnotationElement(parameters);\n                  } else if (parameters.data.checkBox) {\n                    return new CheckboxWidgetAnnotationElement(parameters);\n                  }\n                  return new PushButtonWidgetAnnotationElement(parameters);\n                case \"Ch\":\n                  return new ChoiceWidgetAnnotationElement(parameters);\n              }\n              return new WidgetAnnotationElement(parameters);\n            case _util.AnnotationType.POPUP:\n              return new PopupAnnotationElement(parameters);\n            case _util.AnnotationType.FREETEXT:\n              return new FreeTextAnnotationElement(parameters);\n            case _util.AnnotationType.LINE:\n              return new LineAnnotationElement(parameters);\n            case _util.AnnotationType.SQUARE:\n              return new SquareAnnotationElement(parameters);\n            case _util.AnnotationType.CIRCLE:\n              return new CircleAnnotationElement(parameters);\n            case _util.AnnotationType.POLYLINE:\n              return new PolylineAnnotationElement(parameters);\n            case _util.AnnotationType.CARET:\n              return new CaretAnnotationElement(parameters);\n            case _util.AnnotationType.INK:\n              return new InkAnnotationElement(parameters);\n            case _util.AnnotationType.POLYGON:\n              return new PolygonAnnotationElement(parameters);\n            case _util.AnnotationType.HIGHLIGHT:\n              return new HighlightAnnotationElement(parameters);\n            case _util.AnnotationType.UNDERLINE:\n              return new UnderlineAnnotationElement(parameters);\n            case _util.AnnotationType.SQUIGGLY:\n              return new SquigglyAnnotationElement(parameters);\n            case _util.AnnotationType.STRIKEOUT:\n              return new StrikeOutAnnotationElement(parameters);\n            case _util.AnnotationType.STAMP:\n              return new StampAnnotationElement(parameters);\n            case _util.AnnotationType.FILEATTACHMENT:\n              return new FileAttachmentAnnotationElement(parameters);\n            default:\n              return new AnnotationElement(parameters);\n          }\n        }\n      }]);\n    }();\n    var AnnotationElement = /*#__PURE__*/function () {\n      function AnnotationElement(parameters) {\n        var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        _classCallCheck(this, AnnotationElement);\n        this.isRenderable = isRenderable;\n        this.data = parameters.data;\n        this.layer = parameters.layer;\n        this.page = parameters.page;\n        this.viewport = parameters.viewport;\n        this.linkService = parameters.linkService;\n        this.downloadManager = parameters.downloadManager;\n        this.imageResourcesPath = parameters.imageResourcesPath;\n        this.renderInteractiveForms = parameters.renderInteractiveForms;\n        this.svgFactory = parameters.svgFactory;\n        if (isRenderable) {\n          this.container = this._createContainer(ignoreBorder);\n        }\n      }\n      return _createClass(AnnotationElement, [{\n        key: \"_createContainer\",\n        value: function _createContainer() {\n          var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          var data = this.data,\n            page = this.page,\n            viewport = this.viewport;\n          var container = document.createElement(\"section\");\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          container.setAttribute(\"data-annotation-id\", data.id);\n          var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n          container.style.transform = \"matrix(\".concat(viewport.transform.join(\",\"), \")\");\n          container.style.transformOrigin = \"-\".concat(rect[0], \"px -\").concat(rect[1], \"px\");\n          if (!ignoreBorder && data.borderStyle.width > 0) {\n            container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n            if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n              width = width - 2 * data.borderStyle.width;\n              height = height - 2 * data.borderStyle.width;\n            }\n            var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n            var verticalRadius = data.borderStyle.verticalCornerRadius;\n            if (horizontalRadius > 0 || verticalRadius > 0) {\n              var radius = \"\".concat(horizontalRadius, \"px / \").concat(verticalRadius, \"px\");\n              container.style.borderRadius = radius;\n            }\n            switch (data.borderStyle.style) {\n              case _util.AnnotationBorderStyleType.SOLID:\n                container.style.borderStyle = \"solid\";\n                break;\n              case _util.AnnotationBorderStyleType.DASHED:\n                container.style.borderStyle = \"dashed\";\n                break;\n              case _util.AnnotationBorderStyleType.BEVELED:\n                (0, _util.warn)(\"Unimplemented border style: beveled\");\n                break;\n              case _util.AnnotationBorderStyleType.INSET:\n                (0, _util.warn)(\"Unimplemented border style: inset\");\n                break;\n              case _util.AnnotationBorderStyleType.UNDERLINE:\n                container.style.borderBottomStyle = \"solid\";\n                break;\n              default:\n                break;\n            }\n            if (data.color) {\n              container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n            } else {\n              container.style.borderWidth = 0;\n            }\n          }\n          container.style.left = \"\".concat(rect[0], \"px\");\n          container.style.top = \"\".concat(rect[1], \"px\");\n          container.style.width = \"\".concat(width, \"px\");\n          container.style.height = \"\".concat(height, \"px\");\n          return container;\n        }\n      }, {\n        key: \"_createPopup\",\n        value: function _createPopup(container, trigger, data) {\n          if (!trigger) {\n            trigger = document.createElement(\"div\");\n            trigger.style.height = container.style.height;\n            trigger.style.width = container.style.width;\n            container.appendChild(trigger);\n          }\n          var popupElement = new PopupElement({\n            container: container,\n            trigger: trigger,\n            color: data.color,\n            title: data.title,\n            modificationDate: data.modificationDate,\n            contents: data.contents,\n            hideWrapper: true\n          });\n          var popup = popupElement.render();\n          popup.style.left = container.style.width;\n          container.appendChild(popup);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n        }\n      }]);\n    }();\n    var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n      function LinkAnnotationElement(parameters) {\n        _classCallCheck(this, LinkAnnotationElement);\n        var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n        return _callSuper(this, LinkAnnotationElement, [parameters, isRenderable]);\n      }\n      _inherits(LinkAnnotationElement, _AnnotationElement);\n      return _createClass(LinkAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"linkAnnotation\";\n          var data = this.data,\n            linkService = this.linkService;\n          var link = document.createElement(\"a\");\n          if (data.url) {\n            (0, _display_utils.addLinkAttributes)(link, {\n              url: data.url,\n              target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n              rel: linkService.externalLinkRel,\n              enabled: linkService.externalLinkEnabled\n            });\n          } else if (data.action) {\n            this._bindNamedAction(link, data.action);\n          } else {\n            this._bindLink(link, data.dest);\n          }\n          this.container.appendChild(link);\n          return this.container;\n        }\n      }, {\n        key: \"_bindLink\",\n        value: function _bindLink(link, destination) {\n          var _this32 = this;\n          link.href = this.linkService.getDestinationHash(destination);\n          link.onclick = function () {\n            if (destination) {\n              _this32.linkService.navigateTo(destination);\n            }\n            return false;\n          };\n          if (destination) {\n            link.className = \"internalLink\";\n          }\n        }\n      }, {\n        key: \"_bindNamedAction\",\n        value: function _bindNamedAction(link, action) {\n          var _this33 = this;\n          link.href = this.linkService.getAnchorUrl(\"\");\n          link.onclick = function () {\n            _this33.linkService.executeNamedAction(action);\n            return false;\n          };\n          link.className = \"internalLink\";\n        }\n      }]);\n    }(AnnotationElement);\n    var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n      function TextAnnotationElement(parameters) {\n        _classCallCheck(this, TextAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, TextAnnotationElement, [parameters, isRenderable]);\n      }\n      _inherits(TextAnnotationElement, _AnnotationElement2);\n      return _createClass(TextAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"textAnnotation\";\n          var image = document.createElement(\"img\");\n          image.style.height = this.container.style.height;\n          image.style.width = this.container.style.width;\n          image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n          image.alt = \"[{{type}} Annotation]\";\n          image.dataset.l10nId = \"text_annotation_type\";\n          image.dataset.l10nArgs = JSON.stringify({\n            type: this.data.name\n          });\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, image, this.data);\n          }\n          this.container.appendChild(image);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n      function WidgetAnnotationElement() {\n        _classCallCheck(this, WidgetAnnotationElement);\n        return _callSuper(this, WidgetAnnotationElement, arguments);\n      }\n      _inherits(WidgetAnnotationElement, _AnnotationElement3);\n      return _createClass(WidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n      function TextWidgetAnnotationElement(parameters) {\n        _classCallCheck(this, TextWidgetAnnotationElement);\n        var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n        return _callSuper(this, TextWidgetAnnotationElement, [parameters, isRenderable]);\n      }\n      _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n      return _createClass(TextWidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n          this.container.className = \"textWidgetAnnotation\";\n          var element = null;\n          if (this.renderInteractiveForms) {\n            if (this.data.multiLine) {\n              element = document.createElement(\"textarea\");\n              element.textContent = this.data.fieldValue;\n            } else {\n              element = document.createElement(\"input\");\n              element.type = \"text\";\n              element.setAttribute(\"value\", this.data.fieldValue);\n            }\n            element.disabled = this.data.readOnly;\n            element.name = this.data.fieldName;\n            if (this.data.maxLen !== null) {\n              element.maxLength = this.data.maxLen;\n            }\n            if (this.data.comb) {\n              var fieldWidth = this.data.rect[2] - this.data.rect[0];\n              var combWidth = fieldWidth / this.data.maxLen;\n              element.classList.add(\"comb\");\n              element.style.letterSpacing = \"calc(\".concat(combWidth, \"px - 1ch)\");\n            }\n          } else {\n            element = document.createElement(\"div\");\n            element.textContent = this.data.fieldValue;\n            element.style.verticalAlign = \"middle\";\n            element.style.display = \"table-cell\";\n            var font = null;\n            if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n              font = this.page.commonObjs.get(this.data.fontRefName);\n            }\n            this._setTextStyle(element, font);\n          }\n          if (this.data.textAlignment !== null) {\n            element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n          }\n          this.container.appendChild(element);\n          return this.container;\n        }\n      }, {\n        key: \"_setTextStyle\",\n        value: function _setTextStyle(element, font) {\n          var style = element.style;\n          style.fontSize = \"\".concat(this.data.fontSize, \"px\");\n          style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n          if (!font) {\n            return;\n          }\n          var bold = \"normal\";\n          if (font.black) {\n            bold = \"900\";\n          } else if (font.bold) {\n            bold = \"bold\";\n          }\n          style.fontWeight = bold;\n          style.fontStyle = font.italic ? \"italic\" : \"normal\";\n          var fontFamily = font.loadedName ? \"\\\"\".concat(font.loadedName, \"\\\", \") : \"\";\n          var fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n          style.fontFamily = fontFamily + fallbackName;\n        }\n      }]);\n    }(WidgetAnnotationElement);\n    var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n      function CheckboxWidgetAnnotationElement(parameters) {\n        _classCallCheck(this, CheckboxWidgetAnnotationElement);\n        return _callSuper(this, CheckboxWidgetAnnotationElement, [parameters, parameters.renderInteractiveForms]);\n      }\n      _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n      return _createClass(CheckboxWidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"buttonWidgetAnnotation checkBox\";\n          var element = document.createElement(\"input\");\n          element.disabled = this.data.readOnly;\n          element.type = \"checkbox\";\n          element.name = this.data.fieldName;\n          if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n            element.setAttribute(\"checked\", true);\n          }\n          this.container.appendChild(element);\n          return this.container;\n        }\n      }]);\n    }(WidgetAnnotationElement);\n    var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n      function RadioButtonWidgetAnnotationElement(parameters) {\n        _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n        return _callSuper(this, RadioButtonWidgetAnnotationElement, [parameters, parameters.renderInteractiveForms]);\n      }\n      _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n      return _createClass(RadioButtonWidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"buttonWidgetAnnotation radioButton\";\n          var element = document.createElement(\"input\");\n          element.disabled = this.data.readOnly;\n          element.type = \"radio\";\n          element.name = this.data.fieldName;\n          if (this.data.fieldValue === this.data.buttonValue) {\n            element.setAttribute(\"checked\", true);\n          }\n          this.container.appendChild(element);\n          return this.container;\n        }\n      }]);\n    }(WidgetAnnotationElement);\n    var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n      function PushButtonWidgetAnnotationElement() {\n        _classCallCheck(this, PushButtonWidgetAnnotationElement);\n        return _callSuper(this, PushButtonWidgetAnnotationElement, arguments);\n      }\n      _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n      return _createClass(PushButtonWidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          var container = _superPropGet(PushButtonWidgetAnnotationElement, \"render\", this, 3)([]);\n          container.className = \"buttonWidgetAnnotation pushButton\";\n          return container;\n        }\n      }]);\n    }(LinkAnnotationElement);\n    var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n      function ChoiceWidgetAnnotationElement(parameters) {\n        _classCallCheck(this, ChoiceWidgetAnnotationElement);\n        return _callSuper(this, ChoiceWidgetAnnotationElement, [parameters, parameters.renderInteractiveForms]);\n      }\n      _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n      return _createClass(ChoiceWidgetAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"choiceWidgetAnnotation\";\n          var selectElement = document.createElement(\"select\");\n          selectElement.disabled = this.data.readOnly;\n          selectElement.name = this.data.fieldName;\n          if (!this.data.combo) {\n            selectElement.size = this.data.options.length;\n            if (this.data.multiSelect) {\n              selectElement.multiple = true;\n            }\n          }\n          var _iterator10 = _createForOfIteratorHelper(this.data.options),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var option = _step10.value;\n              var optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n              if (this.data.fieldValue.includes(option.displayValue)) {\n                optionElement.setAttribute(\"selected\", true);\n              }\n              selectElement.appendChild(optionElement);\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n          this.container.appendChild(selectElement);\n          return this.container;\n        }\n      }]);\n    }(WidgetAnnotationElement);\n    var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n      function PopupAnnotationElement(parameters) {\n        _classCallCheck(this, PopupAnnotationElement);\n        var isRenderable = !!(parameters.data.title || parameters.data.contents);\n        return _callSuper(this, PopupAnnotationElement, [parameters, isRenderable]);\n      }\n      _inherits(PopupAnnotationElement, _AnnotationElement4);\n      return _createClass(PopupAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n          this.container.className = \"popupAnnotation\";\n          if (IGNORE_TYPES.includes(this.data.parentType)) {\n            return this.container;\n          }\n          var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n          var parentElement = this.layer.querySelector(selector);\n          if (!parentElement) {\n            return this.container;\n          }\n          var popup = new PopupElement({\n            container: this.container,\n            trigger: parentElement,\n            color: this.data.color,\n            title: this.data.title,\n            modificationDate: this.data.modificationDate,\n            contents: this.data.contents\n          });\n          var parentLeft = parseFloat(parentElement.style.left);\n          var parentWidth = parseFloat(parentElement.style.width);\n          this.container.style.transformOrigin = \"-\".concat(parentLeft + parentWidth, \"px -\").concat(parentElement.style.top);\n          this.container.style.left = \"\".concat(parentLeft + parentWidth, \"px\");\n          this.container.appendChild(popup.render());\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var PopupElement = /*#__PURE__*/function () {\n      function PopupElement(parameters) {\n        _classCallCheck(this, PopupElement);\n        this.container = parameters.container;\n        this.trigger = parameters.trigger;\n        this.color = parameters.color;\n        this.title = parameters.title;\n        this.modificationDate = parameters.modificationDate;\n        this.contents = parameters.contents;\n        this.hideWrapper = parameters.hideWrapper || false;\n        this.pinned = false;\n      }\n      return _createClass(PopupElement, [{\n        key: \"render\",\n        value: function render() {\n          var BACKGROUND_ENLIGHT = 0.7;\n          var wrapper = document.createElement(\"div\");\n          wrapper.className = \"popupWrapper\";\n          this.hideElement = this.hideWrapper ? wrapper : this.container;\n          this.hideElement.setAttribute(\"hidden\", true);\n          var popup = document.createElement(\"div\");\n          popup.className = \"popup\";\n          var color = this.color;\n          if (color) {\n            var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n            var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n            var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n            popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n          }\n          var title = document.createElement(\"h1\");\n          title.textContent = this.title;\n          popup.appendChild(title);\n          var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n          if (dateObject) {\n            var modificationDate = document.createElement(\"span\");\n            modificationDate.textContent = \"{{date}}, {{time}}\";\n            modificationDate.dataset.l10nId = \"annotation_date_string\";\n            modificationDate.dataset.l10nArgs = JSON.stringify({\n              date: dateObject.toLocaleDateString(),\n              time: dateObject.toLocaleTimeString()\n            });\n            popup.appendChild(modificationDate);\n          }\n          var contents = this._formatContents(this.contents);\n          popup.appendChild(contents);\n          this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n          this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n          this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n          popup.addEventListener(\"click\", this._hide.bind(this, true));\n          wrapper.appendChild(popup);\n          return wrapper;\n        }\n      }, {\n        key: \"_formatContents\",\n        value: function _formatContents(contents) {\n          var p = document.createElement(\"p\");\n          var lines = contents.split(/(?:\\r\\n?|\\n)/);\n          for (var i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            p.appendChild(document.createTextNode(line));\n            if (i < ii - 1) {\n              p.appendChild(document.createElement(\"br\"));\n            }\n          }\n          return p;\n        }\n      }, {\n        key: \"_toggle\",\n        value: function _toggle() {\n          if (this.pinned) {\n            this._hide(true);\n          } else {\n            this._show(true);\n          }\n        }\n      }, {\n        key: \"_show\",\n        value: function _show() {\n          var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          if (pin) {\n            this.pinned = true;\n          }\n          if (this.hideElement.hasAttribute(\"hidden\")) {\n            this.hideElement.removeAttribute(\"hidden\");\n            this.container.style.zIndex += 1;\n          }\n        }\n      }, {\n        key: \"_hide\",\n        value: function _hide() {\n          var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          if (unpin) {\n            this.pinned = false;\n          }\n          if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n            this.hideElement.setAttribute(\"hidden\", true);\n            this.container.style.zIndex -= 1;\n          }\n        }\n      }]);\n    }();\n    var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n      function FreeTextAnnotationElement(parameters) {\n        _classCallCheck(this, FreeTextAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, FreeTextAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n      return _createClass(FreeTextAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"freeTextAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n      function LineAnnotationElement(parameters) {\n        _classCallCheck(this, LineAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, LineAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(LineAnnotationElement, _AnnotationElement6);\n      return _createClass(LineAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"lineAnnotation\";\n          var data = this.data;\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          var svg = this.svgFactory.create(width, height);\n          var line = this.svgFactory.createElement(\"svg:line\");\n          line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n          line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n          line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n          line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n          line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          line.setAttribute(\"stroke\", \"transparent\");\n          svg.appendChild(line);\n          this.container.append(svg);\n          this._createPopup(this.container, line, data);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n      function SquareAnnotationElement(parameters) {\n        _classCallCheck(this, SquareAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, SquareAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(SquareAnnotationElement, _AnnotationElement7);\n      return _createClass(SquareAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"squareAnnotation\";\n          var data = this.data;\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          var svg = this.svgFactory.create(width, height);\n          var borderWidth = data.borderStyle.width;\n          var square = this.svgFactory.createElement(\"svg:rect\");\n          square.setAttribute(\"x\", borderWidth / 2);\n          square.setAttribute(\"y\", borderWidth / 2);\n          square.setAttribute(\"width\", width - borderWidth);\n          square.setAttribute(\"height\", height - borderWidth);\n          square.setAttribute(\"stroke-width\", borderWidth || 1);\n          square.setAttribute(\"stroke\", \"transparent\");\n          square.setAttribute(\"fill\", \"none\");\n          svg.appendChild(square);\n          this.container.append(svg);\n          this._createPopup(this.container, square, data);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n      function CircleAnnotationElement(parameters) {\n        _classCallCheck(this, CircleAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, CircleAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(CircleAnnotationElement, _AnnotationElement8);\n      return _createClass(CircleAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"circleAnnotation\";\n          var data = this.data;\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          var svg = this.svgFactory.create(width, height);\n          var borderWidth = data.borderStyle.width;\n          var circle = this.svgFactory.createElement(\"svg:ellipse\");\n          circle.setAttribute(\"cx\", width / 2);\n          circle.setAttribute(\"cy\", height / 2);\n          circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n          circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n          circle.setAttribute(\"stroke-width\", borderWidth || 1);\n          circle.setAttribute(\"stroke\", \"transparent\");\n          circle.setAttribute(\"fill\", \"none\");\n          svg.appendChild(circle);\n          this.container.append(svg);\n          this._createPopup(this.container, circle, data);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n      function PolylineAnnotationElement(parameters) {\n        var _this34;\n        _classCallCheck(this, PolylineAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        _this34 = _callSuper(this, PolylineAnnotationElement, [parameters, isRenderable, true]);\n        _this34.containerClassName = \"polylineAnnotation\";\n        _this34.svgElementName = \"svg:polyline\";\n        return _this34;\n      }\n      _inherits(PolylineAnnotationElement, _AnnotationElement9);\n      return _createClass(PolylineAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = this.containerClassName;\n          var data = this.data;\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          var svg = this.svgFactory.create(width, height);\n          var points = [];\n          var _iterator11 = _createForOfIteratorHelper(data.vertices),\n            _step11;\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var coordinate = _step11.value;\n              var x = coordinate.x - data.rect[0];\n              var y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n          points = points.join(\" \");\n          var polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"none\");\n          svg.appendChild(polyline);\n          this.container.append(svg);\n          this._createPopup(this.container, polyline, data);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n      function PolygonAnnotationElement(parameters) {\n        var _this35;\n        _classCallCheck(this, PolygonAnnotationElement);\n        _this35 = _callSuper(this, PolygonAnnotationElement, [parameters]);\n        _this35.containerClassName = \"polygonAnnotation\";\n        _this35.svgElementName = \"svg:polygon\";\n        return _this35;\n      }\n      _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n      return _createClass(PolygonAnnotationElement);\n    }(PolylineAnnotationElement);\n    var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n      function CaretAnnotationElement(parameters) {\n        _classCallCheck(this, CaretAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, CaretAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(CaretAnnotationElement, _AnnotationElement10);\n      return _createClass(CaretAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"caretAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n      function InkAnnotationElement(parameters) {\n        var _this36;\n        _classCallCheck(this, InkAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        _this36 = _callSuper(this, InkAnnotationElement, [parameters, isRenderable, true]);\n        _this36.containerClassName = \"inkAnnotation\";\n        _this36.svgElementName = \"svg:polyline\";\n        return _this36;\n      }\n      _inherits(InkAnnotationElement, _AnnotationElement11);\n      return _createClass(InkAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = this.containerClassName;\n          var data = this.data;\n          var width = data.rect[2] - data.rect[0];\n          var height = data.rect[3] - data.rect[1];\n          var svg = this.svgFactory.create(width, height);\n          var _iterator12 = _createForOfIteratorHelper(data.inkLists),\n            _step12;\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var inkList = _step12.value;\n              var points = [];\n              var _iterator13 = _createForOfIteratorHelper(inkList),\n                _step13;\n              try {\n                for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                  var coordinate = _step13.value;\n                  var x = coordinate.x - data.rect[0];\n                  var y = data.rect[3] - coordinate.y;\n                  points.push(\"\".concat(x, \",\").concat(y));\n                }\n              } catch (err) {\n                _iterator13.e(err);\n              } finally {\n                _iterator13.f();\n              }\n              points = points.join(\" \");\n              var polyline = this.svgFactory.createElement(this.svgElementName);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"none\");\n              this._createPopup(this.container, polyline, data);\n              svg.appendChild(polyline);\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n          this.container.append(svg);\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n      function HighlightAnnotationElement(parameters) {\n        _classCallCheck(this, HighlightAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, HighlightAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(HighlightAnnotationElement, _AnnotationElement12);\n      return _createClass(HighlightAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"highlightAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n      function UnderlineAnnotationElement(parameters) {\n        _classCallCheck(this, UnderlineAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, UnderlineAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n      return _createClass(UnderlineAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"underlineAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n      function SquigglyAnnotationElement(parameters) {\n        _classCallCheck(this, SquigglyAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, SquigglyAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n      return _createClass(SquigglyAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"squigglyAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n      function StrikeOutAnnotationElement(parameters) {\n        _classCallCheck(this, StrikeOutAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, StrikeOutAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n      return _createClass(StrikeOutAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"strikeoutAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n      function StampAnnotationElement(parameters) {\n        _classCallCheck(this, StampAnnotationElement);\n        var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        return _callSuper(this, StampAnnotationElement, [parameters, isRenderable, true]);\n      }\n      _inherits(StampAnnotationElement, _AnnotationElement16);\n      return _createClass(StampAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"stampAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n          return this.container;\n        }\n      }]);\n    }(AnnotationElement);\n    var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n      function FileAttachmentAnnotationElement(parameters) {\n        var _this37;\n        _classCallCheck(this, FileAttachmentAnnotationElement);\n        _this37 = _callSuper(this, FileAttachmentAnnotationElement, [parameters, true]);\n        var _this37$data$file = _this37.data.file,\n          filename = _this37$data$file.filename,\n          content = _this37$data$file.content;\n        _this37.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n        _this37.content = content;\n        if (_this37.linkService.eventBus) {\n          _this37.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n            source: _this37,\n            id: (0, _util.stringToPDFString)(filename),\n            filename: filename,\n            content: content\n          });\n        }\n        return _this37;\n      }\n      _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n      return _createClass(FileAttachmentAnnotationElement, [{\n        key: \"render\",\n        value: function render() {\n          this.container.className = \"fileAttachmentAnnotation\";\n          var trigger = document.createElement(\"div\");\n          trigger.style.height = this.container.style.height;\n          trigger.style.width = this.container.style.width;\n          trigger.addEventListener(\"dblclick\", this._download.bind(this));\n          if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n            this._createPopup(this.container, trigger, this.data);\n          }\n          this.container.appendChild(trigger);\n          return this.container;\n        }\n      }, {\n        key: \"_download\",\n        value: function _download() {\n          if (!this.downloadManager) {\n            (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n            return;\n          }\n          this.downloadManager.downloadData(this.content, this.filename, \"\");\n        }\n      }]);\n    }(AnnotationElement);\n    var AnnotationLayer = /*#__PURE__*/function () {\n      function AnnotationLayer() {\n        _classCallCheck(this, AnnotationLayer);\n      }\n      return _createClass(AnnotationLayer, null, [{\n        key: \"render\",\n        value: function render(parameters) {\n          var sortedAnnotations = [],\n            popupAnnotations = [];\n          var _iterator14 = _createForOfIteratorHelper(parameters.annotations),\n            _step14;\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var _data3 = _step14.value;\n              if (!_data3) {\n                continue;\n              }\n              if (_data3.annotationType === _util.AnnotationType.POPUP) {\n                popupAnnotations.push(_data3);\n                continue;\n              }\n              sortedAnnotations.push(_data3);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n          if (popupAnnotations.length) {\n            sortedAnnotations.push.apply(sortedAnnotations, popupAnnotations);\n          }\n          for (var _i6 = 0, _sortedAnnotations = sortedAnnotations; _i6 < _sortedAnnotations.length; _i6++) {\n            var data = _sortedAnnotations[_i6];\n            var element = AnnotationElementFactory.create({\n              data: data,\n              layer: parameters.div,\n              page: parameters.page,\n              viewport: parameters.viewport,\n              linkService: parameters.linkService,\n              downloadManager: parameters.downloadManager,\n              imageResourcesPath: parameters.imageResourcesPath || \"\",\n              renderInteractiveForms: parameters.renderInteractiveForms || false,\n              svgFactory: new _display_utils.DOMSVGFactory()\n            });\n            if (element.isRenderable) {\n              parameters.div.appendChild(element.render());\n            }\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(parameters) {\n          var _iterator15 = _createForOfIteratorHelper(parameters.annotations),\n            _step15;\n          try {\n            for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n              var data = _step15.value;\n              var element = parameters.div.querySelector(\"[data-annotation-id=\\\"\".concat(data.id, \"\\\"]\"));\n              if (element) {\n                element.style.transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n              }\n            }\n          } catch (err) {\n            _iterator15.e(err);\n          } finally {\n            _iterator15.f();\n          }\n          parameters.div.removeAttribute(\"hidden\");\n        }\n      }]);\n    }();\n    exports.AnnotationLayer = AnnotationLayer;\n\n    /***/\n  }), (/* 17 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.renderTextLayer = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var renderTextLayer = function renderTextLayerClosure() {\n      var MAX_TEXT_DIVS_TO_RENDER = 100000;\n      var NonWhitespaceRegexp = /\\S/;\n      function isAllWhitespace(str) {\n        return !NonWhitespaceRegexp.test(str);\n      }\n      function appendText(task, geom, styles) {\n        var textDiv = document.createElement(\"span\");\n        var textDivProperties = {\n          angle: 0,\n          canvasWidth: 0,\n          isWhitespace: false,\n          originalTransform: null,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          scale: 1\n        };\n        task._textDivs.push(textDiv);\n        if (isAllWhitespace(geom.str)) {\n          textDivProperties.isWhitespace = true;\n          task._textDivProperties.set(textDiv, textDivProperties);\n          return;\n        }\n        var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n        var angle = Math.atan2(tx[1], tx[0]);\n        var style = styles[geom.fontName];\n        if (style.vertical) {\n          angle += Math.PI / 2;\n        }\n        var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n        var fontAscent = fontHeight;\n        if (style.ascent) {\n          fontAscent = style.ascent * fontAscent;\n        } else if (style.descent) {\n          fontAscent = (1 + style.descent) * fontAscent;\n        }\n        var left, top;\n        if (angle === 0) {\n          left = tx[4];\n          top = tx[5] - fontAscent;\n        } else {\n          left = tx[4] + fontAscent * Math.sin(angle);\n          top = tx[5] - fontAscent * Math.cos(angle);\n        }\n        textDiv.style.left = \"\".concat(left, \"px\");\n        textDiv.style.top = \"\".concat(top, \"px\");\n        textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n        textDiv.style.fontFamily = style.fontFamily;\n        textDiv.textContent = geom.str;\n        if (task._fontInspectorEnabled) {\n          textDiv.dataset.fontName = geom.fontName;\n        }\n        if (angle !== 0) {\n          textDivProperties.angle = angle * (180 / Math.PI);\n        }\n        var shouldScaleText = false;\n        if (geom.str.length > 1) {\n          shouldScaleText = true;\n        } else if (geom.transform[0] !== geom.transform[3]) {\n          var absScaleX = Math.abs(geom.transform[0]),\n            absScaleY = Math.abs(geom.transform[3]);\n          if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n            shouldScaleText = true;\n          }\n        }\n        if (shouldScaleText) {\n          if (style.vertical) {\n            textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n          } else {\n            textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n          }\n        }\n        task._textDivProperties.set(textDiv, textDivProperties);\n        if (task._textContentStream) {\n          task._layoutText(textDiv);\n        }\n        if (task._enhanceTextSelection) {\n          var angleCos = 1,\n            angleSin = 0;\n          if (angle !== 0) {\n            angleCos = Math.cos(angle);\n            angleSin = Math.sin(angle);\n          }\n          var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n          var divHeight = fontHeight;\n          var m, b;\n          if (angle !== 0) {\n            m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n            b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n          } else {\n            b = [left, top, left + divWidth, top + divHeight];\n          }\n          task._bounds.push({\n            left: b[0],\n            top: b[1],\n            right: b[2],\n            bottom: b[3],\n            div: textDiv,\n            size: [divWidth, divHeight],\n            m: m\n          });\n        }\n      }\n      function render(task) {\n        if (task._canceled) {\n          return;\n        }\n        var textDivs = task._textDivs;\n        var capability = task._capability;\n        var textDivsLength = textDivs.length;\n        if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n          task._renderingDone = true;\n          capability.resolve();\n          return;\n        }\n        if (!task._textContentStream) {\n          for (var i = 0; i < textDivsLength; i++) {\n            task._layoutText(textDivs[i]);\n          }\n        }\n        task._renderingDone = true;\n        capability.resolve();\n      }\n      function findPositiveMin(ts, offset, count) {\n        var result = 0;\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      }\n      function expand(task) {\n        var bounds = task._bounds;\n        var viewport = task._viewport;\n        var expanded = expandBounds(viewport.width, viewport.height, bounds);\n        for (var i = 0; i < expanded.length; i++) {\n          var div = bounds[i].div;\n          var divProperties = task._textDivProperties.get(div);\n          if (divProperties.angle === 0) {\n            divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n            divProperties.paddingTop = bounds[i].top - expanded[i].top;\n            divProperties.paddingRight = expanded[i].right - bounds[i].right;\n            divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n            task._textDivProperties.set(div, divProperties);\n            continue;\n          }\n          var e = expanded[i],\n            b = bounds[i];\n          var m = b.m,\n            c = m[0],\n            s = m[1];\n          var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n          var ts = new Float64Array(64);\n          points.forEach(function (p, j) {\n            var t = _util.Util.applyTransform(p, m);\n            ts[j + 0] = c && (e.left - t[0]) / c;\n            ts[j + 4] = s && (e.top - t[1]) / s;\n            ts[j + 8] = c && (e.right - t[0]) / c;\n            ts[j + 12] = s && (e.bottom - t[1]) / s;\n            ts[j + 16] = s && (e.left - t[0]) / -s;\n            ts[j + 20] = c && (e.top - t[1]) / c;\n            ts[j + 24] = s && (e.right - t[0]) / -s;\n            ts[j + 28] = c && (e.bottom - t[1]) / c;\n            ts[j + 32] = c && (e.left - t[0]) / -c;\n            ts[j + 36] = s && (e.top - t[1]) / -s;\n            ts[j + 40] = c && (e.right - t[0]) / -c;\n            ts[j + 44] = s && (e.bottom - t[1]) / -s;\n            ts[j + 48] = s && (e.left - t[0]) / s;\n            ts[j + 52] = c && (e.top - t[1]) / -c;\n            ts[j + 56] = s && (e.right - t[0]) / s;\n            ts[j + 60] = c && (e.bottom - t[1]) / -c;\n          });\n          var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n          divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n          divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n          divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n          divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n          task._textDivProperties.set(div, divProperties);\n        }\n      }\n      function expandBounds(width, height, boxes) {\n        var bounds = boxes.map(function (box, i) {\n          return {\n            x1: box.left,\n            y1: box.top,\n            x2: box.right,\n            y2: box.bottom,\n            index: i,\n            x1New: undefined,\n            x2New: undefined\n          };\n        });\n        expandBoundsLTR(width, bounds);\n        var expanded = new Array(boxes.length);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i] = {\n            left: b.x1New,\n            top: 0,\n            right: b.x2New,\n            bottom: 0\n          };\n        });\n        boxes.map(function (box, i) {\n          var e = expanded[i],\n            b = bounds[i];\n          b.x1 = box.top;\n          b.y1 = width - e.right;\n          b.x2 = box.bottom;\n          b.y2 = width - e.left;\n          b.index = i;\n          b.x1New = undefined;\n          b.x2New = undefined;\n        });\n        expandBoundsLTR(height, bounds);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i].top = b.x1New;\n          expanded[i].bottom = b.x2New;\n        });\n        return expanded;\n      }\n      function expandBoundsLTR(width, bounds) {\n        bounds.sort(function (a, b) {\n          return a.x1 - b.x1 || a.index - b.index;\n        });\n        var fakeBoundary = {\n          x1: -Infinity,\n          y1: -Infinity,\n          x2: 0,\n          y2: Infinity,\n          index: -1,\n          x1New: 0,\n          x2New: 0\n        };\n        var horizon = [{\n          start: -Infinity,\n          end: Infinity,\n          boundary: fakeBoundary\n        }];\n        bounds.forEach(function (boundary) {\n          var i = 0;\n          while (i < horizon.length && horizon[i].end <= boundary.y1) {\n            i++;\n          }\n          var j = horizon.length - 1;\n          while (j >= 0 && horizon[j].start >= boundary.y2) {\n            j--;\n          }\n          var horizonPart, affectedBoundary;\n          var q,\n            k,\n            maxXNew = -Infinity;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var xNew;\n            if (affectedBoundary.x2 > boundary.x1) {\n              xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n            } else if (affectedBoundary.x2New === undefined) {\n              xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n            } else {\n              xNew = affectedBoundary.x2New;\n            }\n            if (xNew > maxXNew) {\n              maxXNew = xNew;\n            }\n          }\n          boundary.x1New = maxXNew;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              if (affectedBoundary.x2 > boundary.x1) {\n                if (affectedBoundary.index > boundary.index) {\n                  affectedBoundary.x2New = affectedBoundary.x2;\n                }\n              } else {\n                affectedBoundary.x2New = maxXNew;\n              }\n            } else if (affectedBoundary.x2New > maxXNew) {\n              affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n            }\n          }\n          var changedHorizon = [],\n            lastBoundary = null;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n            if (lastBoundary === useBoundary) {\n              changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n            } else {\n              changedHorizon.push({\n                start: horizonPart.start,\n                end: horizonPart.end,\n                boundary: useBoundary\n              });\n              lastBoundary = useBoundary;\n            }\n          }\n          if (horizon[i].start < boundary.y1) {\n            changedHorizon[0].start = boundary.y1;\n            changedHorizon.unshift({\n              start: horizon[i].start,\n              end: boundary.y1,\n              boundary: horizon[i].boundary\n            });\n          }\n          if (boundary.y2 < horizon[j].end) {\n            changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n            changedHorizon.push({\n              start: boundary.y2,\n              end: horizon[j].end,\n              boundary: horizon[j].boundary\n            });\n          }\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New !== undefined) {\n              continue;\n            }\n            var used = false;\n            for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = 0; !used && k < changedHorizon.length; k++) {\n              used = changedHorizon[k].boundary === affectedBoundary;\n            }\n            if (!used) {\n              affectedBoundary.x2New = maxXNew;\n            }\n          }\n          Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n        });\n        horizon.forEach(function (horizonPart) {\n          var affectedBoundary = horizonPart.boundary;\n          if (affectedBoundary.x2New === undefined) {\n            affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n          }\n        });\n      }\n      function TextLayerRenderTask(_ref31) {\n        var _this38 = this;\n        var textContent = _ref31.textContent,\n          textContentStream = _ref31.textContentStream,\n          container = _ref31.container,\n          viewport = _ref31.viewport,\n          textDivs = _ref31.textDivs,\n          textContentItemsStr = _ref31.textContentItemsStr,\n          enhanceTextSelection = _ref31.enhanceTextSelection;\n        this._textContent = textContent;\n        this._textContentStream = textContentStream;\n        this._container = container;\n        this._viewport = viewport;\n        this._textDivs = textDivs || [];\n        this._textContentItemsStr = textContentItemsStr || [];\n        this._enhanceTextSelection = !!enhanceTextSelection;\n        this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n        this._reader = null;\n        this._layoutTextLastFontSize = null;\n        this._layoutTextLastFontFamily = null;\n        this._layoutTextCtx = null;\n        this._textDivProperties = new WeakMap();\n        this._renderingDone = false;\n        this._canceled = false;\n        this._capability = (0, _util.createPromiseCapability)();\n        this._renderTimer = null;\n        this._bounds = [];\n        this._capability.promise.finally(function () {\n          if (_this38._layoutTextCtx) {\n            _this38._layoutTextCtx.canvas.width = 0;\n            _this38._layoutTextCtx.canvas.height = 0;\n            _this38._layoutTextCtx = null;\n          }\n        }).catch(function () {});\n      }\n      TextLayerRenderTask.prototype = {\n        get promise() {\n          return this._capability.promise;\n        },\n        cancel: function TextLayer_cancel() {\n          this._canceled = true;\n          if (this._reader) {\n            this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n            this._reader = null;\n          }\n          if (this._renderTimer !== null) {\n            clearTimeout(this._renderTimer);\n            this._renderTimer = null;\n          }\n          this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n        },\n        _processItems: function _processItems(items, styleCache) {\n          for (var i = 0, len = items.length; i < len; i++) {\n            this._textContentItemsStr.push(items[i].str);\n            appendText(this, items[i], styleCache);\n          }\n        },\n        _layoutText: function _layoutText(textDiv) {\n          var textDivProperties = this._textDivProperties.get(textDiv);\n          if (textDivProperties.isWhitespace) {\n            return;\n          }\n          var transform = \"\";\n          if (textDivProperties.canvasWidth !== 0) {\n            var _textDiv$style = textDiv.style,\n              fontSize = _textDiv$style.fontSize,\n              fontFamily = _textDiv$style.fontFamily;\n            if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n              this._layoutTextCtx.font = \"\".concat(fontSize, \" \").concat(fontFamily);\n              this._layoutTextLastFontSize = fontSize;\n              this._layoutTextLastFontFamily = fontFamily;\n            }\n            var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n              width = _this$_layoutTextCtx$.width;\n            if (width > 0) {\n              textDivProperties.scale = textDivProperties.canvasWidth / width;\n              transform = \"scaleX(\".concat(textDivProperties.scale, \")\");\n            }\n          }\n          if (textDivProperties.angle !== 0) {\n            transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n          }\n          if (transform.length > 0) {\n            if (this._enhanceTextSelection) {\n              textDivProperties.originalTransform = transform;\n            }\n            textDiv.style.transform = transform;\n          }\n          this._textDivProperties.set(textDiv, textDivProperties);\n          this._container.appendChild(textDiv);\n        },\n        _render: function TextLayer_render(timeout) {\n          var _this39 = this;\n          var capability = (0, _util.createPromiseCapability)();\n          var styleCache = Object.create(null);\n          var canvas = document.createElement(\"canvas\");\n          canvas.mozOpaque = true;\n          this._layoutTextCtx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          if (this._textContent) {\n            var textItems = this._textContent.items;\n            var textStyles = this._textContent.styles;\n            this._processItems(textItems, textStyles);\n            capability.resolve();\n          } else if (this._textContentStream) {\n            var _pump2 = function pump() {\n              _this39._reader.read().then(function (_ref32) {\n                var value = _ref32.value,\n                  done = _ref32.done;\n                if (done) {\n                  capability.resolve();\n                  return;\n                }\n                Object.assign(styleCache, value.styles);\n                _this39._processItems(value.items, styleCache);\n                _pump2();\n              }, capability.reject);\n            };\n            this._reader = this._textContentStream.getReader();\n            _pump2();\n          } else {\n            throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n          }\n          capability.promise.then(function () {\n            styleCache = null;\n            if (!timeout) {\n              render(_this39);\n            } else {\n              _this39._renderTimer = setTimeout(function () {\n                render(_this39);\n                _this39._renderTimer = null;\n              }, timeout);\n            }\n          }, this._capability.reject);\n        },\n        expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n          if (!this._enhanceTextSelection || !this._renderingDone) {\n            return;\n          }\n          if (this._bounds !== null) {\n            expand(this);\n            this._bounds = null;\n          }\n          var transformBuf = [],\n            paddingBuf = [];\n          for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n            var div = this._textDivs[i];\n            var divProps = this._textDivProperties.get(div);\n            if (divProps.isWhitespace) {\n              continue;\n            }\n            if (expandDivs) {\n              transformBuf.length = 0;\n              paddingBuf.length = 0;\n              if (divProps.originalTransform) {\n                transformBuf.push(divProps.originalTransform);\n              }\n              if (divProps.paddingTop > 0) {\n                paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingRight > 0) {\n                paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingBottom > 0) {\n                paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingLeft > 0) {\n                paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n              } else {\n                paddingBuf.push(0);\n              }\n              div.style.padding = paddingBuf.join(\" \");\n              if (transformBuf.length) {\n                div.style.transform = transformBuf.join(\" \");\n              }\n            } else {\n              div.style.padding = null;\n              div.style.transform = divProps.originalTransform;\n            }\n          }\n        }\n      };\n      function renderTextLayer(renderParameters) {\n        var task = new TextLayerRenderTask({\n          textContent: renderParameters.textContent,\n          textContentStream: renderParameters.textContentStream,\n          container: renderParameters.container,\n          viewport: renderParameters.viewport,\n          textDivs: renderParameters.textDivs,\n          textContentItemsStr: renderParameters.textContentItemsStr,\n          enhanceTextSelection: renderParameters.enhanceTextSelection\n        });\n        task._render(renderParameters.timeout);\n        return task;\n      }\n      return renderTextLayer;\n    }();\n    exports.renderTextLayer = renderTextLayer;\n\n    /***/\n  }), (/* 18 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SVGGraphics = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _display_utils = __w_pdfjs_require__(1);\n    var _is_node = __w_pdfjs_require__(4);\n    var SVGGraphics = function SVGGraphics() {\n      throw new Error(\"Not implemented: SVGGraphics\");\n    };\n    exports.SVGGraphics = SVGGraphics;\n    {\n      var opListToTree = function opListToTree(opList) {\n        var opTree = [];\n        var tmp = [];\n        var _iterator16 = _createForOfIteratorHelper(opList),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var opListElement = _step16.value;\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree[opTree.length - 1].items;\n              continue;\n            }\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n        return opTree;\n      };\n      var pf = function pf(value) {\n        if (Number.isInteger(value)) {\n          return value.toString();\n        }\n        var s = value.toFixed(10);\n        var i = s.length - 1;\n        if (s[i] !== \"0\") {\n          return s;\n        }\n        do {\n          i--;\n        } while (s[i] === \"0\");\n        return s.substring(0, s[i] === \".\" ? i : i + 1);\n      };\n      var pm = function pm(m) {\n        if (m[4] === 0 && m[5] === 0) {\n          if (m[1] === 0 && m[2] === 0) {\n            if (m[0] === 1 && m[3] === 1) {\n              return \"\";\n            }\n            return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n          }\n          if (m[0] === m[3] && m[1] === -m[2]) {\n            var a = Math.acos(m[0]) * 180 / Math.PI;\n            return \"rotate(\".concat(pf(a), \")\");\n          }\n        } else {\n          if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n          }\n        }\n        return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n      };\n      var SVG_DEFAULTS = {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fillColor: \"#000000\"\n      };\n      var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n      var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n      var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      var convertImgDataToPng = function () {\n        var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n        var CHUNK_WRAPPER_SIZE = 12;\n        var crcTable = new Int32Array(256);\n        for (var i = 0; i < 256; i++) {\n          var c = i;\n          for (var h = 0; h < 8; h++) {\n            if (c & 1) {\n              c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n            } else {\n              c = c >> 1 & 0x7fffffff;\n            }\n          }\n          crcTable[i] = c;\n        }\n        function crc32(data, start, end) {\n          var crc = -1;\n          for (var _i7 = start; _i7 < end; _i7++) {\n            var a = (crc ^ data[_i7]) & 0xff;\n            var b = crcTable[a];\n            crc = crc >>> 8 ^ b;\n          }\n          return crc ^ -1;\n        }\n        function writePngChunk(type, body, data, offset) {\n          var p = offset;\n          var len = body.length;\n          data[p] = len >> 24 & 0xff;\n          data[p + 1] = len >> 16 & 0xff;\n          data[p + 2] = len >> 8 & 0xff;\n          data[p + 3] = len & 0xff;\n          p += 4;\n          data[p] = type.charCodeAt(0) & 0xff;\n          data[p + 1] = type.charCodeAt(1) & 0xff;\n          data[p + 2] = type.charCodeAt(2) & 0xff;\n          data[p + 3] = type.charCodeAt(3) & 0xff;\n          p += 4;\n          data.set(body, p);\n          p += body.length;\n          var crc = crc32(data, offset + 4, p);\n          data[p] = crc >> 24 & 0xff;\n          data[p + 1] = crc >> 16 & 0xff;\n          data[p + 2] = crc >> 8 & 0xff;\n          data[p + 3] = crc & 0xff;\n        }\n        function adler32(data, start, end) {\n          var a = 1;\n          var b = 0;\n          for (var _i8 = start; _i8 < end; ++_i8) {\n            a = (a + (data[_i8] & 0xff)) % 65521;\n            b = (b + a) % 65521;\n          }\n          return b << 16 | a;\n        }\n        function deflateSync(literals) {\n          if (!_is_node.isNodeJS) {\n            return deflateSyncUncompressed(literals);\n          }\n          try {\n            var input;\n            if (parseInt(process.versions.node) >= 8) {\n              input = literals;\n            } else {\n              input = Buffer.from(literals);\n            }\n            var output = require(\"zlib\").deflateSync(input, {\n              level: 9\n            });\n            return output instanceof Uint8Array ? output : new Uint8Array(output);\n          } catch (e) {\n            (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n          }\n          return deflateSyncUncompressed(literals);\n        }\n        function deflateSyncUncompressed(literals) {\n          var len = literals.length;\n          var maxBlockLength = 0xffff;\n          var deflateBlocks = Math.ceil(len / maxBlockLength);\n          var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n          var pi = 0;\n          idat[pi++] = 0x78;\n          idat[pi++] = 0x9c;\n          var pos = 0;\n          while (len > maxBlockLength) {\n            idat[pi++] = 0x00;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0x00;\n            idat[pi++] = 0x00;\n            idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n            pi += maxBlockLength;\n            pos += maxBlockLength;\n            len -= maxBlockLength;\n          }\n          idat[pi++] = 0x01;\n          idat[pi++] = len & 0xff;\n          idat[pi++] = len >> 8 & 0xff;\n          idat[pi++] = ~len & 0xffff & 0xff;\n          idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n          idat.set(literals.subarray(pos), pi);\n          pi += literals.length - pos;\n          var adler = adler32(literals, 0, literals.length);\n          idat[pi++] = adler >> 24 & 0xff;\n          idat[pi++] = adler >> 16 & 0xff;\n          idat[pi++] = adler >> 8 & 0xff;\n          idat[pi++] = adler & 0xff;\n          return idat;\n        }\n        function encode(imgData, kind, forceDataSchema, isMask) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var bitDepth, colorType, lineSize;\n          var bytes = imgData.data;\n          switch (kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              colorType = 0;\n              bitDepth = 1;\n              lineSize = width + 7 >> 3;\n              break;\n            case _util.ImageKind.RGB_24BPP:\n              colorType = 2;\n              bitDepth = 8;\n              lineSize = width * 3;\n              break;\n            case _util.ImageKind.RGBA_32BPP:\n              colorType = 6;\n              bitDepth = 8;\n              lineSize = width * 4;\n              break;\n            default:\n              throw new Error(\"invalid format\");\n          }\n          var literals = new Uint8Array((1 + lineSize) * height);\n          var offsetLiterals = 0,\n            offsetBytes = 0;\n          for (var y = 0; y < height; ++y) {\n            literals[offsetLiterals++] = 0;\n            literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n            offsetBytes += lineSize;\n            offsetLiterals += lineSize;\n          }\n          if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n            offsetLiterals = 0;\n            for (var _y = 0; _y < height; _y++) {\n              offsetLiterals++;\n              for (var _i9 = 0; _i9 < lineSize; _i9++) {\n                literals[offsetLiterals++] ^= 0xff;\n              }\n            }\n          }\n          var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n          var idat = deflateSync(literals);\n          var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n          var data = new Uint8Array(pngLength);\n          var offset = 0;\n          data.set(PNG_HEADER, offset);\n          offset += PNG_HEADER.length;\n          writePngChunk(\"IHDR\", ihdr, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n          writePngChunk(\"IDATA\", idat, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + idat.length;\n          writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n          return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n        }\n        return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n          var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n          return encode(imgData, kind, forceDataSchema, isMask);\n        };\n      }();\n      var SVGExtraState = /*#__PURE__*/function () {\n        function SVGExtraState() {\n          _classCallCheck(this, SVGExtraState);\n          this.fontSizeScale = 1;\n          this.fontWeight = SVG_DEFAULTS.fontWeight;\n          this.fontSize = 0;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textMatrixScale = 1;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRise = 0;\n          this.fillColor = SVG_DEFAULTS.fillColor;\n          this.strokeColor = \"#000000\";\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.lineJoin = \"\";\n          this.lineCap = \"\";\n          this.miterLimit = 0;\n          this.dashArray = [];\n          this.dashPhase = 0;\n          this.dependencies = [];\n          this.activeClipUrl = null;\n          this.clipGroup = null;\n          this.maskId = \"\";\n        }\n        return _createClass(SVGExtraState, [{\n          key: \"clone\",\n          value: function clone() {\n            return Object.create(this);\n          }\n        }, {\n          key: \"setCurrentPoint\",\n          value: function setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        }]);\n      }();\n      var clipCount = 0;\n      var maskCount = 0;\n      var shadingCount = 0;\n      exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n        function SVGGraphics(commonObjs, objs) {\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          _classCallCheck(this, SVGGraphics);\n          this.svgFactory = new _display_utils.DOMSVGFactory();\n          this.current = new SVGExtraState();\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.transformStack = [];\n          this.extraStack = [];\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.embedFonts = false;\n          this.embeddedFonts = Object.create(null);\n          this.cssStyle = null;\n          this.forceDataSchema = !!forceDataSchema;\n          this._operatorIdMapping = [];\n          for (var op in _util.OPS) {\n            this._operatorIdMapping[_util.OPS[op]] = op;\n          }\n        }\n        return _createClass(SVGGraphics, [{\n          key: \"save\",\n          value: function save() {\n            this.transformStack.push(this.transformMatrix);\n            var old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n        }, {\n          key: \"restore\",\n          value: function restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n        }, {\n          key: \"group\",\n          value: function group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n        }, {\n          key: \"loadDependencies\",\n          value: function loadDependencies(operatorList) {\n            var _this40 = this;\n            var fnArray = operatorList.fnArray;\n            var argsArray = operatorList.argsArray;\n            for (var i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n              var _iterator17 = _createForOfIteratorHelper(argsArray[i]),\n                _step17;\n              try {\n                var _loop = function _loop() {\n                  var obj = _step17.value;\n                  var objsPool = obj.startsWith(\"g_\") ? _this40.commonObjs : _this40.objs;\n                  var promise = new Promise(function (resolve) {\n                    objsPool.get(obj, resolve);\n                  });\n                  _this40.current.dependencies.push(promise);\n                };\n                for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                  _loop();\n                }\n              } catch (err) {\n                _iterator17.e(err);\n              } finally {\n                _iterator17.f();\n              }\n            }\n            return Promise.all(this.current.dependencies);\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(a, b, c, d, e, f) {\n            var transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n        }, {\n          key: \"getSVG\",\n          value: function getSVG(operatorList, viewport) {\n            var _this41 = this;\n            this.viewport = viewport;\n            var svgElement = this._initialize(viewport);\n            return this.loadDependencies(operatorList).then(function () {\n              _this41.transformMatrix = _util.IDENTITY_MATRIX;\n              _this41.executeOpTree(_this41.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n        }, {\n          key: \"convertOpList\",\n          value: function convertOpList(operatorList) {\n            var operatorIdMapping = this._operatorIdMapping;\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var opList = [];\n            for (var i = 0, ii = fnArray.length; i < ii; i++) {\n              var fnId = fnArray[i];\n              opList.push({\n                fnId: fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n            return opListToTree(opList);\n          }\n        }, {\n          key: \"executeOpTree\",\n          value: function executeOpTree(opTree) {\n            var _iterator18 = _createForOfIteratorHelper(opTree),\n              _step18;\n            try {\n              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                var opTreeElement = _step18.value;\n                var fn = opTreeElement.fn;\n                var fnId = opTreeElement.fnId;\n                var args = opTreeElement.args;\n                switch (fnId | 0) {\n                  case _util.OPS.beginText:\n                    this.beginText();\n                    break;\n                  case _util.OPS.dependency:\n                    break;\n                  case _util.OPS.setLeading:\n                    this.setLeading(args);\n                    break;\n                  case _util.OPS.setLeadingMoveText:\n                    this.setLeadingMoveText(args[0], args[1]);\n                    break;\n                  case _util.OPS.setFont:\n                    this.setFont(args);\n                    break;\n                  case _util.OPS.showText:\n                    this.showText(args[0]);\n                    break;\n                  case _util.OPS.showSpacedText:\n                    this.showText(args[0]);\n                    break;\n                  case _util.OPS.endText:\n                    this.endText();\n                    break;\n                  case _util.OPS.moveText:\n                    this.moveText(args[0], args[1]);\n                    break;\n                  case _util.OPS.setCharSpacing:\n                    this.setCharSpacing(args[0]);\n                    break;\n                  case _util.OPS.setWordSpacing:\n                    this.setWordSpacing(args[0]);\n                    break;\n                  case _util.OPS.setHScale:\n                    this.setHScale(args[0]);\n                    break;\n                  case _util.OPS.setTextMatrix:\n                    this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n                  case _util.OPS.setTextRise:\n                    this.setTextRise(args[0]);\n                    break;\n                  case _util.OPS.setTextRenderingMode:\n                    this.setTextRenderingMode(args[0]);\n                    break;\n                  case _util.OPS.setLineWidth:\n                    this.setLineWidth(args[0]);\n                    break;\n                  case _util.OPS.setLineJoin:\n                    this.setLineJoin(args[0]);\n                    break;\n                  case _util.OPS.setLineCap:\n                    this.setLineCap(args[0]);\n                    break;\n                  case _util.OPS.setMiterLimit:\n                    this.setMiterLimit(args[0]);\n                    break;\n                  case _util.OPS.setFillRGBColor:\n                    this.setFillRGBColor(args[0], args[1], args[2]);\n                    break;\n                  case _util.OPS.setStrokeRGBColor:\n                    this.setStrokeRGBColor(args[0], args[1], args[2]);\n                    break;\n                  case _util.OPS.setStrokeColorN:\n                    this.setStrokeColorN(args);\n                    break;\n                  case _util.OPS.setFillColorN:\n                    this.setFillColorN(args);\n                    break;\n                  case _util.OPS.shadingFill:\n                    this.shadingFill(args[0]);\n                    break;\n                  case _util.OPS.setDash:\n                    this.setDash(args[0], args[1]);\n                    break;\n                  case _util.OPS.setRenderingIntent:\n                    this.setRenderingIntent(args[0]);\n                    break;\n                  case _util.OPS.setFlatness:\n                    this.setFlatness(args[0]);\n                    break;\n                  case _util.OPS.setGState:\n                    this.setGState(args[0]);\n                    break;\n                  case _util.OPS.fill:\n                    this.fill();\n                    break;\n                  case _util.OPS.eoFill:\n                    this.eoFill();\n                    break;\n                  case _util.OPS.stroke:\n                    this.stroke();\n                    break;\n                  case _util.OPS.fillStroke:\n                    this.fillStroke();\n                    break;\n                  case _util.OPS.eoFillStroke:\n                    this.eoFillStroke();\n                    break;\n                  case _util.OPS.clip:\n                    this.clip(\"nonzero\");\n                    break;\n                  case _util.OPS.eoClip:\n                    this.clip(\"evenodd\");\n                    break;\n                  case _util.OPS.paintSolidColorImageMask:\n                    this.paintSolidColorImageMask();\n                    break;\n                  case _util.OPS.paintImageXObject:\n                    this.paintImageXObject(args[0]);\n                    break;\n                  case _util.OPS.paintInlineImageXObject:\n                    this.paintInlineImageXObject(args[0]);\n                    break;\n                  case _util.OPS.paintImageMaskXObject:\n                    this.paintImageMaskXObject(args[0]);\n                    break;\n                  case _util.OPS.paintFormXObjectBegin:\n                    this.paintFormXObjectBegin(args[0], args[1]);\n                    break;\n                  case _util.OPS.paintFormXObjectEnd:\n                    this.paintFormXObjectEnd();\n                    break;\n                  case _util.OPS.closePath:\n                    this.closePath();\n                    break;\n                  case _util.OPS.closeStroke:\n                    this.closeStroke();\n                    break;\n                  case _util.OPS.closeFillStroke:\n                    this.closeFillStroke();\n                    break;\n                  case _util.OPS.closeEOFillStroke:\n                    this.closeEOFillStroke();\n                    break;\n                  case _util.OPS.nextLine:\n                    this.nextLine();\n                    break;\n                  case _util.OPS.transform:\n                    this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n                  case _util.OPS.constructPath:\n                    this.constructPath(args[0], args[1]);\n                    break;\n                  case _util.OPS.endPath:\n                    this.endPath();\n                    break;\n                  case 92:\n                    this.group(opTreeElement.items);\n                    break;\n                  default:\n                    (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                    break;\n                }\n              }\n            } catch (err) {\n              _iterator18.e(err);\n            } finally {\n              _iterator18.f();\n            }\n          }\n        }, {\n          key: \"setWordSpacing\",\n          value: function setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n        }, {\n          key: \"setCharSpacing\",\n          value: function setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n        }, {\n          key: \"nextLine\",\n          value: function nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n        }, {\n          key: \"setTextMatrix\",\n          value: function setTextMatrix(a, b, c, d, e, f) {\n            var current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.sqrt(a * a + b * b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.appendChild(current.tspan);\n          }\n        }, {\n          key: \"beginText\",\n          value: function beginText() {\n            var current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n        }, {\n          key: \"moveText\",\n          value: function moveText(x, y) {\n            var current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n        }, {\n          key: \"showText\",\n          value: function showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return;\n            }\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var x = 0;\n            var _iterator19 = _createForOfIteratorHelper(glyphs),\n              _step19;\n            try {\n              for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                var glyph = _step19.value;\n                if (glyph === null) {\n                  x += fontDirection * wordSpacing;\n                  continue;\n                } else if ((0, _util.isNum)(glyph)) {\n                  x += spacingDir * glyph * fontSize / 1000;\n                  continue;\n                }\n                var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                var character = glyph.fontChar;\n                var scaledX = void 0,\n                  scaledY = void 0;\n                var width = glyph.width;\n                if (vertical) {\n                  var vx = void 0;\n                  var vmetric = glyph.vmetric || defaultVMetrics;\n                  vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                  vx = -vx * widthAdvanceScale;\n                  var vy = vmetric[2] * widthAdvanceScale;\n                  width = vmetric ? -vmetric[0] : width;\n                  scaledX = vx / fontSizeScale;\n                  scaledY = (x + vy) / fontSizeScale;\n                } else {\n                  scaledX = x / fontSizeScale;\n                  scaledY = 0;\n                }\n                if (glyph.isInFont || font.missingFile) {\n                  current.xcoords.push(current.x + scaledX);\n                  if (vertical) {\n                    current.ycoords.push(-current.y + scaledY);\n                  }\n                  current.tspan.textContent += character;\n                } else {}\n                var charWidth = void 0;\n                if (vertical) {\n                  charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                } else {\n                  charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                }\n                x += charWidth;\n              }\n            } catch (err) {\n              _iterator19.e(err);\n            } finally {\n              _iterator19.f();\n            }\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n            var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              var lineWidthScale = 1 / (current.textMatrixScale || 1);\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n            var textMatrix = current.textMatrix;\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n            current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.appendChild(current.tspan);\n            current.txtgrp.appendChild(current.txtElement);\n            this._ensureTransformGroup().appendChild(current.txtElement);\n          }\n        }, {\n          key: \"setLeadingMoveText\",\n          value: function setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n        }, {\n          key: \"addFontStyle\",\n          value: function addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.appendChild(this.cssStyle);\n            }\n            var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n          }\n        }, {\n          key: \"setFont\",\n          value: function setFont(details) {\n            var current = this.current;\n            var fontObj = this.commonObjs.get(details[0]);\n            var size = details[1];\n            current.font = fontObj;\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n            var bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n        }, {\n          key: \"endText\",\n          value: function endText() {\n            var current = this.current;\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n        }, {\n          key: \"setLineWidth\",\n          value: function setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n        }, {\n          key: \"setLineCap\",\n          value: function setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n        }, {\n          key: \"setLineJoin\",\n          value: function setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n        }, {\n          key: \"setMiterLimit\",\n          value: function setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n        }, {\n          key: \"setStrokeAlpha\",\n          value: function setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n        }, {\n          key: \"setStrokeRGBColor\",\n          value: function setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n          }\n        }, {\n          key: \"setFillAlpha\",\n          value: function setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n        }, {\n          key: \"setFillRGBColor\",\n          value: function setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n        }, {\n          key: \"setStrokeColorN\",\n          value: function setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n        }, {\n          key: \"setFillColorN\",\n          value: function setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n        }, {\n          key: \"shadingFill\",\n          value: function shadingFill(args) {\n            var width = this.viewport.width;\n            var height = this.viewport.height;\n            var inv = _util.Util.inverseTransform(this.transformMatrix);\n            var bl = _util.Util.applyTransform([0, 0], inv);\n            var br = _util.Util.applyTransform([0, height], inv);\n            var ul = _util.Util.applyTransform([width, 0], inv);\n            var ur = _util.Util.applyTransform([width, height], inv);\n            var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            var rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n            this._ensureTransformGroup().appendChild(rect);\n          }\n        }, {\n          key: \"_makeColorN_Pattern\",\n          value: function _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n            return this._makeShadingPattern(args);\n          }\n        }, {\n          key: \"_makeTilingPattern\",\n          value: function _makeTilingPattern(args) {\n            var color = args[1];\n            var operatorList = args[2];\n            var matrix = args[3] || _util.IDENTITY_MATRIX;\n            var _args$ = _slicedToArray(args[4], 4),\n              x0 = _args$[0],\n              y0 = _args$[1],\n              x1 = _args$[2],\n              y1 = _args$[3];\n            var xstep = args[5];\n            var ystep = args[6];\n            var paintType = args[7];\n            var tilingId = \"shading\".concat(shadingCount++);\n            var _util$Util$applyTrans = _util.Util.applyTransform([x0, y0], matrix),\n              _util$Util$applyTrans2 = _slicedToArray(_util$Util$applyTrans, 2),\n              tx0 = _util$Util$applyTrans2[0],\n              ty0 = _util$Util$applyTrans2[1];\n            var _util$Util$applyTrans3 = _util.Util.applyTransform([x1, y1], matrix),\n              _util$Util$applyTrans4 = _slicedToArray(_util$Util$applyTrans3, 2),\n              tx1 = _util$Util$applyTrans4[0],\n              ty1 = _util$Util$applyTrans4[1];\n            var _util$Util$singularVa = _util.Util.singularValueDecompose2dScale(matrix),\n              _util$Util$singularVa2 = _slicedToArray(_util$Util$singularVa, 2),\n              xscale = _util$Util$singularVa2[0],\n              yscale = _util$Util$singularVa2[1];\n            var txstep = xstep * xscale;\n            var tystep = ystep * yscale;\n            var tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n            tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n            var svg = this.svg;\n            var transformMatrix = this.transformMatrix;\n            var fillColor = this.current.fillColor;\n            var strokeColor = this.current.strokeColor;\n            var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n            if (paintType === 2) {\n              var _util$Util;\n              var cssColor = (_util$Util = _util.Util).makeCssRgb.apply(_util$Util, _toConsumableArray(color));\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.appendChild(bbox.childNodes[0]);\n            this.defs.appendChild(tiling);\n            return \"url(#\".concat(tilingId, \")\");\n          }\n        }, {\n          key: \"_makeShadingPattern\",\n          value: function _makeShadingPattern(args) {\n            switch (args[0]) {\n              case \"RadialAxial\":\n                var shadingId = \"shading\".concat(shadingCount++);\n                var colorStops = args[3];\n                var gradient;\n                switch (args[1]) {\n                  case \"axial\":\n                    var point0 = args[4];\n                    var point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n                  case \"radial\":\n                    var focalPoint = args[4];\n                    var circlePoint = args[5];\n                    var focalRadius = args[6];\n                    var circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n                  default:\n                    throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                }\n                var _iterator20 = _createForOfIteratorHelper(colorStops),\n                  _step20;\n                try {\n                  for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                    var colorStop = _step20.value;\n                    var stop = this.svgFactory.createElement(\"svg:stop\");\n                    stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                    stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                    gradient.appendChild(stop);\n                  }\n                } catch (err) {\n                  _iterator20.e(err);\n                } finally {\n                  _iterator20.f();\n                }\n                this.defs.appendChild(gradient);\n                return \"url(#\".concat(shadingId, \")\");\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n              case \"Dummy\":\n                return \"hotpink\";\n              default:\n                throw new Error(\"Unknown IR type: \".concat(args[0]));\n            }\n          }\n        }, {\n          key: \"setDash\",\n          value: function setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n        }, {\n          key: \"constructPath\",\n          value: function constructPath(ops, args) {\n            var current = this.current;\n            var x = current.x,\n              y = current.y;\n            var d = [];\n            var j = 0;\n            var _iterator21 = _createForOfIteratorHelper(ops),\n              _step21;\n            try {\n              for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                var op = _step21.value;\n                switch (op | 0) {\n                  case _util.OPS.rectangle:\n                    x = args[j++];\n                    y = args[j++];\n                    var width = args[j++];\n                    var height = args[j++];\n                    var xw = x + width;\n                    var yh = y + height;\n                    d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                    break;\n                  case _util.OPS.moveTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"M\", pf(x), pf(y));\n                    break;\n                  case _util.OPS.lineTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"L\", pf(x), pf(y));\n                    break;\n                  case _util.OPS.curveTo:\n                    x = args[j + 4];\n                    y = args[j + 5];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                    j += 6;\n                    break;\n                  case _util.OPS.curveTo2:\n                    d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    j += 4;\n                    break;\n                  case _util.OPS.curveTo3:\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                    j += 4;\n                    break;\n                  case _util.OPS.closePath:\n                    d.push(\"Z\");\n                    break;\n                }\n              }\n            } catch (err) {\n              _iterator21.e(err);\n            } finally {\n              _iterator21.f();\n            }\n            d = d.join(\" \");\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n              this._ensureTransformGroup().appendChild(current.path);\n            }\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n        }, {\n          key: \"endPath\",\n          value: function endPath() {\n            var current = this.current;\n            current.path = null;\n            if (!this.pendingClip) {\n              return;\n            }\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n            var clipId = \"clippath\".concat(clipCount++);\n            var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            var clipElement = current.element.cloneNode(true);\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n            this.pendingClip = null;\n            clipPath.appendChild(clipElement);\n            this.defs.appendChild(clipPath);\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              this.extraStack.forEach(function (prev) {\n                prev.clipGroup = null;\n              });\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n            current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n            this.tgrp = null;\n          }\n        }, {\n          key: \"clip\",\n          value: function clip(type) {\n            this.pendingClip = type;\n          }\n        }, {\n          key: \"closePath\",\n          value: function closePath() {\n            var current = this.current;\n            if (current.path) {\n              var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n        }, {\n          key: \"setLeading\",\n          value: function setLeading(leading) {\n            this.current.leading = -leading;\n          }\n        }, {\n          key: \"setTextRise\",\n          value: function setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n        }, {\n          key: \"setTextRenderingMode\",\n          value: function setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n        }, {\n          key: \"setHScale\",\n          value: function setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n        }, {\n          key: \"setRenderingIntent\",\n          value: function setRenderingIntent(intent) {}\n        }, {\n          key: \"setFlatness\",\n          value: function setFlatness(flatness) {}\n        }, {\n          key: \"setGState\",\n          value: function setGState(states) {\n            var _iterator22 = _createForOfIteratorHelper(states),\n              _step22;\n            try {\n              for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                var _step22$value = _slicedToArray(_step22.value, 2),\n                  key = _step22$value[0],\n                  value = _step22$value[1];\n                switch (key) {\n                  case \"LW\":\n                    this.setLineWidth(value);\n                    break;\n                  case \"LC\":\n                    this.setLineCap(value);\n                    break;\n                  case \"LJ\":\n                    this.setLineJoin(value);\n                    break;\n                  case \"ML\":\n                    this.setMiterLimit(value);\n                    break;\n                  case \"D\":\n                    this.setDash(value[0], value[1]);\n                    break;\n                  case \"RI\":\n                    this.setRenderingIntent(value);\n                    break;\n                  case \"FL\":\n                    this.setFlatness(value);\n                    break;\n                  case \"Font\":\n                    this.setFont(value);\n                    break;\n                  case \"CA\":\n                    this.setStrokeAlpha(value);\n                    break;\n                  case \"ca\":\n                    this.setFillAlpha(value);\n                    break;\n                  default:\n                    (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                    break;\n                }\n              }\n            } catch (err) {\n              _iterator22.e(err);\n            } finally {\n              _iterator22.f();\n            }\n          }\n        }, {\n          key: \"fill\",\n          value: function fill() {\n            var current = this.current;\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n        }, {\n          key: \"stroke\",\n          value: function stroke() {\n            var current = this.current;\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n        }, {\n          key: \"_setStrokeAttributes\",\n          value: function _setStrokeAttributes(element) {\n            var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            var current = this.current;\n            var dashArray = current.dashArray;\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n        }, {\n          key: \"eoFill\",\n          value: function eoFill() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n            this.fill();\n          }\n        }, {\n          key: \"fillStroke\",\n          value: function fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n        }, {\n          key: \"eoFillStroke\",\n          value: function eoFillStroke() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n            this.fillStroke();\n          }\n        }, {\n          key: \"closeStroke\",\n          value: function closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n        }, {\n          key: \"closeFillStroke\",\n          value: function closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n        }, {\n          key: \"closeEOFillStroke\",\n          value: function closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n        }, {\n          key: \"paintSolidColorImageMask\",\n          value: function paintSolidColorImageMask() {\n            var rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n            this._ensureTransformGroup().appendChild(rect);\n          }\n        }, {\n          key: \"paintImageXObject\",\n          value: function paintImageXObject(objId) {\n            var imgData = this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n        }, {\n          key: \"paintInlineImageXObject\",\n          value: function paintInlineImageXObject(imgData, mask) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            var cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            var imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n            if (mask) {\n              mask.appendChild(imgEl);\n            } else {\n              this._ensureTransformGroup().appendChild(imgEl);\n            }\n          }\n        }, {\n          key: \"paintImageMaskXObject\",\n          value: function paintImageMaskXObject(imgData) {\n            var current = this.current;\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = current.fillColor;\n            current.maskId = \"mask\".concat(maskCount++);\n            var mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            var rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n            this.defs.appendChild(mask);\n            this._ensureTransformGroup().appendChild(rect);\n            this.paintInlineImageXObject(imgData, mask);\n          }\n        }, {\n          key: \"paintFormXObjectBegin\",\n          value: function paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              var cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n        }, {\n          key: \"paintFormXObjectEnd\",\n          value: function paintFormXObjectEnd() {}\n        }, {\n          key: \"_initialize\",\n          value: function _initialize(viewport) {\n            var svg = this.svgFactory.create(viewport.width, viewport.height);\n            var definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.appendChild(definitions);\n            this.defs = definitions;\n            var rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.appendChild(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n        }, {\n          key: \"_ensureClipGroup\",\n          value: function _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              var clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.appendChild(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n            return this.current.clipGroup;\n          }\n        }, {\n          key: \"_ensureTransformGroup\",\n          value: function _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().appendChild(this.tgrp);\n              } else {\n                this.svg.appendChild(this.tgrp);\n              }\n            }\n            return this.tgrp;\n          }\n        }]);\n      }();\n    }\n\n    /***/\n  }), (/* 19 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNodeStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    var fs = require(\"fs\");\n    var http = require(\"http\");\n    var https = require(\"https\");\n    var url = require(\"url\");\n    var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n    function parseUrl(sourceUrl) {\n      var parsedUrl = url.parse(sourceUrl);\n      if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n        return parsedUrl;\n      }\n      if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n        return url.parse(\"file:///\".concat(sourceUrl));\n      }\n      if (!parsedUrl.host) {\n        parsedUrl.protocol = \"file:\";\n      }\n      return parsedUrl;\n    }\n    var PDFNodeStream = /*#__PURE__*/function () {\n      function PDFNodeStream(source) {\n        _classCallCheck(this, PDFNodeStream);\n        this.source = source;\n        this.url = parseUrl(source.url);\n        this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n        this.isFsUrl = this.url.protocol === \"file:\";\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      return _createClass(PDFNodeStream, [{\n        key: \"_progressiveDataLength\",\n        get: function get() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n      }, {\n        key: \"getFullReader\",\n        value: function getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n          this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n          return this._fullRequestReader;\n        }\n      }, {\n        key: \"getRangeReader\",\n        value: function getRangeReader(start, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n          this._rangeRequestReaders.push(rangeReader);\n          return rangeReader;\n        }\n      }, {\n        key: \"cancelAllRequests\",\n        value: function cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          var readers = this._rangeRequestReaders.slice(0);\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n      }]);\n    }();\n    exports.PDFNodeStream = PDFNodeStream;\n    var BaseFullReader = /*#__PURE__*/function () {\n      function BaseFullReader(stream) {\n        _classCallCheck(this, BaseFullReader);\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        var source = stream.source;\n        this._contentLength = source.length;\n        this._loaded = 0;\n        this._filename = null;\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._headersCapability = (0, _util.createPromiseCapability)();\n      }\n      return _createClass(BaseFullReader, [{\n        key: \"headersReady\",\n        get: function get() {\n          return this._headersCapability.promise;\n        }\n      }, {\n        key: \"filename\",\n        get: function get() {\n          return this._filename;\n        }\n      }, {\n        key: \"contentLength\",\n        get: function get() {\n          return this._contentLength;\n        }\n      }, {\n        key: \"isRangeSupported\",\n        get: function get() {\n          return this._isRangeSupported;\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._isStreamingSupported;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n            var chunk, buffer;\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return this._readCapability.promise;\n                case 2:\n                  if (!this._done) {\n                    _context9.next = 4;\n                    break;\n                  }\n                  return _context9.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 4:\n                  if (!this._storedError) {\n                    _context9.next = 6;\n                    break;\n                  }\n                  throw this._storedError;\n                case 6:\n                  chunk = this._readableStream.read();\n                  if (!(chunk === null)) {\n                    _context9.next = 10;\n                    break;\n                  }\n                  this._readCapability = (0, _util.createPromiseCapability)();\n                  return _context9.abrupt(\"return\", this.read());\n                case 10:\n                  this._loaded += chunk.length;\n                  if (this.onProgress) {\n                    this.onProgress({\n                      loaded: this._loaded,\n                      total: this._contentLength\n                    });\n                  }\n                  buffer = new Uint8Array(chunk).buffer;\n                  return _context9.abrupt(\"return\", {\n                    value: buffer,\n                    done: false\n                  });\n                case 14:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9, this);\n          }));\n          function read() {\n            return _read3.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n            return;\n          }\n          this._readableStream.destroy(reason);\n        }\n      }, {\n        key: \"_error\",\n        value: function _error(reason) {\n          this._storedError = reason;\n          this._readCapability.resolve();\n        }\n      }, {\n        key: \"_setReadableStream\",\n        value: function _setReadableStream(readableStream) {\n          var _this42 = this;\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", function () {\n            _this42._readCapability.resolve();\n          });\n          readableStream.on(\"end\", function () {\n            readableStream.destroy();\n            _this42._done = true;\n            _this42._readCapability.resolve();\n          });\n          readableStream.on(\"error\", function (reason) {\n            _this42._error(reason);\n          });\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this._error(new _util.AbortException(\"streaming is disabled\"));\n          }\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n      }]);\n    }();\n    var BaseRangeReader = /*#__PURE__*/function () {\n      function BaseRangeReader(stream) {\n        _classCallCheck(this, BaseRangeReader);\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        this._loaded = 0;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        var source = stream.source;\n        this._isStreamingSupported = !source.disableStream;\n      }\n      return _createClass(BaseRangeReader, [{\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._isStreamingSupported;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n            var chunk, buffer;\n            return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return this._readCapability.promise;\n                case 2:\n                  if (!this._done) {\n                    _context10.next = 4;\n                    break;\n                  }\n                  return _context10.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 4:\n                  if (!this._storedError) {\n                    _context10.next = 6;\n                    break;\n                  }\n                  throw this._storedError;\n                case 6:\n                  chunk = this._readableStream.read();\n                  if (!(chunk === null)) {\n                    _context10.next = 10;\n                    break;\n                  }\n                  this._readCapability = (0, _util.createPromiseCapability)();\n                  return _context10.abrupt(\"return\", this.read());\n                case 10:\n                  this._loaded += chunk.length;\n                  if (this.onProgress) {\n                    this.onProgress({\n                      loaded: this._loaded\n                    });\n                  }\n                  buffer = new Uint8Array(chunk).buffer;\n                  return _context10.abrupt(\"return\", {\n                    value: buffer,\n                    done: false\n                  });\n                case 14:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }, _callee10, this);\n          }));\n          function read() {\n            return _read4.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n            return;\n          }\n          this._readableStream.destroy(reason);\n        }\n      }, {\n        key: \"_error\",\n        value: function _error(reason) {\n          this._storedError = reason;\n          this._readCapability.resolve();\n        }\n      }, {\n        key: \"_setReadableStream\",\n        value: function _setReadableStream(readableStream) {\n          var _this43 = this;\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", function () {\n            _this43._readCapability.resolve();\n          });\n          readableStream.on(\"end\", function () {\n            readableStream.destroy();\n            _this43._done = true;\n            _this43._readCapability.resolve();\n          });\n          readableStream.on(\"error\", function (reason) {\n            _this43._error(reason);\n          });\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n      }]);\n    }();\n    function createRequestOptions(parsedUrl, headers) {\n      return {\n        protocol: parsedUrl.protocol,\n        auth: parsedUrl.auth,\n        host: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.path,\n        method: \"GET\",\n        headers: headers\n      };\n    }\n    var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n      function PDFNodeStreamFullReader(stream) {\n        var _this44;\n        _classCallCheck(this, PDFNodeStreamFullReader);\n        _this44 = _callSuper(this, PDFNodeStreamFullReader, [stream]);\n        var handleResponse = function handleResponse(response) {\n          if (response.statusCode === 404) {\n            var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this44._url, \"\\\".\"));\n            _this44._storedError = error;\n            _this44._headersCapability.reject(error);\n            return;\n          }\n          _this44._headersCapability.resolve();\n          _this44._setReadableStream(response);\n          var getResponseHeader = function getResponseHeader(name) {\n            return _this44._readableStream.headers[name.toLowerCase()];\n          };\n          var _ref33 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: stream.isHttp,\n              rangeChunkSize: _this44._rangeChunkSize,\n              disableRange: _this44._disableRange\n            }),\n            allowRangeRequests = _ref33.allowRangeRequests,\n            suggestedLength = _ref33.suggestedLength;\n          _this44._isRangeSupported = allowRangeRequests;\n          _this44._contentLength = suggestedLength || _this44._contentLength;\n          _this44._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n        };\n        _this44._request = null;\n        if (_this44._url.protocol === \"http:\") {\n          _this44._request = http.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n        } else {\n          _this44._request = https.request(createRequestOptions(_this44._url, stream.httpHeaders), handleResponse);\n        }\n        _this44._request.on(\"error\", function (reason) {\n          _this44._storedError = reason;\n          _this44._headersCapability.reject(reason);\n        });\n        _this44._request.end();\n        return _this44;\n      }\n      _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n      return _createClass(PDFNodeStreamFullReader);\n    }(BaseFullReader);\n    var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n      function PDFNodeStreamRangeReader(stream, start, end) {\n        var _this45;\n        _classCallCheck(this, PDFNodeStreamRangeReader);\n        _this45 = _callSuper(this, PDFNodeStreamRangeReader, [stream]);\n        _this45._httpHeaders = {};\n        for (var property in stream.httpHeaders) {\n          var value = stream.httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          _this45._httpHeaders[property] = value;\n        }\n        _this45._httpHeaders.Range = \"bytes=\".concat(start, \"-\").concat(end - 1);\n        var handleResponse = function handleResponse(response) {\n          if (response.statusCode === 404) {\n            var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this45._url, \"\\\".\"));\n            _this45._storedError = error;\n            return;\n          }\n          _this45._setReadableStream(response);\n        };\n        _this45._request = null;\n        if (_this45._url.protocol === \"http:\") {\n          _this45._request = http.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n        } else {\n          _this45._request = https.request(createRequestOptions(_this45._url, _this45._httpHeaders), handleResponse);\n        }\n        _this45._request.on(\"error\", function (reason) {\n          _this45._storedError = reason;\n        });\n        _this45._request.end();\n        return _this45;\n      }\n      _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n      return _createClass(PDFNodeStreamRangeReader);\n    }(BaseRangeReader);\n    var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n      function PDFNodeStreamFsFullReader(stream) {\n        var _this46;\n        _classCallCheck(this, PDFNodeStreamFsFullReader);\n        _this46 = _callSuper(this, PDFNodeStreamFsFullReader, [stream]);\n        var path = decodeURIComponent(_this46._url.path);\n        if (fileUriRegex.test(_this46._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        fs.lstat(path, function (error, stat) {\n          if (error) {\n            if (error.code === \"ENOENT\") {\n              error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n            }\n            _this46._storedError = error;\n            _this46._headersCapability.reject(error);\n            return;\n          }\n          _this46._contentLength = stat.size;\n          _this46._setReadableStream(fs.createReadStream(path));\n          _this46._headersCapability.resolve();\n        });\n        return _this46;\n      }\n      _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n      return _createClass(PDFNodeStreamFsFullReader);\n    }(BaseFullReader);\n    var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n      function PDFNodeStreamFsRangeReader(stream, start, end) {\n        var _this47;\n        _classCallCheck(this, PDFNodeStreamFsRangeReader);\n        _this47 = _callSuper(this, PDFNodeStreamFsRangeReader, [stream]);\n        var path = decodeURIComponent(_this47._url.path);\n        if (fileUriRegex.test(_this47._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        _this47._setReadableStream(fs.createReadStream(path, {\n          start: start,\n          end: end - 1\n        }));\n        return _this47;\n      }\n      _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n      return _createClass(PDFNodeStreamFsRangeReader);\n    }(BaseRangeReader);\n    /***/\n  }), (/* 20 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.createResponseStatusError = createResponseStatusError;\n    exports.extractFilenameFromHeader = extractFilenameFromHeader;\n    exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n    exports.validateResponseStatus = validateResponseStatus;\n    var _util = __w_pdfjs_require__(2);\n    var _content_disposition = __w_pdfjs_require__(21);\n    function validateRangeRequestCapabilities(_ref34) {\n      var getResponseHeader = _ref34.getResponseHeader,\n        isHttp = _ref34.isHttp,\n        rangeChunkSize = _ref34.rangeChunkSize,\n        disableRange = _ref34.disableRange;\n      (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n      var returnValues = {\n        allowRangeRequests: false,\n        suggestedLength: undefined\n      };\n      var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n      if (!Number.isInteger(length)) {\n        return returnValues;\n      }\n      returnValues.suggestedLength = length;\n      if (length <= 2 * rangeChunkSize) {\n        return returnValues;\n      }\n      if (disableRange || !isHttp) {\n        return returnValues;\n      }\n      if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n        return returnValues;\n      }\n      var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n      if (contentEncoding !== \"identity\") {\n        return returnValues;\n      }\n      returnValues.allowRangeRequests = true;\n      return returnValues;\n    }\n    function extractFilenameFromHeader(getResponseHeader) {\n      var contentDisposition = getResponseHeader(\"Content-Disposition\");\n      if (contentDisposition) {\n        var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n        if (filename.includes(\"%\")) {\n          try {\n            filename = decodeURIComponent(filename);\n          } catch (ex) {}\n        }\n        if (/\\.pdf$/i.test(filename)) {\n          return filename;\n        }\n      }\n      return null;\n    }\n    function createResponseStatusError(status, url) {\n      if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n        return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n      }\n      return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n    }\n    function validateResponseStatus(status) {\n      return status === 200 || status === 206;\n    }\n\n    /***/\n  }), (/* 21 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n    function getFilenameFromContentDispositionHeader(contentDisposition) {\n      var needsEncodingFixup = true;\n      var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        var filename = rfc2616unquote(tmp);\n        filename = unescape(filename);\n        filename = rfc5987decode(filename);\n        filename = rfc2047decode(filename);\n        return fixupEncoding(filename);\n      }\n      tmp = rfc2231getparam(contentDisposition);\n      if (tmp) {\n        var _filename = rfc2047decode(tmp);\n        return fixupEncoding(_filename);\n      }\n      tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        var _filename2 = rfc2616unquote(tmp);\n        _filename2 = rfc2047decode(_filename2);\n        return fixupEncoding(_filename2);\n      }\n      function toParamRegExp(attributePattern, flags) {\n        return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n      }\n      function textdecode(encoding, value) {\n        if (encoding) {\n          if (!/^[\\x00-\\xFF]+$/.test(value)) {\n            return value;\n          }\n          try {\n            var decoder = new TextDecoder(encoding, {\n              fatal: true\n            });\n            var bytes = Array.from(value, function (ch) {\n              return ch.charCodeAt(0) & 0xff;\n            });\n            value = decoder.decode(new Uint8Array(bytes));\n            needsEncodingFixup = false;\n          } catch (e) {\n            if (/^utf-?8$/i.test(encoding)) {\n              try {\n                value = decodeURIComponent(escape(value));\n                needsEncodingFixup = false;\n              } catch (err) {}\n            }\n          }\n        }\n        return value;\n      }\n      function fixupEncoding(value) {\n        if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n          value = textdecode(\"utf-8\", value);\n          if (needsEncodingFixup) {\n            value = textdecode(\"iso-8859-1\", value);\n          }\n        }\n        return value;\n      }\n      function rfc2231getparam(contentDispositionStr) {\n        var matches = [];\n        var match;\n        var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n        while ((match = iter.exec(contentDispositionStr)) !== null) {\n          var _match = match,\n            _match2 = _slicedToArray(_match, 4),\n            n = _match2[1],\n            quot = _match2[2],\n            part = _match2[3];\n          n = parseInt(n, 10);\n          if (n in matches) {\n            if (n === 0) {\n              break;\n            }\n            continue;\n          }\n          matches[n] = [quot, part];\n        }\n        var parts = [];\n        for (var _n = 0; _n < matches.length; ++_n) {\n          if (!(_n in matches)) {\n            break;\n          }\n          var _matches$_n = _slicedToArray(matches[_n], 2),\n            _quot = _matches$_n[0],\n            _part = _matches$_n[1];\n          _part = rfc2616unquote(_part);\n          if (_quot) {\n            _part = unescape(_part);\n            if (_n === 0) {\n              _part = rfc5987decode(_part);\n            }\n          }\n          parts.push(_part);\n        }\n        return parts.join(\"\");\n      }\n      function rfc2616unquote(value) {\n        if (value.startsWith('\"')) {\n          var parts = value.slice(1).split('\\\\\"');\n          for (var i = 0; i < parts.length; ++i) {\n            var quotindex = parts[i].indexOf('\"');\n            if (quotindex !== -1) {\n              parts[i] = parts[i].slice(0, quotindex);\n              parts.length = i + 1;\n            }\n            parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n          }\n          value = parts.join('\"');\n        }\n        return value;\n      }\n      function rfc5987decode(extvalue) {\n        var encodingend = extvalue.indexOf(\"'\");\n        if (encodingend === -1) {\n          return extvalue;\n        }\n        var encoding = extvalue.slice(0, encodingend);\n        var langvalue = extvalue.slice(encodingend + 1);\n        var value = langvalue.replace(/^[^']*'/, \"\");\n        return textdecode(encoding, value);\n      }\n      function rfc2047decode(value) {\n        if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n          return value;\n        }\n        return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n          if (encoding === \"q\" || encoding === \"Q\") {\n            text = text.replace(/_/g, \" \");\n            text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n              return String.fromCharCode(parseInt(hex, 16));\n            });\n            return textdecode(charset, text);\n          }\n          try {\n            text = atob(text);\n          } catch (e) {}\n          return textdecode(charset, text);\n        });\n      }\n      return \"\";\n    }\n\n    /***/\n  }), (/* 22 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNetworkStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    var OK_RESPONSE = 200;\n    var PARTIAL_CONTENT_RESPONSE = 206;\n    function getArrayBuffer(xhr) {\n      var data = xhr.response;\n      if (typeof data !== \"string\") {\n        return data;\n      }\n      var array = (0, _util.stringToBytes)(data);\n      return array.buffer;\n    }\n    var NetworkManager = /*#__PURE__*/function () {\n      function NetworkManager(url, args) {\n        _classCallCheck(this, NetworkManager);\n        this.url = url;\n        args = args || {};\n        this.isHttp = /^https?:/i.test(url);\n        this.httpHeaders = this.isHttp && args.httpHeaders || {};\n        this.withCredentials = args.withCredentials || false;\n        this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n          return new XMLHttpRequest();\n        };\n        this.currXhrId = 0;\n        this.pendingRequests = Object.create(null);\n      }\n      return _createClass(NetworkManager, [{\n        key: \"requestRange\",\n        value: function requestRange(begin, end, listeners) {\n          var args = {\n            begin: begin,\n            end: end\n          };\n          for (var prop in listeners) {\n            args[prop] = listeners[prop];\n          }\n          return this.request(args);\n        }\n      }, {\n        key: \"requestFull\",\n        value: function requestFull(listeners) {\n          return this.request(listeners);\n        }\n      }, {\n        key: \"request\",\n        value: function request(args) {\n          var xhr = this.getXhr();\n          var xhrId = this.currXhrId++;\n          var pendingRequest = this.pendingRequests[xhrId] = {\n            xhr: xhr\n          };\n          xhr.open(\"GET\", this.url);\n          xhr.withCredentials = this.withCredentials;\n          for (var property in this.httpHeaders) {\n            var value = this.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            xhr.setRequestHeader(property, value);\n          }\n          if (this.isHttp && \"begin\" in args && \"end\" in args) {\n            xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n          } else {\n            pendingRequest.expectedStatus = OK_RESPONSE;\n          }\n          xhr.responseType = \"arraybuffer\";\n          if (args.onError) {\n            xhr.onerror = function (evt) {\n              args.onError(xhr.status);\n            };\n          }\n          xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n          xhr.onprogress = this.onProgress.bind(this, xhrId);\n          pendingRequest.onHeadersReceived = args.onHeadersReceived;\n          pendingRequest.onDone = args.onDone;\n          pendingRequest.onError = args.onError;\n          pendingRequest.onProgress = args.onProgress;\n          xhr.send(null);\n          return xhrId;\n        }\n      }, {\n        key: \"onProgress\",\n        value: function onProgress(xhrId, evt) {\n          var pendingRequest = this.pendingRequests[xhrId];\n          if (!pendingRequest) {\n            return;\n          }\n          if (pendingRequest.onProgress) {\n            pendingRequest.onProgress(evt);\n          }\n        }\n      }, {\n        key: \"onStateChange\",\n        value: function onStateChange(xhrId, evt) {\n          var pendingRequest = this.pendingRequests[xhrId];\n          if (!pendingRequest) {\n            return;\n          }\n          var xhr = pendingRequest.xhr;\n          if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n            pendingRequest.onHeadersReceived();\n            delete pendingRequest.onHeadersReceived;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          if (!(xhrId in this.pendingRequests)) {\n            return;\n          }\n          delete this.pendingRequests[xhrId];\n          if (xhr.status === 0 && this.isHttp) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n            return;\n          }\n          var xhrStatus = xhr.status || OK_RESPONSE;\n          var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n          if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n            return;\n          }\n          var chunk = getArrayBuffer(xhr);\n          if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n            var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n            var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n            pendingRequest.onDone({\n              begin: parseInt(matches[1], 10),\n              chunk: chunk\n            });\n          } else if (chunk) {\n            pendingRequest.onDone({\n              begin: 0,\n              chunk: chunk\n            });\n          } else if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n        }\n      }, {\n        key: \"hasPendingRequests\",\n        value: function hasPendingRequests() {\n          for (var xhrId in this.pendingRequests) {\n            return true;\n          }\n          return false;\n        }\n      }, {\n        key: \"getRequestXhr\",\n        value: function getRequestXhr(xhrId) {\n          return this.pendingRequests[xhrId].xhr;\n        }\n      }, {\n        key: \"isPendingRequest\",\n        value: function isPendingRequest(xhrId) {\n          return xhrId in this.pendingRequests;\n        }\n      }, {\n        key: \"abortAllRequests\",\n        value: function abortAllRequests() {\n          for (var xhrId in this.pendingRequests) {\n            this.abortRequest(xhrId | 0);\n          }\n        }\n      }, {\n        key: \"abortRequest\",\n        value: function abortRequest(xhrId) {\n          var xhr = this.pendingRequests[xhrId].xhr;\n          delete this.pendingRequests[xhrId];\n          xhr.abort();\n        }\n      }]);\n    }();\n    var PDFNetworkStream = /*#__PURE__*/function () {\n      function PDFNetworkStream(source) {\n        _classCallCheck(this, PDFNetworkStream);\n        this._source = source;\n        this._manager = new NetworkManager(source.url, {\n          httpHeaders: source.httpHeaders,\n          withCredentials: source.withCredentials\n        });\n        this._rangeChunkSize = source.rangeChunkSize;\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      return _createClass(PDFNetworkStream, [{\n        key: \"_onRangeRequestReaderClosed\",\n        value: function _onRangeRequestReaderClosed(reader) {\n          var i = this._rangeRequestReaders.indexOf(reader);\n          if (i >= 0) {\n            this._rangeRequestReaders.splice(i, 1);\n          }\n        }\n      }, {\n        key: \"getFullReader\",\n        value: function getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n          return this._fullRequestReader;\n        }\n      }, {\n        key: \"getRangeReader\",\n        value: function getRangeReader(begin, end) {\n          var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n          reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n          this._rangeRequestReaders.push(reader);\n          return reader;\n        }\n      }, {\n        key: \"cancelAllRequests\",\n        value: function cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          var readers = this._rangeRequestReaders.slice(0);\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n      }]);\n    }();\n    exports.PDFNetworkStream = PDFNetworkStream;\n    var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n      function PDFNetworkStreamFullRequestReader(manager, source) {\n        _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n        this._manager = manager;\n        var args = {\n          onHeadersReceived: this._onHeadersReceived.bind(this),\n          onDone: this._onDone.bind(this),\n          onError: this._onError.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._url = source.url;\n        this._fullRequestId = manager.requestFull(args);\n        this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._contentLength = source.length;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = false;\n        this._isRangeSupported = false;\n        this._cachedChunks = [];\n        this._requests = [];\n        this._done = false;\n        this._storedError = undefined;\n        this._filename = null;\n        this.onProgress = null;\n      }\n      return _createClass(PDFNetworkStreamFullRequestReader, [{\n        key: \"_onHeadersReceived\",\n        value: function _onHeadersReceived() {\n          var fullRequestXhrId = this._fullRequestId;\n          var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n          var getResponseHeader = function getResponseHeader(name) {\n            return fullRequestXhr.getResponseHeader(name);\n          };\n          var _ref35 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            }),\n            allowRangeRequests = _ref35.allowRangeRequests,\n            suggestedLength = _ref35.suggestedLength;\n          if (allowRangeRequests) {\n            this._isRangeSupported = true;\n          }\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          if (this._isRangeSupported) {\n            this._manager.abortRequest(fullRequestXhrId);\n          }\n          this._headersReceivedCapability.resolve();\n        }\n      }, {\n        key: \"_onDone\",\n        value: function _onDone(args) {\n          if (args) {\n            if (this._requests.length > 0) {\n              var requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: args.chunk,\n                done: false\n              });\n            } else {\n              this._cachedChunks.push(args.chunk);\n            }\n          }\n          this._done = true;\n          if (this._cachedChunks.length > 0) {\n            return;\n          }\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n        }\n      }, {\n        key: \"_onError\",\n        value: function _onError(status) {\n          var url = this._url;\n          var exception = (0, _network_utils.createResponseStatusError)(status, url);\n          this._storedError = exception;\n          this._headersReceivedCapability.reject(exception);\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.reject(exception);\n          });\n          this._requests = [];\n          this._cachedChunks = [];\n        }\n      }, {\n        key: \"_onProgress\",\n        value: function _onProgress(data) {\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: data.loaded,\n              total: data.lengthComputable ? data.total : this._contentLength\n            });\n          }\n        }\n      }, {\n        key: \"filename\",\n        get: function get() {\n          return this._filename;\n        }\n      }, {\n        key: \"isRangeSupported\",\n        get: function get() {\n          return this._isRangeSupported;\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._isStreamingSupported;\n        }\n      }, {\n        key: \"contentLength\",\n        get: function get() {\n          return this._contentLength;\n        }\n      }, {\n        key: \"headersReady\",\n        get: function get() {\n          return this._headersReceivedCapability.promise;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n            var chunk, requestCapability;\n            return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n              while (1) switch (_context11.prev = _context11.next) {\n                case 0:\n                  if (!this._storedError) {\n                    _context11.next = 2;\n                    break;\n                  }\n                  throw this._storedError;\n                case 2:\n                  if (!(this._cachedChunks.length > 0)) {\n                    _context11.next = 5;\n                    break;\n                  }\n                  chunk = this._cachedChunks.shift();\n                  return _context11.abrupt(\"return\", {\n                    value: chunk,\n                    done: false\n                  });\n                case 5:\n                  if (!this._done) {\n                    _context11.next = 7;\n                    break;\n                  }\n                  return _context11.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 7:\n                  requestCapability = (0, _util.createPromiseCapability)();\n                  this._requests.push(requestCapability);\n                  return _context11.abrupt(\"return\", requestCapability.promise);\n                case 10:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }, _callee11, this);\n          }));\n          function read() {\n            return _read5.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          this._done = true;\n          this._headersReceivedCapability.reject(reason);\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n          if (this._manager.isPendingRequest(this._fullRequestId)) {\n            this._manager.abortRequest(this._fullRequestId);\n          }\n          this._fullRequestReader = null;\n        }\n      }]);\n    }();\n    var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n      function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n        _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n        this._manager = manager;\n        var args = {\n          onDone: this._onDone.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._requestId = manager.requestRange(begin, end, args);\n        this._requests = [];\n        this._queuedChunk = null;\n        this._done = false;\n        this.onProgress = null;\n        this.onClosed = null;\n      }\n      return _createClass(PDFNetworkStreamRangeRequestReader, [{\n        key: \"_close\",\n        value: function _close() {\n          if (this.onClosed) {\n            this.onClosed(this);\n          }\n        }\n      }, {\n        key: \"_onDone\",\n        value: function _onDone(data) {\n          var chunk = data.chunk;\n          if (this._requests.length > 0) {\n            var requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunk = chunk;\n          }\n          this._done = true;\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n          this._close();\n        }\n      }, {\n        key: \"_onProgress\",\n        value: function _onProgress(evt) {\n          if (!this.isStreamingSupported && this.onProgress) {\n            this.onProgress({\n              loaded: evt.loaded\n            });\n          }\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return false;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n            var chunk, requestCapability;\n            return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n              while (1) switch (_context12.prev = _context12.next) {\n                case 0:\n                  if (!(this._queuedChunk !== null)) {\n                    _context12.next = 4;\n                    break;\n                  }\n                  chunk = this._queuedChunk;\n                  this._queuedChunk = null;\n                  return _context12.abrupt(\"return\", {\n                    value: chunk,\n                    done: false\n                  });\n                case 4:\n                  if (!this._done) {\n                    _context12.next = 6;\n                    break;\n                  }\n                  return _context12.abrupt(\"return\", {\n                    value: undefined,\n                    done: true\n                  });\n                case 6:\n                  requestCapability = (0, _util.createPromiseCapability)();\n                  this._requests.push(requestCapability);\n                  return _context12.abrupt(\"return\", requestCapability.promise);\n                case 9:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }, _callee12, this);\n          }));\n          function read() {\n            return _read6.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          this._done = true;\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n          if (this._manager.isPendingRequest(this._requestId)) {\n            this._manager.abortRequest(this._requestId);\n          }\n          this._close();\n        }\n      }]);\n    }();\n    /***/\n  }), (/* 23 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFFetchStream = void 0;\n    var _util = __w_pdfjs_require__(2);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    function createFetchOptions(headers, withCredentials, abortController) {\n      return {\n        method: \"GET\",\n        headers: headers,\n        signal: abortController && abortController.signal,\n        mode: \"cors\",\n        credentials: withCredentials ? \"include\" : \"same-origin\",\n        redirect: \"follow\"\n      };\n    }\n    function createHeaders(httpHeaders) {\n      var headers = new Headers();\n      for (var property in httpHeaders) {\n        var value = httpHeaders[property];\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n        headers.append(property, value);\n      }\n      return headers;\n    }\n    var PDFFetchStream = /*#__PURE__*/function () {\n      function PDFFetchStream(source) {\n        _classCallCheck(this, PDFFetchStream);\n        this.source = source;\n        this.isHttp = /^https?:/i.test(source.url);\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      return _createClass(PDFFetchStream, [{\n        key: \"_progressiveDataLength\",\n        get: function get() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n      }, {\n        key: \"getFullReader\",\n        value: function getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFFetchStreamReader(this);\n          return this._fullRequestReader;\n        }\n      }, {\n        key: \"getRangeReader\",\n        value: function getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          var reader = new PDFFetchStreamRangeReader(this, begin, end);\n          this._rangeRequestReaders.push(reader);\n          return reader;\n        }\n      }, {\n        key: \"cancelAllRequests\",\n        value: function cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          var readers = this._rangeRequestReaders.slice(0);\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n      }]);\n    }();\n    exports.PDFFetchStream = PDFFetchStream;\n    var PDFFetchStreamReader = /*#__PURE__*/function () {\n      function PDFFetchStreamReader(stream) {\n        var _this48 = this;\n        _classCallCheck(this, PDFFetchStreamReader);\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        this._filename = null;\n        var source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._contentLength = source.length;\n        this._headersCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._headers = createHeaders(this._stream.httpHeaders);\n        var url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          _this48._reader = response.body.getReader();\n          _this48._headersCapability.resolve();\n          var getResponseHeader = function getResponseHeader(name) {\n            return response.headers.get(name);\n          };\n          var _ref36 = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader: getResponseHeader,\n              isHttp: _this48._stream.isHttp,\n              rangeChunkSize: _this48._rangeChunkSize,\n              disableRange: _this48._disableRange\n            }),\n            allowRangeRequests = _ref36.allowRangeRequests,\n            suggestedLength = _ref36.suggestedLength;\n          _this48._isRangeSupported = allowRangeRequests;\n          _this48._contentLength = suggestedLength || _this48._contentLength;\n          _this48._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          if (!_this48._isStreamingSupported && _this48._isRangeSupported) {\n            _this48.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n          }\n        }).catch(this._headersCapability.reject);\n        this.onProgress = null;\n      }\n      return _createClass(PDFFetchStreamReader, [{\n        key: \"headersReady\",\n        get: function get() {\n          return this._headersCapability.promise;\n        }\n      }, {\n        key: \"filename\",\n        get: function get() {\n          return this._filename;\n        }\n      }, {\n        key: \"contentLength\",\n        get: function get() {\n          return this._contentLength;\n        }\n      }, {\n        key: \"isRangeSupported\",\n        get: function get() {\n          return this._isRangeSupported;\n        }\n      }, {\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._isStreamingSupported;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n            var _yield$this$_reader$r, value, done, buffer;\n            return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n              while (1) switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return this._headersCapability.promise;\n                case 2:\n                  _context13.next = 4;\n                  return this._reader.read();\n                case 4:\n                  _yield$this$_reader$r = _context13.sent;\n                  value = _yield$this$_reader$r.value;\n                  done = _yield$this$_reader$r.done;\n                  if (!done) {\n                    _context13.next = 9;\n                    break;\n                  }\n                  return _context13.abrupt(\"return\", {\n                    value: value,\n                    done: done\n                  });\n                case 9:\n                  this._loaded += value.byteLength;\n                  if (this.onProgress) {\n                    this.onProgress({\n                      loaded: this._loaded,\n                      total: this._contentLength\n                    });\n                  }\n                  buffer = new Uint8Array(value).buffer;\n                  return _context13.abrupt(\"return\", {\n                    value: buffer,\n                    done: false\n                  });\n                case 13:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }, _callee13, this);\n          }));\n          function read() {\n            return _read7.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n      }]);\n    }();\n    var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n      function PDFFetchStreamRangeReader(stream, begin, end) {\n        var _this49 = this;\n        _classCallCheck(this, PDFFetchStreamRangeReader);\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        var source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._isStreamingSupported = !source.disableStream;\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._headers = createHeaders(this._stream.httpHeaders);\n        this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n        var url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          _this49._readCapability.resolve();\n          _this49._reader = response.body.getReader();\n        });\n        this.onProgress = null;\n      }\n      return _createClass(PDFFetchStreamRangeReader, [{\n        key: \"isStreamingSupported\",\n        get: function get() {\n          return this._isStreamingSupported;\n        }\n      }, {\n        key: \"read\",\n        value: function () {\n          var _read8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n            var _yield$this$_reader$r2, value, done, buffer;\n            return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n              while (1) switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return this._readCapability.promise;\n                case 2:\n                  _context14.next = 4;\n                  return this._reader.read();\n                case 4:\n                  _yield$this$_reader$r2 = _context14.sent;\n                  value = _yield$this$_reader$r2.value;\n                  done = _yield$this$_reader$r2.done;\n                  if (!done) {\n                    _context14.next = 9;\n                    break;\n                  }\n                  return _context14.abrupt(\"return\", {\n                    value: value,\n                    done: done\n                  });\n                case 9:\n                  this._loaded += value.byteLength;\n                  if (this.onProgress) {\n                    this.onProgress({\n                      loaded: this._loaded\n                    });\n                  }\n                  buffer = new Uint8Array(value).buffer;\n                  return _context14.abrupt(\"return\", {\n                    value: buffer,\n                    done: false\n                  });\n                case 13:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }, _callee14, this);\n          }));\n          function read() {\n            return _read8.apply(this, arguments);\n          }\n          return read;\n        }()\n      }, {\n        key: \"cancel\",\n        value: function cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n      }]);\n    }();\n    /***/\n  }\n  /******/)]);\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","_typeof","module","define","amd","pdfjsLib","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_display_utils","_api","_util","_annotation_layer","_api_compatibility","_worker_options","_text_layer","_svg","pdfjsVersion","pdfjsBuild","_w_pdfjs_require__","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","DEFAULT_LINK_REL","SVG_NS","DOMCanvasFactory","_classCallCheck","_createClass","width","height","Error","canvas","document","createElement","context","getContext","reset","canvasAndContext","destroy","DOMCMapReaderFactory","_ref","_ref$baseUrl","baseUrl","_ref$isCompressed","isCompressed","_fetch","fetch","_x","apply","arguments","toString","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_ref2","_this","compressionType","wrap","_callee2$","_context2","prev","next","CMapCompressionType","BINARY","NONE","baseURI","abrupt","then","_ref4","_callee","response","cMapData","_callee$","_context","ok","statusText","t0","Uint8Array","arrayBuffer","t1","sent","t2","stringToBytes","text","t3","stop","_x3","catch","reason","concat","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","responseText","send","_x2","DOMSVGFactory","assert","svg","createElementNS","setAttribute","type","PageViewport","_ref5","viewBox","scale","rotation","_ref5$offsetX","offsetX","_ref5$offsetY","offsetY","_ref5$dontFlip","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","Math","abs","transform","clone","_ref6","length","undefined","_ref6$scale","_ref6$rotation","_ref6$offsetX","_ref6$offsetY","_ref6$dontFlip","slice","convertToViewportPoint","x","y","Util","applyTransform","convertToViewportRectangle","rect","topLeft","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","_util$BaseException","msg","_this2","_callSuper","_inherits","BaseException","LinkTarget","SELF","BLANK","PARENT","TOP","addLinkAttributes","link","_ref7","target","rel","_ref7$enabled","enabled","urlNullRemoved","removeNullCharacters","href","title","onclick","targetStr","getFilenameFromUrl","anchor","indexOf","query","end","min","substring","lastIndexOf","StatTimer","started","times","time","warn","Date","now","timeEnd","push","start","outBuf","longest","_iterator","_createForOfIteratorHelper","_step","done","err","e","f","_iterator2","_step2","duration","padEnd","join","Response","ReadableStream","_ref8","URL","protocol","ex","loadScript","src","script","onload","onerror","head","documentElement","appendChild","deprecated","details","console","log","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","exec","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","UTC","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","unreachable","cond","isSameOrigin","otherUrl","base","origin","other","_isValidProtocol","createValidAbsoluteUrl","absoluteUrl","shadow","obj","prop","configurable","writable","BaseExceptionClosure","message","constructor","PasswordException","_BaseException","code","_this3","UnknownErrorException","_BaseException2","_this4","InvalidPDFException","_BaseException3","MissingPDFException","_BaseException4","UnexpectedResponseException","_BaseException5","_this5","FormatError","_BaseException6","AbortException","_BaseException7","NullCharactersRegExp","str","replace","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","fromCharCode","strBuf","chunkEnd","chunk","subarray","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","rgbBuf","makeCssRgb","g","b","m1","m2","xt","yt","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","sqrt","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","PDFStringTranslateTable","stringToPDFString","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","isBool","isNum","isArrayBuffer","isArrayEqual","arr1","arr2","every","element","index","createPromiseCapability","capability","isSettled","promise","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","ii","b1","b2","b3","d1","d2","d3","d4","_is_node","process","versions","nw","electron","_font_loader","_canvas","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","rangeTransport","worker","window","location","pdfBytes","isNaN","rangeChunkSize","CMapReaderFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","fromPort","_worker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","all","_ref9","_ref10","_slicedToArray","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","_this6","transportDestroyed","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","_iterator3","_step3","onDataProgress","loaded","total","_this7","_iterator4","_step4","onDataProgressiveRead","_this8","_iterator5","_step5","onDataProgressiveDone","_this9","_iterator6","_step6","transportReady","requestDataRange","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","getViewport","_ref11","_ref11$rotation","_ref11$offsetX","_ref11$offsetY","_ref11$dontFlip","getAnnotations","_ref12","_ref12$intent","intent","annotationsPromise","annotationsIntent","render","_ref13","_this10","canvasContext","viewport","_ref13$intent","_ref13$enableWebGL","enableWebGL","_ref13$renderInteract","renderInteractiveForms","_ref13$transform","_ref13$imageLayer","imageLayer","_ref13$canvasFactory","canvasFactory","_ref13$background","background","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","internalRenderTask","splice","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","_ref14","_ref14$normalizeWhite","normalizeWhitespace","_ref14$disableCombine","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","getTextContent","readableStream","pump","reader","read","_ref15","_textContent$items","assign","styles","_toConsumableArray","getReader","_destroy","_this11","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","resetStats","_this12","some","_startRenderPage","_renderPageChunk","operatorListChunk","args","_this13","streamReader","_ref16","_ref17","_this14","_ref17$force","setTimeout","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","transfers","_this15","cloneValue","cloned","has","transferable","includes","byteOffset","Array","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","WeakMap","addEventListener","removeEventListener","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","_ref18","_callee3","_callee3$","_context3","eval","createCDNWrapper","wrapper","_ref19","_ref19$name","_ref19$port","_ref19$verbosity","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","_this16","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","_this17","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","_this18","page","terminated","cancelAllRequests","_this19","sink","getFullReader","evt","onPull","_ref20","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_ref21","_ref22","_numPages","exception","updatePassword","_data","exportedData","exportedError","fontRegistry","FontInspector","registerFont","fontAdded","FontFaceObject","finally","_data2","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","_ref23","featureId","_this20","_this21","results","metadata","Metadata","contentDispositionFilename","filename","_this22","cleanupSuccessful","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","_ref24","_ref24$useRequestAnim","_ref24$pdfBug","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","_this$params","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","_this23","requestAnimationFrame","_next2","_callee4","_callee4$","_context4","executeOperatorList","version","build","BaseFontLoader","_ref25","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","remove","_bind","_callee5","_this24","_callee5$","_context5","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_x4","supported","rules","fontsToLoad","_BaseFontLoader","GenericFontLoader","_this25","loadingContext","requests","nextRequestId","loadTestFontId","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","getImageData","_loadTestFont","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","removeChild","translatedData","_ref26","_ref26$isEvalSupporte","_ref26$disableFontFac","_ref26$ignoreErrors","_ref26$onUnsupportedF","_ref26$fontRegistry","compiledGlyphs","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","compatibilityParams","checkFontFace","freeze","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","getCurrentTransform","getCurrentTransformInverse","ad_bc","bc_ad","ctxSave","old","ctxRestore","pop","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","cos","sinValue","sin","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","j","j0","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","sum","steps","Int32Array","outlines","coords","p0","pp","step","drawOutline","beginPath","k","kk","ll","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","scaleX","scaleY","isEnabled","composed","layer","drawImage","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","_ref27","_ref27$transparency","_ref27$background","fillRect","transparentCanvas","compositeCtx","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","_iterator7","_step7","depObjId","objsPool","startsWith","CanvasGraphics_endDrawing","endSMaskGroup","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","CanvasGraphics_setLineJoin","CanvasGraphics_setMiterLimit","limit","CanvasGraphics_setDash","dashArray","dashPhase","flatness","CanvasGraphics_setGState","states","state","suspendSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","clearRect","resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","CanvasGraphics_closeStroke","CanvasGraphics_fill","isPatternFill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","path","addToPath","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","_this$cachedCanvases$","CanvasGraphics_showText","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","charWidth","CanvasGraphics_showType3Text","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","_this26","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","floor","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","compiled","maskCanvas","CanvasGraphics_paintImageMaskXObjectRepeat","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","w","h","CanvasGraphics_paintInlineImageXObject","widthScale","heightScale","imgToPaint","tmpCanvas","HTMLElement","tmpCtx","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","getCanvasPosition","appendImage","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_paintXObject","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","CanvasGraphics_beginMarkedContentProps","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","op","ShadingIRs","applyBoundingBox","Path2D","region","RadialAxial","fromIR","RadialAxial_fromIR","raw","colorStops","r1","RadialAxial_getPattern","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","drawFigures","Mesh","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","Dummy_fromIR","Dummy_fromIR_getPattern","shadingIR","TilingPatternClosure","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","_this27","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","_this28","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","_deleteStreamController2","_callee6","_callee6$","_context6","allSettled","_x5","_xml_parser","_repair","parser","SimpleXMLParser","xmlDocument","parseFromString","_metadataMap","Map","_parse","codes","chars","rdf","nodeName","toLowerCase","firstChild","nextSibling","hasChildNodes","children","childNodes","jj","trim","getAll","_iterator8","_step8","_step8$value","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","isWhitespaceString","XMLParserBase","_resolveEntities","_this29","entity","onResolveEntity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_XMLParserBase","_this30","_currentFragment","_stack","_errorCode","_this$_currentFragmen","_superPropGet","node","lastElement","_this31","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","_progressiveDataLength","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_iterator9","_step9","_requests","_headersReady","requestCapability","_read","_callee7","_callee7$","_context7","_end","_queuedChunk","requestsCapability","_read2","_callee8","_callee8$","_context8","_ref28","_ref28$enable","_enabled","WebGLUtils","tryInitGL","_ref29","_ref30","WebGLUtilsClosure","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","initSmaskGL","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","scaleLocation","offsetLocation","colorLocation","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","_createPopup","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","_AnnotationElement","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","_this32","getDestinationHash","navigateTo","_this33","getAnchorUrl","executeNamedAction","_AnnotationElement2","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","_AnnotationElement3","_WidgetAnnotationElem","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","fieldName","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","_WidgetAnnotationElem2","_WidgetAnnotationElem3","buttonValue","_LinkAnnotationElemen","_WidgetAnnotationElem4","selectElement","combo","options","multiSelect","multiple","_iterator10","_step10","option","optionElement","displayValue","exportValue","_AnnotationElement4","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","BACKGROUND_ENLIGHT","hideElement","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","removeAttribute","zIndex","unpin","_AnnotationElement5","_AnnotationElement6","lineCoordinates","append","_AnnotationElement7","square","_AnnotationElement8","circle","_AnnotationElement9","_this34","containerClassName","svgElementName","_iterator11","vertices","_step11","coordinate","polyline","_PolylineAnnotationEl","_this35","_AnnotationElement10","_AnnotationElement11","_this36","_iterator12","inkLists","_step12","inkList","_iterator13","_step13","_AnnotationElement12","_AnnotationElement13","_AnnotationElement14","_AnnotationElement15","_AnnotationElement16","_AnnotationElement17","_this37","_this37$data$file","file","eventBus","dispatch","_download","downloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","_iterator14","annotations","_step14","_i6","_sortedAnnotations","update","_iterator15","_step15","renderTextLayer","renderTextLayerClosure","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","isAllWhitespace","test","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","expandBounds","divProperties","Float64Array","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","TextLayerRenderTask","_ref31","_this38","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","TextLayer_cancel","_processItems","styleCache","len","_textDiv$style","_this$_layoutTextCtx$","_render","TextLayer_render","timeout","_this39","mozOpaque","textItems","textStyles","_ref32","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","SVGGraphics","opListToTree","opList","opTree","_iterator16","_step16","opListElement","fn","pf","toFixed","pm","acos","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","Buffer","from","output","maxBlockLength","deflateBlocks","idat","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","_this40","_iterator17","_step17","_loop","getSVG","_this41","svgElement","convertOpList","operatorIdMapping","_iterator18","_step18","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","_iterator19","_step19","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","_args$","tilingId","_util$Util$applyTrans","_util$Util$applyTrans2","tx0","ty0","_util$Util$applyTrans3","_util$Util$applyTrans4","tx1","ty1","_util$Util$singularVa","_util$Util$singularVa2","xscale","yscale","txstep","tystep","tiling","_util$Util","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","_iterator20","_step20","colorStop","_iterator21","_step21","getAttributeNS","clipId","clipPath","clipElement","cloneNode","_iterator22","_step22","_step22$value","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_read3","_callee9","_callee9$","_context9","_error","_setReadableStream","_this42","BaseRangeReader","_read4","_callee10","_callee10$","_context10","_this43","createRequestOptions","headers","auth","hostname","method","_BaseFullReader","_this44","handleResponse","statusCode","getResponseHeader","_ref33","validateRangeRequestCapabilities","allowRangeRequests","suggestedLength","extractFilenameFromHeader","_request","_BaseRangeReader","_this45","_httpHeaders","Range","_BaseFullReader2","_this46","lstat","stat","createReadStream","_BaseRangeReader2","_this47","_content_disposition","_ref34","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","contentDispositionStr","match","iter","_match","_match2","quot","part","parts","_matches$_n","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","array","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_ref35","lengthComputable","_read5","_callee11","_callee11$","_context11","_requestId","_close","_read6","_callee12","_callee12$","_context12","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_this48","_withCredentials","AbortController","_abortController","_headers","_ref36","_read7","_callee13","_yield$this$_reader$r","_callee13$","_context13","_this49","_read8","_callee14","_yield$this$_reader$r2","_callee14$","_context14"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !process.versions.electron;\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}