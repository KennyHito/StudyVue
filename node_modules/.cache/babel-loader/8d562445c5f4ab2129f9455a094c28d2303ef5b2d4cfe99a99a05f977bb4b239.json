{"ast":null,"code":"// 引入其他组件\nimport MoneyInput from '@/components/MoneyInput.vue';\nimport Nav_Bar from '@/components/MyNavBar.vue';\nexport default {\n  components: {\n    MoneyInput: MoneyInput,\n    Nav_Bar: Nav_Bar\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.moneyPlaceholder = \"1、你好,这里的内容来源于父组件传给子组件的!\";\n  },\n  data: function data() {\n    return {\n      nav: {\n        title: \"测试_1\",\n        leftButtonText: \"\",\n        rightButtonText: \"\"\n      },\n      date: new Date(),\n      currData: [2, 4, 3, 13, 53, 23, 56, 99, 37],\n      selectedOption: \"1\",\n      moneyPlaceholder: \"\"\n    };\n  },\n  methods: {\n    handleLeftClick: function handleLeftClick() {\n      this.$router.back();\n    },\n    handleRightClick: function handleRightClick() {}\n  },\n  computed: {\n    formattedDate: function formattedDate() {\n      var dateNum = \"20240910\";\n      var date = new Date(dateNum.substring(0, 4), dateNum.substring(4, 6) - 1, dateNum.substring(6, 8));\n      return new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit'\n      }).format(date);\n    }\n  }\n};","map":{"version":3,"names":["MoneyInput","Nav_Bar","components","created","mounted","moneyPlaceholder","data","nav","title","leftButtonText","rightButtonText","date","Date","currData","selectedOption","methods","handleLeftClick","$router","back","handleRightClick","computed","formattedDate","dateNum","substring","Intl","DateTimeFormat","year","month","day","format"],"sources":["src/views/TestPage/Test1.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 子组件导航栏 -->\n    <Nav_Bar :navBarTitle=\"nav.title\" :navBarLeftText=\"nav.leftButtonText\" @leftClick=\"handleLeftClick\"\n      :navBarRightText=\"nav.rightButtonText\" @rightClick=\"handleRightClick\" />\n    <div class=\"container\">\n\n      <!-- 子组件MoneyInput -->\n      <MoneyInput :placeholderText=\"moneyPlaceholder\" />\n\n      <div>2、日期字符串转年月日形式: {{ formattedDate }}</div>\n      <div>3、全局配置的属性: {{ $apiBaseUrl }}</div>\n      <div>\n        <van-radio-group class=\"radio-group-style\" v-model=\"selectedOption\">\n          4、请选择性别：\n          <van-radio name=\"1\">男</van-radio>\n          <van-radio name=\"2\">女</van-radio>\n        </van-radio-group>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\n// 引入其他组件\nimport MoneyInput from '@/components/MoneyInput.vue'\nimport Nav_Bar from '@/components/MyNavBar.vue';\n\nexport default {\n  components: {\n    MoneyInput,\n    Nav_Bar\n  },\n  created() {\n\n  },\n  mounted() {\n    this.moneyPlaceholder = \"1、你好,这里的内容来源于父组件传给子组件的!\";\n  },\n  data() {\n    return {\n      nav: {\n        title: \"测试_1\",\n        leftButtonText: \"\",\n        rightButtonText: \"\"\n      },\n      date: new Date(),\n      currData: [2, 4, 3, 13, 53, 23, 56, 99, 37],\n      selectedOption: \"1\",\n      moneyPlaceholder: \"\",\n    };\n  },\n  methods: {\n    handleLeftClick() {\n      this.$router.back();\n    },\n    handleRightClick() {\n\n    },\n  },\n  computed: {\n    formattedDate() {\n      let dateNum = \"20240910\";\n      const date = new Date(\n        dateNum.substring(0, 4),\n        dateNum.substring(4, 6) - 1,\n        dateNum.substring(6, 8)\n      );\n      return new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit'\n      }).format(date);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  padding: 10px;\n}\n\n.radio-group-style {\n  display: flex;\n  margin-top: 10px;\n}\n</style>"],"mappings":"AAyBA;AACA,OAAAA,UAAA;AACA,OAAAC,OAAA;AAEA;EACAC,UAAA;IACAF,UAAA,EAAAA,UAAA;IACAC,OAAA,EAAAA;EACA;EACAE,OAAA,WAAAA,QAAA,GAEA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;QACAC,KAAA;QACAC,cAAA;QACAC,eAAA;MACA;MACAC,IAAA,MAAAC,IAAA;MACAC,QAAA;MACAC,cAAA;MACAT,gBAAA;IACA;EACA;EACAU,OAAA;IACAC,eAAA,WAAAA,gBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,gBAAA,WAAAA,iBAAA,GAEA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAC,OAAA;MACA,IAAAX,IAAA,OAAAC,IAAA,CACAU,OAAA,CAAAC,SAAA,QACAD,OAAA,CAAAC,SAAA,YACAD,OAAA,CAAAC,SAAA,MACA;MACA,WAAAC,IAAA,CAAAC,cAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;MACA,GAAAC,MAAA,CAAAlB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}